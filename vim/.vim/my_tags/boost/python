!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD_TO_NAMESPACE_DWA200286_HPP	/usr/include/boost/python/object/add_to_namespace.hpp	6;"	d
AIX_INIT_MODULE_DWA2002529_HPP	/usr/include/boost/python/detail/aix_init_module.hpp	6;"	d
ARGS_FWD_DWA2002927_HPP	/usr/include/boost/python/args_fwd.hpp	6;"	d
ARG_FROM_PYTHON_DWA2002127_HPP	/usr/include/boost/python/converter/arg_from_python.hpp	6;"	d
ARG_FROM_PYTHON_DWA2002128_HPP	/usr/include/boost/python/arg_from_python.hpp	6;"	d
ARG_TO_PYTHON_BASE_DWA200237_HPP	/usr/include/boost/python/converter/arg_to_python_base.hpp	6;"	d
ARG_TO_PYTHON_DWA200265_HPP	/usr/include/boost/python/converter/arg_to_python.hpp	6;"	d
AS_TO_PYTHON_FUNCTION_DWA2002121_HPP	/usr/include/boost/python/converter/as_to_python_function.hpp	6;"	d
BACK_REFERENCE_DWA2002510_HPP	/usr/include/boost/python/back_reference.hpp	6;"	d
BASES_DWA2002321_HPP	/usr/include/boost/python/bases.hpp	6;"	d
BASE_TYPE_TRAITS_DWA2002614_HPP	/usr/include/boost/python/base_type_traits.hpp	6;"	d
BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE	/usr/include/boost/python/pure_virtual.hpp	/^  error_signature(S BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE(C))$/;"	f	namespace:boost::python::detail	signature:(C)
BOOST_CSTD_	/usr/include/boost/python/detail/config.hpp	51;"	d
BOOST_CSTD_	/usr/include/boost/python/detail/config.hpp	53;"	d
BOOST_DYN_LINK	/usr/include/boost/python/detail/config.hpp	129;"	d
BOOST_EXPLICIT_TEMPLATE_TYPE	/usr/include/boost/python/register_ptr_to_python.hpp	/^void register_ptr_to_python(BOOST_EXPLICIT_TEMPLATE_TYPE(P))$/;"	f	namespace:boost::python	signature:(P)
BOOST_EXPLICIT_TEMPLATE_TYPE	/usr/include/boost/python/type_id.hpp	/^inline type_info type_id(BOOST_EXPLICIT_TEMPLATE_TYPE(T))$/;"	f	namespace:boost::python	signature:(T)
BOOST_EXTRACT_WORKAROUND	/usr/include/boost/python/extract.hpp	26;"	d
BOOST_EXTRACT_WORKAROUND	/usr/include/boost/python/extract.hpp	28;"	d
BOOST_LIB_NAME	/usr/include/boost/python/detail/config.hpp	124;"	d
BOOST_MPL_ASSERT_MSG	/usr/include/boost/python/make_constructor.hpp	/^      BOOST_MPL_ASSERT_MSG($/;"	p	struct:boost::python::detail::constructor_policy	access:public	signature:(is_same< typename BasePolicy_::result_converter , default_result_converter >::value) , MAKE_CONSTRUCTOR_SUPPLIES_ITS_OWN_RESULT_CONVERTER_THAT_WOULD_OVERRIDE_YOURS , (typename BasePolicy_::result_converter) 
BOOST_MPL_ASSERT_MSG	/usr/include/boost/python/return_opaque_pointer.hpp	/^        BOOST_MPL_ASSERT_MSG( is_pointer<R>::value, RETURN_OPAQUE_POINTER_EXPECTS_A_POINTER_TYPE, (R));$/;"	p	struct:boost::python::return_opaque_pointer::apply	access:public	signature:( is_pointer<R>::value, RETURN_OPAQUE_POINTER_EXPECTS_A_POINTER_TYPE, (R))
BOOST_MSVC6_OR_EARLIER	/usr/include/boost/python/detail/config.hpp	33;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/call.hpp	32;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/call_method.hpp	31;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/caller.hpp	132;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/defaults_def.hpp	128;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/invoke.hpp	61;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/result.hpp	35;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/result.hpp	39;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/signature.hpp	40;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/target.hpp	24;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/target.hpp	28;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/type_list_impl.hpp	27;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	38;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/object/make_holder.hpp	41;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/object/pointer_holder.hpp	100;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/object/pointer_holder.hpp	64;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/object/value_holder.hpp	49;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/object/value_holder.hpp	76;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/object_core.hpp	111;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/override.hpp	110;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/signature.hpp	115;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/signature.hpp	129;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/signature.hpp	145;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/signature.hpp	160;"	d
BOOST_PP_ITERATION_PARAMS_1	/usr/include/boost/python/tuple.hpp	64;"	d
BOOST_PP_LOCAL_LIMITS	/usr/include/boost/python/args.hpp	169;"	d
BOOST_PP_LOCAL_LIMITS	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	37;"	d
BOOST_PP_LOCAL_LIMITS	/usr/include/boost/python/numeric.hpp	129;"	d
BOOST_PP_LOCAL_LIMITS	/usr/include/boost/python/numeric.hpp	143;"	d
BOOST_PP_LOCAL_LIMITS	/usr/include/boost/python/numeric.hpp	217;"	d
BOOST_PP_LOCAL_LIMITS	/usr/include/boost/python/numeric.hpp	28;"	d
BOOST_PP_LOCAL_MACRO	/usr/include/boost/python/args.hpp	162;"	d
BOOST_PP_LOCAL_MACRO	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	28;"	d
BOOST_PP_LOCAL_MACRO	/usr/include/boost/python/numeric.hpp	124;"	d
BOOST_PP_LOCAL_MACRO	/usr/include/boost/python/numeric.hpp	138;"	d
BOOST_PP_LOCAL_MACRO	/usr/include/boost/python/numeric.hpp	212;"	d
BOOST_PP_LOCAL_MACRO	/usr/include/boost/python/numeric.hpp	26;"	d
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(char, 0);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(char, 0)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(double, 5);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(double, 5)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(float, 4);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(float, 4)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(function_ptr, 8);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(function_ptr, 8)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(int, 2);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(int, 2)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(long double, 6);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(long double, 6)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(long, 3);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(long, 3)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(member_function_ptr, 10);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(member_function_ptr, 10)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(member_ptr, 9);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(member_ptr, 9)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(short, 1);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(short, 1)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(void*, 7);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(void*, 7)
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	17;"	d
BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	39;"	d
BOOST_PYTHON_API_PLACE_HOLDER_HPP	/usr/include/boost/python/detail/api_placeholder.hpp	11;"	d
BOOST_PYTHON_APPEND_TO_INIT	/usr/include/boost/python/init.hpp	410;"	d
BOOST_PYTHON_APPLY	/usr/include/boost/python/detail/preprocessor.hpp	15;"	d
BOOST_PYTHON_APPLY_BOOST_PYTHON_ITEM	/usr/include/boost/python/detail/preprocessor.hpp	17;"	d
BOOST_PYTHON_APPLY_BOOST_PYTHON_NIL	/usr/include/boost/python/detail/preprocessor.hpp	18;"	d
BOOST_PYTHON_ARG_CONVERTER	/usr/include/boost/python/detail/caller.hpp	125;"	d
BOOST_PYTHON_ARG_CONVERTER	/usr/include/boost/python/detail/caller.hpp	136;"	d
BOOST_PYTHON_ARG_TO_PYTHON_BY_VALUE	/usr/include/boost/python/converter/builtin_converters.hpp	177;"	d
BOOST_PYTHON_ARG_TO_PYTHON_BY_VALUE	/usr/include/boost/python/converter/builtin_converters.hpp	76;"	d
BOOST_PYTHON_ASSIGN_NAME	/usr/include/boost/python/args.hpp	161;"	d
BOOST_PYTHON_AS_OBJECT	/usr/include/boost/python/numeric.hpp	219;"	d
BOOST_PYTHON_BASE_PARAMS	/usr/include/boost/python/bases.hpp	18;"	d
BOOST_PYTHON_BASE_PARAMS	/usr/include/boost/python/bases.hpp	65;"	d
BOOST_PYTHON_BEGIN_CONVERSION_NAMESPACE	/usr/include/boost/python/detail/config.hpp	20;"	d
BOOST_PYTHON_BEGIN_CONVERSION_NAMESPACE	/usr/include/boost/python/detail/config.hpp	25;"	d
BOOST_PYTHON_BINARY_ENUM	/usr/include/boost/python/detail/preprocessor.hpp	53;"	d
BOOST_PYTHON_BINARY_ENUM_I	/usr/include/boost/python/detail/preprocessor.hpp	54;"	d
BOOST_PYTHON_BINARY_OPERATION	/usr/include/boost/python/operators.hpp	164;"	d
BOOST_PYTHON_BINARY_OPERATION	/usr/include/boost/python/operators.hpp	236;"	d
BOOST_PYTHON_BINARY_OPERATOR	/usr/include/boost/python/object_operators.hpp	110;"	d
BOOST_PYTHON_BINARY_OPERATOR	/usr/include/boost/python/object_operators.hpp	87;"	d
BOOST_PYTHON_BINARY_OPERATOR	/usr/include/boost/python/operators.hpp	200;"	d
BOOST_PYTHON_BINARY_OPERATOR	/usr/include/boost/python/operators.hpp	232;"	d
BOOST_PYTHON_BINARY_RETURN	/usr/include/boost/python/object_operators.hpp	45;"	d
BOOST_PYTHON_BINARY_RETURN	/usr/include/boost/python/object_operators.hpp	47;"	d
BOOST_PYTHON_BUILD_DLL	/usr/include/boost/python/detail/config.hpp	80;"	d
BOOST_PYTHON_BUILD_DLL	/usr/include/boost/python/detail/config.hpp	89;"	d
BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Dict);$/;"	p	namespace:boost::python::converter	signature:(Dict)
BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Int);$/;"	p	namespace:boost::python::converter	signature:(Int)
BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(List);$/;"	p	namespace:boost::python::converter	signature:(List)
BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Long);$/;"	p	namespace:boost::python::converter	signature:(Long)
BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Tuple);$/;"	p	namespace:boost::python::converter	signature:(Tuple)
BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Type);$/;"	p	namespace:boost::python::converter	signature:(Type)
BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	30;"	d
BOOST_PYTHON_COMPARE_OP	/usr/include/boost/python/object_operators.hpp	78;"	d
BOOST_PYTHON_COMPARE_OP	/usr/include/boost/python/object_operators.hpp	85;"	d
BOOST_PYTHON_CONVERSION	/usr/include/boost/python/detail/config.hpp	22;"	d
BOOST_PYTHON_CONVERSION	/usr/include/boost/python/detail/config.hpp	27;"	d
BOOST_PYTHON_CV_COUNT	/usr/include/boost/python/detail/preprocessor.hpp	23;"	d
BOOST_PYTHON_CV_COUNT	/usr/include/boost/python/detail/preprocessor.hpp	25;"	d
BOOST_PYTHON_CV_QUALIFIER	/usr/include/boost/python/detail/preprocessor.hpp	36;"	d
BOOST_PYTHON_CV_QUALIFIER_I	/usr/include/boost/python/detail/preprocessor.hpp	41;"	d
BOOST_PYTHON_DATA_MEMBER_HELPER	/usr/include/boost/python/class.hpp	102;"	d
BOOST_PYTHON_DATA_MEMBER_HELPER	/usr/include/boost/python/class.hpp	650;"	d
BOOST_PYTHON_DATA_MEMBER_HELPER	/usr/include/boost/python/class.hpp	94;"	d
BOOST_PYTHON_DATA_MEMBER_HELPER	/usr/include/boost/python/class.hpp	98;"	d
BOOST_PYTHON_DECL	/usr/include/boost/python/detail/config.hpp	79;"	d
BOOST_PYTHON_DECL	/usr/include/boost/python/detail/config.hpp	82;"	d
BOOST_PYTHON_DECL	/usr/include/boost/python/detail/config.hpp	88;"	d
BOOST_PYTHON_DECL	/usr/include/boost/python/detail/config.hpp	91;"	d
BOOST_PYTHON_DECL	/usr/include/boost/python/detail/config.hpp	98;"	d
BOOST_PYTHON_DECL_EXCEPTION	/usr/include/boost/python/detail/config.hpp	106;"	d
BOOST_PYTHON_DECL_EXCEPTION	/usr/include/boost/python/detail/config.hpp	85;"	d
BOOST_PYTHON_DECL_FORWARD	/usr/include/boost/python/detail/config.hpp	102;"	d
BOOST_PYTHON_DECL_FORWARD	/usr/include/boost/python/detail/config.hpp	84;"	d
BOOST_PYTHON_DETAIL_DEALLOC_HPP_	/usr/include/boost/python/detail/dealloc.hpp	7;"	d
BOOST_PYTHON_DO_FORWARD_ARG	/usr/include/boost/python/object/make_holder.hpp	38;"	d
BOOST_PYTHON_DO_FORWARD_ARG	/usr/include/boost/python/object/make_holder.hpp	44;"	d
BOOST_PYTHON_DYNAMIC_LIB	/usr/include/boost/python/detail/config.hpp	66;"	d
BOOST_PYTHON_END_CONVERSION_NAMESPACE	/usr/include/boost/python/detail/config.hpp	21;"	d
BOOST_PYTHON_END_CONVERSION_NAMESPACE	/usr/include/boost/python/detail/config.hpp	26;"	d
BOOST_PYTHON_ENUM_AS_OBJECT	/usr/include/boost/python/numeric.hpp	211;"	d
BOOST_PYTHON_ENUM_WITH_DEFAULT	/usr/include/boost/python/detail/preprocessor.hpp	56;"	d
BOOST_PYTHON_ENUM_WITH_DEFAULT_I	/usr/include/boost/python/detail/preprocessor.hpp	57;"	d
BOOST_PYTHON_EXPLICIT_TT_DEF	/usr/include/boost/python/type_id.hpp	/^inline type_info type_id<const volatile void>(BOOST_PYTHON_EXPLICIT_TT_DEF(const volatile void))$/;"	f	namespace:boost::python	signature:(const volatile void)
BOOST_PYTHON_EXPLICIT_TT_DEF	/usr/include/boost/python/type_id.hpp	/^inline type_info type_id<void>(BOOST_PYTHON_EXPLICIT_TT_DEF(void))$/;"	f	namespace:boost::python	signature:(void)
BOOST_PYTHON_EXPLICIT_TT_DEF	/usr/include/boost/python/type_id.hpp	73;"	d
BOOST_PYTHON_EXPLICIT_TT_DEF	/usr/include/boost/python/type_id.hpp	75;"	d
BOOST_PYTHON_FAST_ARG_TO_PYTHON_GET	/usr/include/boost/python/call.hpp	29;"	d
BOOST_PYTHON_FAST_ARG_TO_PYTHON_GET	/usr/include/boost/python/call.hpp	35;"	d
BOOST_PYTHON_FAST_ARG_TO_PYTHON_GET	/usr/include/boost/python/call_method.hpp	28;"	d
BOOST_PYTHON_FAST_ARG_TO_PYTHON_GET	/usr/include/boost/python/call_method.hpp	34;"	d
BOOST_PYTHON_FIXED	/usr/include/boost/python/detail/preprocessor.hpp	60;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	113;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	120;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	126;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	134;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	143;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	150;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	158;"	d
BOOST_PYTHON_FN_CC	/usr/include/boost/python/signature.hpp	165;"	d
BOOST_PYTHON_FN_CC_IS_CDECL	/usr/include/boost/python/signature.hpp	127;"	d
BOOST_PYTHON_FN_CC_IS_CDECL	/usr/include/boost/python/signature.hpp	135;"	d
BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS	/usr/include/boost/python/numeric.hpp	/^      BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS(array_base, object);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(array_base, object)
BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS	/usr/include/boost/python/numeric.hpp	/^    BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS(array, base);$/;"	p	class:boost::python::numeric::array	access:public	signature:(array, base)
BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS	/usr/include/boost/python/object_core.hpp	360;"	d
BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS	/usr/include/boost/python/object_core.hpp	370;"	d
BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS_	/usr/include/boost/python/object_core.hpp	351;"	d
BOOST_PYTHON_FUNCTION_GENERATOR	/usr/include/boost/python/detail/defaults_gen.hpp	382;"	d
BOOST_PYTHON_FUNCTION_OVERLOADS	/usr/include/boost/python/detail/defaults_gen.hpp	367;"	d
BOOST_PYTHON_FUNCTION_POINTER	/usr/include/boost/python/detail/preprocessor.hpp	63;"	d
BOOST_PYTHON_FUNC_WRAPPER_GEN	/usr/include/boost/python/detail/defaults_gen.hpp	125;"	d
BOOST_PYTHON_GEN_FUNCTION	/usr/include/boost/python/detail/defaults_gen.hpp	138;"	d
BOOST_PYTHON_GEN_FUNCTION_STUB	/usr/include/boost/python/detail/defaults_gen.hpp	230;"	d
BOOST_PYTHON_GEN_MEM_FUNCTION	/usr/include/boost/python/detail/defaults_gen.hpp	177;"	d
BOOST_PYTHON_GEN_MEM_FUNCTION_STUB	/usr/include/boost/python/detail/defaults_gen.hpp	242;"	d
BOOST_PYTHON_HAVE_CXXABI_CXA_DEMANGLE_IS_BROKEN	/usr/include/boost/python/type_id.hpp	45;"	d
BOOST_PYTHON_HAVE_GCC_CP_DEMANGLE	/usr/include/boost/python/type_id.hpp	24;"	d
BOOST_PYTHON_IMPORT_CONVERSION	/usr/include/boost/python/detail/config.hpp	23;"	d
BOOST_PYTHON_IMPORT_CONVERSION	/usr/include/boost/python/detail/config.hpp	28;"	d
BOOST_PYTHON_INDEXING_CHECK_INVARIANT	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	22;"	d
BOOST_PYTHON_INPLACE_OPERATOR	/usr/include/boost/python/object_operators.hpp	113;"	d
BOOST_PYTHON_INPLACE_OPERATOR	/usr/include/boost/python/object_operators.hpp	130;"	d
BOOST_PYTHON_INPLACE_OPERATOR	/usr/include/boost/python/operators.hpp	274;"	d
BOOST_PYTHON_INPLACE_OPERATOR	/usr/include/boost/python/operators.hpp	342;"	d
BOOST_PYTHON_IS_LIST_ARG	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	43;"	d
BOOST_PYTHON_IS_LIST_ARG	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	78;"	d
BOOST_PYTHON_IS_OPTIONAL_VALUE	/usr/include/boost/python/init.hpp	409;"	d
BOOST_PYTHON_IS_XXX_DEF	/usr/include/boost/python/detail/is_xxx.hpp	10;"	d
BOOST_PYTHON_LIST_ACTUAL_PARAMS	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	35;"	d
BOOST_PYTHON_LIST_ACTUAL_PARAMS	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	81;"	d
BOOST_PYTHON_LIST_FORMAL_PARAMS	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	36;"	d
BOOST_PYTHON_LIST_FORMAL_PARAMS	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	80;"	d
BOOST_PYTHON_LIST_INC	/usr/include/boost/python/signature.hpp	169;"	d
BOOST_PYTHON_LIST_INC	/usr/include/boost/python/signature.hpp	33;"	d
BOOST_PYTHON_LIST_SIZE	/usr/include/boost/python/detail/type_list.hpp	13;"	d
BOOST_PYTHON_LIST_SIZE	/usr/include/boost/python/detail/type_list.hpp	15;"	d
BOOST_PYTHON_LONGLONG_MAX_UNDEFINED	/usr/include/boost/python/detail/wrap_python.hpp	152;"	d
BOOST_PYTHON_LONGLONG_MAX_UNDEFINED	/usr/include/boost/python/detail/wrap_python.hpp	66;"	d
BOOST_PYTHON_LONG_LONG	/usr/include/boost/python/detail/wrap_python.hpp	199;"	d
BOOST_PYTHON_LONG_LONG	/usr/include/boost/python/detail/wrap_python.hpp	201;"	d
BOOST_PYTHON_MAKE_TUPLE_ARG	/usr/include/boost/python/detail/make_tuple.hpp	13;"	d
BOOST_PYTHON_MAKE_TUPLE_ARG	/usr/include/boost/python/detail/make_tuple.hpp	29;"	d
BOOST_PYTHON_MAX_ARITY	/usr/include/boost/python/detail/preprocessor.hpp	29;"	d
BOOST_PYTHON_MAX_BASES	/usr/include/boost/python/detail/preprocessor.hpp	33;"	d
BOOST_PYTHON_MEMBER_FUNCTION_OVERLOADS	/usr/include/boost/python/detail/defaults_gen.hpp	374;"	d
BOOST_PYTHON_MEM_FUNC_WRAPPER_GEN	/usr/include/boost/python/detail/defaults_gen.hpp	165;"	d
BOOST_PYTHON_MEM_FUN_GENERATOR	/usr/include/boost/python/detail/defaults_gen.hpp	383;"	d
BOOST_PYTHON_MODULE	/usr/include/boost/python/module.hpp	11;"	d
BOOST_PYTHON_MODULE_INIT	/usr/include/boost/python/module_init.hpp	71;"	d
BOOST_PYTHON_MPL_LAMBDA_SUPPORT	/usr/include/boost/python/detail/mpl_lambda.hpp	10;"	d
BOOST_PYTHON_NEXT	/usr/include/boost/python/detail/caller.hpp	122;"	d
BOOST_PYTHON_NEXT	/usr/include/boost/python/detail/caller.hpp	137;"	d
BOOST_PYTHON_NO_ARRAY_ARG	/usr/include/boost/python/object_protocol.hpp	21;"	d
BOOST_PYTHON_NO_DATA_MEMBER	/usr/include/boost/python/class.hpp	100;"	d
BOOST_PYTHON_NO_DATA_MEMBER	/usr/include/boost/python/class.hpp	104;"	d
BOOST_PYTHON_NO_DATA_MEMBER	/usr/include/boost/python/class.hpp	652;"	d
BOOST_PYTHON_NO_DATA_MEMBER	/usr/include/boost/python/class.hpp	96;"	d
BOOST_PYTHON_NO_MEMBER_POINTER_ORDERING	/usr/include/boost/python/class.hpp	51;"	d
BOOST_PYTHON_NO_MEMBER_POINTER_ORDERING	/usr/include/boost/python/class.hpp	653;"	d
BOOST_PYTHON_NO_SFINAE	/usr/include/boost/python/detail/sfinae.hpp	10;"	d
BOOST_PYTHON_OBJECT_HAS_IS_NONE	/usr/include/boost/python/object_core.hpp	8;"	d
BOOST_PYTHON_OBJECT_PICKLE_SUPPORT_RWGK20020603_HPP	/usr/include/boost/python/object/pickle_support.hpp	6;"	d
BOOST_PYTHON_OBJECT_PYTHON_TYPE_H	/usr/include/boost/python/detail/python_type.hpp	6;"	d
BOOST_PYTHON_OFFSETOF	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    BOOST_STATIC_ASSERT(BOOST_PYTHON_OFFSETOF(rvalue_from_python_storage<T>,stage1) == 0);$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:(rvalue_from_python_storage<T>,stage1)
BOOST_PYTHON_OFFSETOF	/usr/include/boost/python/detail/config.hpp	111;"	d
BOOST_PYTHON_OFFSETOF	/usr/include/boost/python/detail/config.hpp	114;"	d
BOOST_PYTHON_OPAQUE_SPECIALIZED_TYPE_ID	/usr/include/boost/python/opaque_pointer_converter.hpp	177;"	d
BOOST_PYTHON_OVERLOAD_ARGS	/usr/include/boost/python/init.hpp	408;"	d
BOOST_PYTHON_OVERLOAD_ARGS	/usr/include/boost/python/init.hpp	49;"	d
BOOST_PYTHON_OVERLOAD_CONSTRUCTORS	/usr/include/boost/python/detail/defaults_gen.hpp	206;"	d
BOOST_PYTHON_OVERLOAD_TYPES	/usr/include/boost/python/init.hpp	407;"	d
BOOST_PYTHON_OVERLOAD_TYPES	/usr/include/boost/python/init.hpp	44;"	d
BOOST_PYTHON_OVERLOAD_TYPES_WITH_DEFAULT	/usr/include/boost/python/init.hpp	38;"	d
BOOST_PYTHON_OVERLOAD_TYPES_WITH_DEFAULT	/usr/include/boost/python/init.hpp	406;"	d
BOOST_PYTHON_PLUS	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	42;"	d
BOOST_PYTHON_PLUS	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	79;"	d
BOOST_PYTHON_POINTER_TO_MEMBER	/usr/include/boost/python/detail/preprocessor.hpp	64;"	d
BOOST_PYTHON_PROXY_INPLACE	/usr/include/boost/python/proxy.hpp	74;"	d
BOOST_PYTHON_PROXY_INPLACE	/usr/include/boost/python/proxy.hpp	91;"	d
BOOST_PYTHON_RETURN_TO_PYTHON_BY_VALUE	/usr/include/boost/python/converter/builtin_converters.hpp	176;"	d
BOOST_PYTHON_RETURN_TO_PYTHON_BY_VALUE	/usr/include/boost/python/converter/builtin_converters.hpp	50;"	d
BOOST_PYTHON_SELF_IS_CLASS	/usr/include/boost/python/self.hpp	12;"	d
BOOST_PYTHON_SIGNED_INTEGRAL_TYPE_ID	/usr/include/boost/python/type_id.hpp	100;"	d
BOOST_PYTHON_SIGNED_INTEGRAL_TYPE_ID	/usr/include/boost/python/type_id.hpp	115;"	d
BOOST_PYTHON_SLICE_JDB20040105_HPP	/usr/include/boost/python/slice.hpp	2;"	d
BOOST_PYTHON_SSIZE_T_RWGK20060924_HPP	/usr/include/boost/python/ssize_t.hpp	7;"	d
BOOST_PYTHON_STATIC_LINK	/usr/include/boost/python/detail/config.hpp	64;"	d
BOOST_PYTHON_SUPPORTS_PY_SIGNATURES	/usr/include/boost/python/detail/config.hpp	138;"	d
BOOST_PYTHON_TO_INT	/usr/include/boost/python/converter/builtin_converters.hpp	179;"	d
BOOST_PYTHON_TO_INT	/usr/include/boost/python/converter/builtin_converters.hpp	95;"	d
BOOST_PYTHON_TO_PYTHON_BY_VALUE	/usr/include/boost/python/converter/builtin_converters.hpp	178;"	d
BOOST_PYTHON_TO_PYTHON_BY_VALUE	/usr/include/boost/python/converter/builtin_converters.hpp	88;"	d
BOOST_PYTHON_TYPEDEF_GEN	/usr/include/boost/python/detail/defaults_gen.hpp	119;"	d
BOOST_PYTHON_TYPE_ID_NAME	/usr/include/boost/python/type_id.hpp	38;"	d
BOOST_PYTHON_ULONGLONG_MAX_UNDEFINED	/usr/include/boost/python/detail/wrap_python.hpp	157;"	d
BOOST_PYTHON_ULONGLONG_MAX_UNDEFINED	/usr/include/boost/python/detail/wrap_python.hpp	69;"	d
BOOST_PYTHON_ULONG_MAX_UNDEFINED	/usr/include/boost/python/detail/wrap_python.hpp	147;"	d
BOOST_PYTHON_ULONG_MAX_UNDEFINED	/usr/include/boost/python/detail/wrap_python.hpp	63;"	d
BOOST_PYTHON_UNARY_ENUM	/usr/include/boost/python/detail/preprocessor.hpp	50;"	d
BOOST_PYTHON_UNARY_ENUM_I	/usr/include/boost/python/detail/preprocessor.hpp	51;"	d
BOOST_PYTHON_UNARY_OPERATOR	/usr/include/boost/python/operators.hpp	316;"	d
BOOST_PYTHON_UNARY_OPERATOR	/usr/include/boost/python/operators.hpp	359;"	d
BOOST_PYTHON_UNFORWARD	/usr/include/boost/python/instance_holder.hpp	51;"	d
BOOST_PYTHON_UNFORWARD_LOCAL	/usr/include/boost/python/object/pointer_holder.hpp	110;"	d
BOOST_PYTHON_UNFORWARD_LOCAL	/usr/include/boost/python/object/pointer_holder.hpp	50;"	d
BOOST_PYTHON_UNFORWARD_LOCAL	/usr/include/boost/python/object/value_holder.hpp	37;"	d
BOOST_PYTHON_UNFORWARD_LOCAL	/usr/include/boost/python/object/value_holder.hpp	86;"	d
BOOST_PYTHON_USE_GCC_SYMBOL_VISIBILITY	/usr/include/boost/python/detail/config.hpp	74;"	d
BOOST_PYTHON_VALUE_IS_XXX_DEF	/usr/include/boost/python/detail/value_is_xxx.hpp	16;"	d
BOOST_PYTHON_VALUE_IS_XXX_DEF	/usr/include/boost/python/detail/value_is_xxx.hpp	46;"	d
BOOST_PYTHON_YES_DATA_MEMBER	/usr/include/boost/python/class.hpp	103;"	d
BOOST_PYTHON_YES_DATA_MEMBER	/usr/include/boost/python/class.hpp	651;"	d
BOOST_PYTHON_YES_DATA_MEMBER	/usr/include/boost/python/class.hpp	95;"	d
BOOST_PYTHON_YES_DATA_MEMBER	/usr/include/boost/python/class.hpp	99;"	d
BOOST_PYTHON_fast_arg_to_python_get	/usr/include/boost/python/override.hpp	107;"	d
BOOST_PYTHON_fast_arg_to_python_get	/usr/include/boost/python/override.hpp	113;"	d
BOOST_STATIC_ASSERT	/usr/include/boost/python/make_constructor.hpp	/^      BOOST_STATIC_ASSERT(same_result_converter::value) ;$/;"	p	struct:boost::python::detail::constructor_policy	access:public	signature:(same_result_converter::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::detail::is_reference_to_keywords	access:public	signature:( bool, value = ( sizeof(detail::is_keywords_test( (void (*)(T))0 )) == sizeof(detail::yes_keywords_t)))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_key = is_keywords<key_t>::value);$/;"	p	struct:boost::python::detail::is_reference_to_keywords	access:public	signature:(bool, is_key = is_keywords<key_t>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_ref = is_reference<T>::value);$/;"	p	struct:boost::python::detail::is_reference_to_keywords	access:public	signature:(bool, is_ref = is_reference<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = (is_ref & is_key));$/;"	p	struct:boost::python::detail::is_reference_to_keywords	access:public	signature:(bool, value = (is_ref & is_key))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	struct:boost::python::detail::is_keywords	access:public	signature:(bool, value = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	struct:boost::python::detail::is_keywords	access:public	signature:(bool, value = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(std::size_t, size = nkeywords);$/;"	p	struct:boost::python::detail::keywords_base	access:public	signature:(std::size_t, size = nkeywords)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/args_fwd.hpp	/^      BOOST_STATIC_CONSTANT(std::size_t, size = 0);$/;"	p	struct:boost::python::detail::keywords	access:public	signature:(std::size_t, size = 0)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/back_reference.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::is_back_reference	access:public	signature:( bool, value = ( sizeof(detail::is_back_reference_test(boost::type<T>())) == sizeof(detail::yes_back_reference_t)))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/back_reference.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	class:boost::python::is_back_reference	access:public	signature:(bool, value = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/back_reference.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	class:boost::python::is_back_reference	access:public	signature:(bool, value = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/class.hpp	/^        BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::class_::id_vector	access:public	signature:( std::size_t, size = mpl::size<bases>::value + 1)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/builtin_converters.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = false);$/;"	p	struct:boost::python::detail::builtin_to_python	access:public	signature:(bool, uses_registry = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/object_manager.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::is_reference_to_object_manager_ref	access:public	signature:( bool, value = (sizeof(is_object_manager_helper(&sample_object, &sample_object).call()) == sizeof(detail::yes_reference_to_object_manager) ) )
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/object_manager.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::default_object_manager_traits	access:public	signature:( bool, is_specialized = python::detail::is_borrowed_ptr<T>::value )
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/object_manager.hpp	/^  BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::handle_object_manager_traits	access:public	signature:(bool, is_specialized = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^    BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::pytype_object_manager_traits	access:public	signature:(bool, is_specialized = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/return_from_python.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::select_return_from_python	access:public	signature:( bool, obj_mgr = is_object_manager<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/return_from_python.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::select_return_from_python	access:public	signature:( bool, ptr = is_pointer<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/return_from_python.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::select_return_from_python	access:public	signature:( bool, ref = is_reference<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::detail::is_borrowed_ptr	access:public	signature:( bool, value = ( sizeof(detail::is_borrowed_ptr_test(is_borrowed_ptr_test1(boost::type<T>()))) == sizeof(detail::yes_borrowed_ptr_t)))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	struct:boost::python::detail::is_borrowed_ptr	access:public	signature:(bool, value = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false);$/;"	p	struct:boost::python::detail::is_borrowed	access:public	signature:(bool, value = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	struct:boost::python::detail::is_borrowed	access:public	signature:(bool, value = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	struct:boost::python::detail::is_borrowed_ptr	access:public	signature:(bool, value = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/cv_category.hpp	/^    BOOST_STATIC_CONSTANT(bool, is_const = is_const_);$/;"	p	struct:boost::python::detail::cv_tag	access:public	signature:(bool, is_const = is_const_)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/cv_category.hpp	/^    BOOST_STATIC_CONSTANT(bool, is_volatile = is_const_);$/;"	p	struct:boost::python::detail::cv_tag	access:public	signature:(bool, is_volatile = is_const_)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/def_helper.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::detail::def_helper	access:public	signature:( bool, has_default_implementation = ( !is_same<default_implementation_t, void(not_specified::*)()>::value))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/def_helper.hpp	/^      BOOST_STATIC_CONSTANT(bool, match = match_t::value);$/;"	p	struct:boost::python::detail::tuple_extract_base_select	access:public	signature:(bool, match = match_t::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/if_else.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false);$/;"	p	struct:boost::python::detail::msvc70_aux::never_true	access:public	signature:(bool, value = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/referent_storage.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::detail::referent_size	access:public	signature:( std::size_t, value = sizeof(T))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/referent_storage.hpp	/^      BOOST_STATIC_CONSTANT(std::size_t, value = sizeof(f()));$/;"	p	struct:boost::python::detail::referent_size	access:public	signature:(std::size_t, value = sizeof(f()))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/extract.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::select_extract	access:public	signature:( bool, obj_mgr = is_object_manager<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/extract.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::select_extract	access:public	signature:( bool, ptr = is_pointer<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/extract.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::select_extract	access:public	signature:( bool, ref = is_reference<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/handle.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::is_handle	access:public	signature:( bool, value = ( sizeof(detail::is_handle_test(boost::type<T>())) == sizeof(detail::yes_handle_t)))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/handle.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	class:boost::python::is_handle	access:public	signature:(bool, value = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/handle.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	class:boost::python::is_handle	access:public	signature:(bool, value = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/init.hpp	/^        BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::detail::is_optional	access:public	signature:( bool, value = sizeof(f(t())) == sizeof(::boost::type_traits::yes_type))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/numeric.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::object_manager_traits	access:public	signature:(bool, is_specialized = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/object/forward.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::objects::detail::is_reference_to_value	access:public	signature:( bool, value = ( sizeof(is_reference_to_value_test(boost::type<T>())) == sizeof(yes_reference_to_value_t)))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/object/instance.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::objects::additional_instance_size	access:public	signature:( std::size_t, value = sizeof(instance_data) - BOOST_PYTHON_OFFSETOF(instance_char,storage))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/object_core.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::object_manager_traits	access:public	signature:(bool, is_specialized = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/object_core.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = sizeof(test(to_pointer(x))) == 1);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(bool, value = sizeof(test(to_pointer(x))) == 1)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/other.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	class:boost::python::detail::is_other	access:public	signature:(bool, value = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/other.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	class:boost::python::detail::is_other	access:public	signature:(bool, value = true)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/ptr.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::is_pointer_wrapper	access:public	signature:( bool, value = ( sizeof(detail::is_pointer_wrapper_test(boost::type<T>())) == sizeof(detail::yes_pointer_wrapper_t)))
BOOST_STATIC_CONSTANT	/usr/include/boost/python/reference_existing_object.hpp	/^        BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::reference_existing_object::apply	access:public	signature:( bool, ok = is_pointer<T>::value || is_reference<T>::value)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/return_arg.hpp	/^    BOOST_STATIC_CONSTANT(bool, legal = arg_pos > 0);$/;"	p	struct:boost::python::return_arg	access:private	signature:(bool, legal = arg_pos > 0)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/return_internal_reference.hpp	/^    BOOST_STATIC_CONSTANT(bool, legal = owner_arg > 0);$/;"	p	struct:boost::python::return_internal_reference	access:private	signature:(bool, legal = owner_arg > 0)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/to_python_value.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = false);$/;"	p	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(bool, uses_registry = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/to_python_value.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = false);$/;"	p	struct:boost::python::detail::shared_ptr_to_python_value	access:public	signature:(bool, uses_registry = false)
BOOST_STATIC_CONSTANT	/usr/include/boost/python/to_python_value.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = true);$/;"	p	struct:boost::python::detail::registry_to_python_value	access:public	signature:(bool, uses_registry = true)
BOOST_TO_PYTHON_INT	/usr/include/boost/python/converter/builtin_converters.hpp	153;"	d
BORROWED_DWA2002614_HPP	/usr/include/boost/python/borrowed.hpp	6;"	d
BORROWED_PTR_DWA20020601_HPP	/usr/include/boost/python/detail/borrowed_ptr.hpp	2;"	d
BUILTIN_CONVERTERS_DWA2002124_HPP	/usr/include/boost/python/converter/builtin_converters.hpp	6;"	d
BY_VALUE_DWA20021015_HPP	/usr/include/boost/python/return_by_value.hpp	6;"	d
CALLER_DWA20021121_HPP	/usr/include/boost/python/detail/caller.hpp	9;"	d
CALL_DWA2002411_HPP	/usr/include/boost/python/call.hpp	9;"	d
CALL_METHOD_DWA2002411_HPP	/usr/include/boost/python/call_method.hpp	8;"	d
CAST_DWA200269_HPP	/usr/include/boost/python/cast.hpp	6;"	d
CLASS_DETAIL_DWA200295_HPP	/usr/include/boost/python/object/class_detail.hpp	6;"	d
CLASS_DWA20011214_HPP	/usr/include/boost/python/object/class.hpp	6;"	d
CLASS_DWA200216_HPP	/usr/include/boost/python/class.hpp	6;"	d
CLASS_FWD_DWA200222_HPP	/usr/include/boost/python/class_fwd.hpp	6;"	d
CLASS_METADATA_DWA2004719_HPP	/usr/include/boost/python/object/class_metadata.hpp	5;"	d
CLASS_WRAPPER_DWA20011221_HPP	/usr/include/boost/python/object/class_wrapper.hpp	6;"	d
CONFIG_DWA052200_H_	/usr/include/boost/python/detail/config.hpp	13;"	d
CONSTRUCTOR_FUNCTION_DWA200278_HPP	/usr/include/boost/python/converter/constructor_function.hpp	6;"	d
CONSTRUCT_REFERENCE_DWA2002716_HPP	/usr/include/boost/python/detail/construct.hpp	6;"	d
CONTEXT_RESULT_CONVERTER_DWA2003917_HPP	/usr/include/boost/python/converter/context_result_converter.hpp	6;"	d
CONVERTIBLE_DWA2002614_HPP	/usr/include/boost/python/detail/convertible.hpp	6;"	d
CONVERTIBLE_FUNCTION_DWA200278_HPP	/usr/include/boost/python/converter/convertible_function.hpp	6;"	d
COPY_CONST_REFERENCE_DWA2002131_HPP	/usr/include/boost/python/copy_const_reference.hpp	6;"	d
COPY_CTOR_MUTATES_RHS_DWA2003219_HPP	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	6;"	d
COPY_NON_CONST_REFERENCE_DWA2002131_HPP	/usr/include/boost/python/copy_non_const_reference.hpp	6;"	d
CV_CATEGORY_DWA200222_HPP	/usr/include/boost/python/detail/cv_category.hpp	6;"	d
DATA_MEMBERS_DWA2002328_HPP	/usr/include/boost/python/data_members.hpp	6;"	d
DEBUG_UNDEFINED_FROM_WRAP_PYTHON_H	/usr/include/boost/python/detail/wrap_python.hpp	165;"	d
DEBUG_UNDEFINED_FROM_WRAP_PYTHON_H	/usr/include/boost/python/detail/wrap_python.hpp	46;"	d
DECORATED_TYPE_ID_DWA2002517_HPP	/usr/include/boost/python/detail/decorated_type_id.hpp	6;"	d
DECREF_GUARD_DWA20021220_HPP	/usr/include/boost/python/detail/decref_guard.hpp	6;"	d
DEFAULTS_DEF_JDG20020811_HPP	/usr/include/boost/python/detail/defaults_def.hpp	12;"	d
DEFAULTS_GEN_JDG20020807_HPP	/usr/include/boost/python/detail/defaults_gen.hpp	10;"	d
DEFAULT_CALL_POLICIES_DWA2002131_HPP	/usr/include/boost/python/default_call_policies.hpp	6;"	d
DEF_DWA200292_HPP	/usr/include/boost/python/def.hpp	6;"	d
DEF_HELPER_DWA200287_HPP	/usr/include/boost/python/detail/def_helper.hpp	6;"	d
DEF_HELPER_FWD_DWA2003810_HPP	/usr/include/boost/python/detail/def_helper_fwd.hpp	6;"	d
DEF_VISITOR_DWA2003810_HPP	/usr/include/boost/python/def_visitor.hpp	6;"	d
DEPENDENT_DWA200286_HPP	/usr/include/boost/python/detail/dependent.hpp	6;"	d
DESTROY_DWA2002221_HPP	/usr/include/boost/python/detail/destroy.hpp	6;"	d
DICT_20020706_HPP	/usr/include/boost/python/dict.hpp	6;"	d
DL_EXPORT	/usr/include/boost/python/detail/python22_fixed.h	49;"	d
DL_EXPORT	/usr/include/boost/python/detail/wrap_python.hpp	116;"	d
DL_IMPORT	/usr/include/boost/python/detail/python22_fixed.h	46;"	d
DL_IMPORT	/usr/include/boost/python/detail/wrap_python.hpp	111;"	d
DL_IMPORT	/usr/include/boost/python/detail/wrap_python.hpp	115;"	d
DOCSTRING_OPTIONS_RWGK20060111_HPP	/usr/include/boost/python/docstring_options.hpp	6;"	d
ENABLE_IF_DWA2004722_HPP	/usr/include/boost/python/detail/enable_if.hpp	5;"	d
ENUM_BASE_DWA200298_HPP	/usr/include/boost/python/object/enum_base.hpp	6;"	d
ENUM_DWA200298_HPP	/usr/include/boost/python/enum.hpp	6;"	d
ERRORS_DWA052500_H_	/usr/include/boost/python/errors.hpp	10;"	d
EXCEPTION_HANDLER_DWA2002810_HPP	/usr/include/boost/python/detail/exception_handler.hpp	6;"	d
EXCEPTION_TRANSLATOR_DWA2002810_HPP	/usr/include/boost/python/exception_translator.hpp	6;"	d
EXEC_SS20050616_HPP	/usr/include/boost/python/exec.hpp	6;"	d
EXTRACT_DWA200265_HPP	/usr/include/boost/python/extract.hpp	6;"	d
FIND_FROM_PYTHON_DWA2002223_HPP	/usr/include/boost/python/converter/from_python.hpp	6;"	d
FIND_INSTANCE_DWA2002312_HPP	/usr/include/boost/python/object/find_instance.hpp	6;"	d
FORCE_INSTANTIATE_DWA200265_HPP	/usr/include/boost/python/detail/force_instantiate.hpp	6;"	d
FORWARD_DWA20011215_HPP	/usr/include/boost/python/object/forward.hpp	6;"	d
FROM_PYTHON_AUX_DATA_DWA2002128_HPP	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	6;"	d
FUNCTION_DWA20011214_HPP	/usr/include/boost/python/object/function.hpp	6;"	d
FUNCTION_HANDLE_DWA2002725_HPP	/usr/include/boost/python/object/function_handle.hpp	6;"	d
FUNCTION_OBJECT_DWA2002725_HPP	/usr/include/boost/python/object/function_object.hpp	6;"	d
FUNCTION_SIGNATURE_20070531_HPP	/usr/include/boost/python/object/function_doc_signature.hpp	6;"	d
HANDLE_DWA200269_HPP	/usr/include/boost/python/handle.hpp	6;"	d
HANDLE_FWD_DWA2002615_HPP	/usr/include/boost/python/handle_fwd.hpp	6;"	d
HAS_BACK_REFERENCE_DWA2002323_HPP	/usr/include/boost/python/has_back_reference.hpp	6;"	d
HAVE_CLOCK	/usr/include/boost/python/detail/wrap_python.hpp	99;"	d
HAVE_HYPOT	/usr/include/boost/python/detail/wrap_python.hpp	133;"	d
HAVE_HYPOT	/usr/include/boost/python/detail/wrap_python.hpp	134;"	d
HAVE_LONG_LONG	/usr/include/boost/python/detail/wrap_python.hpp	119;"	d
HAVE_STDINT_H	/usr/include/boost/python/detail/wrap_python.hpp	54;"	d
HAVE_STRERROR	/usr/include/boost/python/detail/wrap_python.hpp	101;"	d
HAVE_STRFTIME	/usr/include/boost/python/detail/wrap_python.hpp	100;"	d
HasGetPytype	/usr/include/boost/python/to_python_converter.hpp	/^    typedef boost::mpl::bool_<has_get_pytype> HasGetPytype;$/;"	t	struct:boost::python::to_python_converter	access:public
IF_ELSE_DWA2002322_HPP	/usr/include/boost/python/detail/if_else.hpp	6;"	d
IMPLICIT_DWA2002325_HPP	/usr/include/boost/python/implicit.hpp	6;"	d
IMPLICIT_DWA2002326_HPP	/usr/include/boost/python/converter/implicit.hpp	6;"	d
IMPORT_SS20050624_HPP	/usr/include/boost/python/import.hpp	6;"	d
INDEXING_SUITE_DETAIL_JDG20036_HPP	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	7;"	d
INDEXING_SUITE_JDG20036_HPP	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	7;"	d
INDIRECT_TRAITS_DWA2004915_HPP	/usr/include/boost/python/detail/indirect_traits.hpp	5;"	d
INHERITANCE_DWA200216_HPP	/usr/include/boost/python/object/inheritance.hpp	6;"	d
INHERITANCE_QUERY_DWA2003520_HPP	/usr/include/boost/python/object/inheritance_query.hpp	6;"	d
INIT_JDG20020820_HPP	/usr/include/boost/python/init.hpp	10;"	d
INSTANCE_DWA200295_HPP	/usr/include/boost/python/object/instance.hpp	6;"	d
INSTANCE_HOLDER_DWA2002517_HPP	/usr/include/boost/python/instance_holder.hpp	6;"	d
INVOKE_DWA20021122_HPP	/usr/include/boost/python/detail/invoke.hpp	8;"	d
IS_AUTO_PTR_DWA2003224_HPP	/usr/include/boost/python/detail/is_auto_ptr.hpp	6;"	d
IS_SHARED_PTR_DWA2003224_HPP	/usr/include/boost/python/detail/is_shared_ptr.hpp	6;"	d
IS_WRAPPER_DWA2004723_HPP	/usr/include/boost/python/detail/is_wrapper.hpp	5;"	d
IS_XXX_DWA2003224_HPP	/usr/include/boost/python/detail/is_xxx.hpp	6;"	d
ITERATOR_CORE_DWA2002512_HPP	/usr/include/boost/python/object/iterator_core.hpp	6;"	d
ITERATOR_DWA2002510_HPP	/usr/include/boost/python/object/iterator.hpp	6;"	d
ITERATOR_DWA2002512_HPP	/usr/include/boost/python/iterator.hpp	6;"	d
KEYWORDS_DWA2002323_HPP	/usr/include/boost/python/args.hpp	6;"	d
LIFE_SUPPORT_DWA200222_HPP	/usr/include/boost/python/object/life_support.hpp	6;"	d
LIST_DWA2002627_HPP	/usr/include/boost/python/list.hpp	6;"	d
LONGLONG_MAX	/usr/include/boost/python/detail/wrap_python.hpp	151;"	d
LONG_DWA2002627_HPP	/usr/include/boost/python/long.hpp	6;"	d
LONG_LONG	/usr/include/boost/python/detail/wrap_python.hpp	120;"	d
LVALUE_FROM_PYTYPE_DWA2002130_HPP	/usr/include/boost/python/lvalue_from_pytype.hpp	6;"	d
MAKE_CONSTRUCTOR_DWA20011221_HPP	/usr/include/boost/python/make_constructor.hpp	6;"	d
MAKE_FUNCTION_DWA20011221_HPP	/usr/include/boost/python/make_function.hpp	6;"	d
MAKE_HOLDER_DWA20011215_HPP	/usr/include/boost/python/object/make_holder.hpp	9;"	d
MAKE_INSTANCE_DWA200296_HPP	/usr/include/boost/python/object/make_instance.hpp	6;"	d
MAKE_KEYWORD_RANGE_FN_DWA2002927_HPP	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	6;"	d
MAKE_PTR_INSTANCE_DWA200296_HPP	/usr/include/boost/python/object/make_ptr_instance.hpp	6;"	d
MANAGE_NEW_OBJECT_DWA200222_HPP	/usr/include/boost/python/manage_new_object.hpp	6;"	d
MAP_ENTRY_DWA2002118_HPP	/usr/include/boost/python/detail/map_entry.hpp	6;"	d
MAP_INDEXING_SUITE_JDG20038_HPP	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	7;"	d
MODULE_DWA2001128_HPP	/usr/include/boost/python/module.hpp	6;"	d
MODULE_INIT_DWA20020722_HPP	/usr/include/boost/python/module_init.hpp	6;"	d
MPL_LAMBDA_DWA2002122_HPP	/usr/include/boost/python/detail/mpl_lambda.hpp	6;"	d
MSVC_TYPEINFO_DWA200222_HPP	/usr/include/boost/python/detail/msvc_typeinfo.hpp	6;"	d
N	/usr/include/boost/python/detail/make_tuple.hpp	11;"	d
N	/usr/include/boost/python/detail/make_tuple.hpp	31;"	d
N	/usr/include/boost/python/object_call.hpp	11;"	d
N	/usr/include/boost/python/object_call.hpp	22;"	d
NONE_DWA_052000_H_	/usr/include/boost/python/detail/none.hpp	10;"	d
NOT_SPECIFIED_DWA2002321_HPP	/usr/include/boost/python/detail/not_specified.hpp	6;"	d
NT_THREADS	/usr/include/boost/python/detail/wrap_python.hpp	104;"	d
NULLARY_FUNCTION_ADAPTOR_DWA2003824_HPP	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	6;"	d
NUMARRAY_DWA2002922_HPP	/usr/include/boost/python/numeric.hpp	6;"	d
OBJECT_ATTRIBUTES_DWA2002615_HPP	/usr/include/boost/python/object_attributes.hpp	6;"	d
OBJECT_CORE_DWA2002615_HPP	/usr/include/boost/python/object_core.hpp	6;"	d
OBJECT_DWA2002612_HPP	/usr/include/boost/python/object.hpp	6;"	d
OBJECT_FWD_DWA2002724_HPP	/usr/include/boost/python/object_fwd.hpp	6;"	d
OBJECT_ITEMS_DWA2002615_HPP	/usr/include/boost/python/object_items.hpp	6;"	d
OBJECT_MANAGER_DWA2002614_HPP	/usr/include/boost/python/converter/object_manager.hpp	6;"	d
OBJECT_OPERATORS_DWA2002617_HPP	/usr/include/boost/python/object_operators.hpp	6;"	d
OBJECT_PROTOCOL_CORE_DWA2002615_HPP	/usr/include/boost/python/object_protocol_core.hpp	6;"	d
OBJECT_PROTOCOL_DWA2002615_HPP	/usr/include/boost/python/object_protocol.hpp	6;"	d
OBJECT_SLICES_DWA2002615_HPP	/usr/include/boost/python/object_slices.hpp	6;"	d
OBJ_MGR_ARG_FROM_PYTHON_DWA2002628_HPP	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	6;"	d
OPAQUE_POINTER_CONVERTER_HPP_	/usr/include/boost/python/opaque_pointer_converter.hpp	9;"	d
OPERATORS_DWA2002530_HPP	/usr/include/boost/python/operators.hpp	6;"	d
OPERATOR_ID_DWA2002531_HPP	/usr/include/boost/python/detail/operator_id.hpp	6;"	d
OTHER_DWA20020601_HPP	/usr/include/boost/python/other.hpp	2;"	d
OVERLOADS_DWA2002101_HPP	/usr/include/boost/python/overloads.hpp	6;"	d
OVERLOADS_FWD_DWA2002101_HPP	/usr/include/boost/python/detail/overloads_fwd.hpp	6;"	d
OVERRIDE_DWA2004721_HPP	/usr/include/boost/python/override.hpp	7;"	d
POINTEE_DWA2002323_HPP	/usr/include/boost/python/detail/pointee.hpp	6;"	d
POINTEE_DWA2002323_HPP	/usr/include/boost/python/pointee.hpp	6;"	d
POINTER_HOLDER_DWA20011215_HPP	/usr/include/boost/python/object/pointer_holder.hpp	9;"	d
POINTER_TYPE_ID_DWA2002222_HPP	/usr/include/boost/python/converter/pointer_type_id.hpp	6;"	d
PREFIX_DWA2003531_HPP	/usr/include/boost/python/detail/prefix.hpp	6;"	d
PREPROCESSOR_DWA200247_HPP	/usr/include/boost/python/detail/preprocessor.hpp	6;"	d
PROXY_DWA2002615_HPP	/usr/include/boost/python/proxy.hpp	6;"	d
PTR_DWA20020601_HPP	/usr/include/boost/python/ptr.hpp	2;"	d
PURE_VIRTUAL_DWA2003810_HPP	/usr/include/boost/python/pure_virtual.hpp	6;"	d
PYOBJECT_TRAITS_DWA2002720_HPP	/usr/include/boost/python/converter/pyobject_traits.hpp	6;"	d
PYOBJECT_TYPE_DWA2002720_HPP	/usr/include/boost/python/converter/pyobject_type.hpp	6;"	d
PYTYPE_OBJECT_MANAGER_TRAITS_DWA2002716_HPP	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	6;"	d
PY_CONTAINER_UTILS_JDG20038_HPP	/usr/include/boost/python/suite/indexing/container_utils.hpp	8;"	d
PY_FUNCTION_DWA200286_HPP	/usr/include/boost/python/object/py_function.hpp	6;"	d
PY_MSC_VER_DEFINED_FROM_WRAP_PYTHON_H	/usr/include/boost/python/detail/wrap_python.hpp	126;"	d
PyArg_GetInt	/usr/include/boost/python/detail/python22_fixed.h	129;"	d
PyArg_NoArgs	/usr/include/boost/python/detail/python22_fixed.h	130;"	d
PyObject_INIT	/usr/include/boost/python/detail/wrap_python.hpp	174;"	d
PyVarObject_HEAD_INIT	/usr/include/boost/python/detail/wrap_python.hpp	185;"	d
Py_CHARMASK	/usr/include/boost/python/detail/python22_fixed.h	135;"	d
Py_CHARMASK	/usr/include/boost/python/detail/python22_fixed.h	137;"	d
Py_PYTHON_H	/usr/include/boost/python/detail/python22_fixed.h	16;"	d
Py_REFCNT	/usr/include/boost/python/detail/wrap_python.hpp	182;"	d
Py_SIZE	/usr/include/boost/python/detail/wrap_python.hpp	183;"	d
Py_TYPE	/usr/include/boost/python/detail/wrap_python.hpp	181;"	d
Py_eval_input	/usr/include/boost/python/detail/python22_fixed.h	146;"	d
Py_file_input	/usr/include/boost/python/detail/python22_fixed.h	145;"	d
Py_single_input	/usr/include/boost/python/detail/python22_fixed.h	144;"	d
R	/usr/include/boost/python/detail/result.hpp	/^boost::type<R>* result(R (T::*), int = 0) { return 0; }$/;"	p	namespace:boost::python::detail	signature:(T::*)
RAW_FUNCTION_DWA200336_HPP	/usr/include/boost/python/raw_function.hpp	6;"	d
RAW_PYOBJECT_DWA2002628_HPP	/usr/include/boost/python/detail/raw_pyobject.hpp	6;"	d
REFCOUNT_DWA2002615_HPP	/usr/include/boost/python/refcount.hpp	6;"	d
REFERENCE_EXISTING_OBJECT_DWA200222_HPP	/usr/include/boost/python/reference_existing_object.hpp	6;"	d
REFERENT_STORAGE_DWA200278_HPP	/usr/include/boost/python/detail/referent_storage.hpp	6;"	d
REGISTERED_DWA2002710_HPP	/usr/include/boost/python/converter/registered.hpp	6;"	d
REGISTERED_POINTEE_DWA2002710_HPP	/usr/include/boost/python/converter/registered_pointee.hpp	6;"	d
REGISTER_PTR_TO_PYTHON_HPP	/usr/include/boost/python/register_ptr_to_python.hpp	6;"	d
REGISTRATIONS_DWA2002223_HPP	/usr/include/boost/python/converter/registrations.hpp	6;"	d
REGISTRY_DWA20011127_HPP	/usr/include/boost/python/converter/registry.hpp	6;"	d
RESULT_DWA2002521_HPP	/usr/include/boost/python/detail/result.hpp	9;"	d
RETURN_ARG_DWA2003719_HPP	/usr/include/boost/python/return_arg.hpp	6;"	d
RETURN_FROM_PYTHON_DWA200265_HPP	/usr/include/boost/python/converter/return_from_python.hpp	6;"	d
RETURN_INTERNAL_REFERENCE_DWA2002131_HPP	/usr/include/boost/python/return_internal_reference.hpp	6;"	d
RETURN_OPAQUE_POINTER_HPP_	/usr/include/boost/python/return_opaque_pointer.hpp	9;"	d
RETURN_VALUE_POLICY_DWA2002131_HPP	/usr/include/boost/python/return_value_policy.hpp	6;"	d
SCOPE_DWA2002724_HPP	/usr/include/boost/python/scope.hpp	6;"	d
SCOPE_DWA2002927_HPP	/usr/include/boost/python/detail/scope.hpp	6;"	d
SELF_DWA2002531_HPP	/usr/include/boost/python/self.hpp	6;"	d
SFINAE_DWA2004723_HPP	/usr/include/boost/python/detail/sfinae.hpp	5;"	d
SHARED_PTR_DELETER_DWA2002121_HPP	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	6;"	d
SHARED_PTR_FROM_PYTHON_DWA20021130_HPP	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	6;"	d
SHARED_PTR_TO_PYTHON_DWA2003224_HPP	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	6;"	d
SIGNATURE_DWA20021121_HPP	/usr/include/boost/python/detail/signature.hpp	9;"	d
SIGNATURE_JDG20020813_HPP	/usr/include/boost/python/signature.hpp	12;"	d
SIZEOF_LONG	/usr/include/boost/python/detail/wrap_python.hpp	88;"	d
SLICE_NIL_DWA2002620_HPP	/usr/include/boost/python/slice_nil.hpp	6;"	d
STL_ITERATOR_CORE_EAN20051028_HPP	/usr/include/boost/python/object/stl_iterator_core.hpp	6;"	d
STL_ITERATOR_EAN20051028_HPP	/usr/include/boost/python/stl_iterator.hpp	6;"	d
STRING_LITERAL_DWA2002629_HPP	/usr/include/boost/python/detail/string_literal.hpp	6;"	d
STR_20020703_HPP	/usr/include/boost/python/str.hpp	6;"	d
TAG_DWA2002720_HPP	/usr/include/boost/python/tag.hpp	6;"	d
TARGET_DWA2002521_HPP	/usr/include/boost/python/detail/target.hpp	9;"	d
TO_PYTHON_CONVERTER_DWA200221_HPP	/usr/include/boost/python/to_python_converter.hpp	6;"	d
TO_PYTHON_FUNCTION_TYPE_DWA200236_HPP	/usr/include/boost/python/converter/to_python_function_type.hpp	6;"	d
TO_PYTHON_INDIRECT_DWA200221_HPP	/usr/include/boost/python/to_python_indirect.hpp	6;"	d
TO_PYTHON_VALUE_DWA200221_HPP	/usr/include/boost/python/to_python_value.hpp	6;"	d
TRANSLATE_EXCEPTION_TDS20091020_HPP	/usr/include/boost/python/detail/translate_exception.hpp	6;"	d
TUPLE_20020706_HPP	/usr/include/boost/python/tuple.hpp	6;"	d
TYPE_ID_DWA2002517_HPP	/usr/include/boost/python/type_id.hpp	6;"	d
TYPE_LIST_DWA2002913_HPP	/usr/include/boost/python/detail/type_list.hpp	6;"	d
TYPE_LIST_IMPL_DWA2002913_HPP	/usr/include/boost/python/detail/type_list_impl.hpp	7;"	d
TYPE_LIST_IMPL_NO_PTS_DWA2002913_HPP	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	7;"	d
ULONGLONG_MAX	/usr/include/boost/python/detail/wrap_python.hpp	156;"	d
ULONG_MAX	/usr/include/boost/python/detail/wrap_python.hpp	146;"	d
UNWIND_TYPE_DWA200222_HPP	/usr/include/boost/python/detail/unwind_type.hpp	6;"	d
UNWRAP_TYPE_ID_DWA2004722_HPP	/usr/include/boost/python/detail/unwrap_type_id.hpp	5;"	d
UNWRAP_WRAPPER_DWA2004723_HPP	/usr/include/boost/python/detail/unwrap_wrapper.hpp	5;"	d
USE_SOCKET	/usr/include/boost/python/detail/wrap_python.hpp	107;"	d
VALUE_ARG_DWA2004312_HPP	/usr/include/boost/python/detail/value_arg.hpp	5;"	d
VALUE_HOLDER_DWA20011215_HPP	/usr/include/boost/python/object/value_holder.hpp	9;"	d
VALUE_HOLDER_FWD_DWA2002311_HPP	/usr/include/boost/python/object/value_holder_fwd.hpp	6;"	d
VALUE_IS_SHARED_PTR_DWA2003224_HPP	/usr/include/boost/python/detail/value_is_shared_ptr.hpp	6;"	d
VALUE_IS_XXX_DWA2003224_HPP	/usr/include/boost/python/detail/value_is_xxx.hpp	6;"	d
VECTOR_INDEXING_SUITE_JDG20036_HPP	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	7;"	d
VOID_PTR_DWA200239_HPP	/usr/include/boost/python/detail/void_ptr.hpp	6;"	d
VOID_RETURN_DWA200274_HPP	/usr/include/boost/python/detail/void_return.hpp	6;"	d
WITH_CUSTODIAN_AND_WARD_DWA2002131_HPP	/usr/include/boost/python/with_custodian_and_ward.hpp	6;"	d
WORD_BIT	/usr/include/boost/python/detail/wrap_python.hpp	94;"	d
WRAPPER_BASE_DWA2004722_HPP	/usr/include/boost/python/detail/wrapper_base.hpp	5;"	d
WRAPPER_DWA2004720_HPP	/usr/include/boost/python/wrapper.hpp	5;"	d
WRAP_PYTYPE_NM20070606_HPP	/usr/include/boost/python/converter/pytype_function.hpp	6;"	d
_	/usr/include/boost/python/slice_nil.hpp	/^static const slice_nil _ = slice_nil();$/;"	m	namespace:boost::python::api
_BOOST_PYTHON_MODULE_INIT	/usr/include/boost/python/module_init.hpp	30;"	d
_CRT_NOFORCE_MANIFEST	/usr/include/boost/python/detail/wrap_python.hpp	169;"	d
_CRT_NOFORCE_MANIFEST_DEFINED_FROM_WRAP_PYTHON_H	/usr/include/boost/python/detail/wrap_python.hpp	168;"	d
_DEBUG	/usr/include/boost/python/detail/wrap_python.hpp	166;"	d
_DEBUG	/usr/include/boost/python/detail/wrap_python.hpp	45;"	d
_GNU_SOURCE	/usr/include/boost/python/detail/python22_fixed.h	23;"	d
_MSC_VER	/usr/include/boost/python/detail/wrap_python.hpp	127;"	d
_MSC_VER	/usr/include/boost/python/detail/wrap_python.hpp	161;"	d
_POSIX_C_SOURCE	/usr/include/boost/python/detail/wrap_python.hpp	52;"	d
_SGI_MP_SOURCE	/usr/include/boost/python/detail/python22_fixed.h	53;"	d
_XOPEN_SOURCE	/usr/include/boost/python/detail/wrap_python.hpp	53;"	d
_wrapper_wrapped_type_	/usr/include/boost/python/wrapper.hpp	/^    typedef T _wrapper_wrapped_type_;$/;"	t	class:boost::python::wrapper	access:public
add	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        add(PyObject* prox)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(PyObject* prox)
add	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        add(PyObject* prox, Container& container)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(PyObject* prox, Container& container)
add_cast	/usr/include/boost/python/object/inheritance.hpp	/^BOOST_PYTHON_DECL void add_cast($/;"	p	namespace:boost::python::objects	signature:( class_id src_t, class_id dst_t, void* (*cast)(void*), bool is_downcast)
add_overload	/usr/include/boost/python/object/function.hpp	/^    void add_overload(handle<function> const&);$/;"	p	struct:boost::python::objects::function	access:private	signature:(handle<function> const&)
add_property	/usr/include/boost/python/class.hpp	/^    add_property(char const* name, Get fget, Set fset, char const* docstr)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, Set fset, char const* docstr)
add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget)
add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget, DocStrOrSet docstr_or_set)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, DocStrOrSet docstr_or_set)
add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget, Set fset, char const* docstr = 0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, Set fset, char const* docstr = 0)
add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget, char const* docstr = 0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, char const* docstr = 0)
add_property	/usr/include/boost/python/object/class.hpp	/^    void add_property($/;"	p	struct:boost::python::objects::class_base	access:protected	signature:( char const* name, object const& fget, char const* docstr)
add_property	/usr/include/boost/python/object/class.hpp	/^    void add_property(char const* name, $/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const& fget, object const& fset, char const* docstr)
add_property_impl	/usr/include/boost/python/class.hpp	/^    self& add_property_impl(char const* name, Get fget, Set fset, ...)$/;"	f	class:boost::python::class_	access:private	signature:(char const* name, Get fget, Set fset, ...)
add_property_impl	/usr/include/boost/python/class.hpp	/^    self& add_property_impl(char const* name, Get fget, char const* docstr, int)$/;"	f	class:boost::python::class_	access:private	signature:(char const* name, Get fget, char const* docstr, int)
add_static_property	/usr/include/boost/python/class.hpp	/^    self& add_static_property(char const* name, Get fget)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget)
add_static_property	/usr/include/boost/python/class.hpp	/^    self& add_static_property(char const* name, Get fget, Set fset)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, Set fset)
add_static_property	/usr/include/boost/python/object/class.hpp	/^    void add_static_property(char const* name, object const& fget);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const& fget)
add_static_property	/usr/include/boost/python/object/class.hpp	/^    void add_static_property(char const* name, object const& fget, object const& fset);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const& fget, object const& fset)
add_to_namespace	/usr/include/boost/python/object/add_to_namespace.hpp	/^BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute)
add_to_namespace	/usr/include/boost/python/object/add_to_namespace.hpp	/^BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute, char const* doc)
add_to_namespace	/usr/include/boost/python/object/function.hpp	/^    static void add_to_namespace($/;"	p	struct:boost::python::objects::function	access:public	signature:( object const& name_space, char const* name, object const& attribute)
add_to_namespace	/usr/include/boost/python/object/function.hpp	/^    static void add_to_namespace($/;"	p	struct:boost::python::objects::function	access:public	signature:( object const& name_space, char const* name, object const& attribute, char const* doc)
add_to_namespace	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute)
add_to_namespace	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute, char const* doc)
add_value	/usr/include/boost/python/object/enum_base.hpp	/^    void add_value(char const* name, long value);$/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:(char const* name, long value)
additional_instance_size	/usr/include/boost/python/object/instance.hpp	/^struct additional_instance_size$/;"	s	namespace:boost::python::objects
adopt	/usr/include/boost/python/converter/object_manager.hpp	/^  static null_ok<typename T::element_type>* adopt(PyObject* p)$/;"	f	struct:boost::python::converter::handle_object_manager_traits	access:public	signature:(PyObject* p)
adopt	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^    static inline python::detail::new_reference adopt(PyObject*);$/;"	p	struct:boost::python::converter::pytype_object_manager_traits	access:public	signature:(PyObject*)
adopt	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^inline python::detail::new_reference pytype_object_manager_traits<pytype,T>::adopt(PyObject* x)$/;"	f	class:boost::python::converter::pytype_object_manager_traits	signature:(PyObject* x)
adopt	/usr/include/boost/python/numeric.hpp	/^      static detail::new_non_null_reference adopt(PyObject* obj);$/;"	p	struct:boost::python::numeric::aux::array_object_manager_traits	access:public	signature:(PyObject* obj)
adopt	/usr/include/boost/python/object_core.hpp	/^      static python::detail::new_non_null_reference adopt(PyObject* x)$/;"	f	struct:boost::python::converter::object_manager_traits	access:public	signature:(PyObject* x)
aix_init_module	/usr/include/boost/python/detail/aix_init_module.hpp	/^void aix_init_module(so_load_function, char const* name, void (*init_module)());$/;"	p	namespace:boost::python::detail	signature:(so_load_function, char const* name, void (*init_module)())
align	/usr/include/boost/python/object/instance.hpp	/^        align_t align;$/;"	m	union:boost::python::objects::instance::__anon7	access:public
align_t	/usr/include/boost/python/object/instance.hpp	/^    >::type align_t;$/;"	t	struct:boost::python::objects::instance	access:public
aligned_storage	/usr/include/boost/python/detail/referent_storage.hpp	/^union aligned_storage$/;"	u	namespace:boost::python::detail
all_t	/usr/include/boost/python/detail/def_helper.hpp	/^          > all_t;$/;"	t	struct:boost::python::detail::def_helper	access:public
allocate	/usr/include/boost/python/instance_holder.hpp	/^    static void* allocate(PyObject*, std::size_t offset, std::size_t size);$/;"	p	struct:boost::python::instance_holder	access:public	signature:(PyObject*, std::size_t offset, std::size_t size)
allow_null	/usr/include/boost/python/handle.hpp	/^inline null_ok<T>* allow_null(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
always_void	/usr/include/boost/python/detail/enable_if.hpp	/^template <class T> struct always_void { typedef void type; };$/;"	s	namespace:boost::python::detail
api	/usr/include/boost/python/converter/object_manager.hpp	/^  namespace api$/;"	n	namespace:boost::python
api	/usr/include/boost/python/extract.hpp	/^namespace api$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object/pickle_support.hpp	/^namespace api$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_attributes.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_core.hpp	/^namespace api$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_fwd.hpp	/^namespace api$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_items.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_operators.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_protocol.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_protocol_core.hpp	/^namespace api$/;"	n	namespace:boost::python
api	/usr/include/boost/python/object_slices.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
api	/usr/include/boost/python/proxy.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
api	/usr/include/boost/python/slice_nil.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
append	/usr/include/boost/python/list.hpp	/^      void append(object_cref); \/\/ append object to end$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref)
append	/usr/include/boost/python/list.hpp	/^    void append(T const& x)$/;"	f	class:boost::python::list	access:public	signature:(T const& x)
append	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        append(Container& container, data_type const& v)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, data_type const& v)
apply	/usr/include/boost/python/copy_const_reference.hpp	/^    struct apply$/;"	s	struct:boost::python::copy_const_reference	access:public
apply	/usr/include/boost/python/copy_non_const_reference.hpp	/^    struct apply$/;"	s	struct:boost::python::copy_non_const_reference	access:public
apply	/usr/include/boost/python/default_call_policies.hpp	/^    struct apply$/;"	s	struct:boost::python::default_result_converter	access:public
apply	/usr/include/boost/python/default_call_policies.hpp	/^struct default_result_converter::apply<PyObject*>$/;"	s	class:boost::python::default_result_converter
apply	/usr/include/boost/python/default_call_policies.hpp	/^struct default_result_converter::apply<char const*>$/;"	s	class:boost::python::default_result_converter
apply	/usr/include/boost/python/detail/def_helper.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::tuple_extract_impl	access:public
apply	/usr/include/boost/python/detail/pointee.hpp	/^    template <class T> struct apply : remove_pointer<T> {};$/;"	s	struct:boost::python::detail::pointee_impl	inherits:remove_pointer	access:public
apply	/usr/include/boost/python/detail/pointee.hpp	/^    template <class T> struct apply$/;"	s	struct:boost::python::detail::pointee_impl	access:public
apply	/usr/include/boost/python/init.hpp	/^      static void apply($/;"	f	struct:boost::python::detail::define_class_init_helper	access:public	signature:( ClassT& cl , CallPoliciesT const& policies , Signature const& args , NArgs , char const* doc , detail::keyword_range const& keywords)
apply	/usr/include/boost/python/init.hpp	/^      static void apply($/;"	f	struct:boost::python::detail::define_class_init_helper	access:public	signature:( ClassT& cl , CallPoliciesT const& policies , Signature const& args , NArgs , char const* doc , detail::keyword_range keywords)
apply	/usr/include/boost/python/iterator.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::iterators_impl	access:public
apply	/usr/include/boost/python/make_constructor.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::constructor_result_converter	access:public
apply	/usr/include/boost/python/manage_new_object.hpp	/^    struct apply$/;"	s	struct:boost::python::manage_new_object	access:public
apply	/usr/include/boost/python/object/forward.hpp	/^      struct apply$/;"	s	struct:boost::python::objects::detail::cref_unforwarder	inherits:python::detail::value_arg	access:public
apply	/usr/include/boost/python/object/forward.hpp	/^      struct apply$/;"	s	struct:boost::python::objects::detail::unforwarder	access:public
apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_1_inner<id,T>$/;"	s	struct:boost::python::detail::unary_op	inherits:operator_1_inner	access:public
apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_l_inner<id,T,R>$/;"	s	struct:boost::python::detail::binary_op_l	inherits:operator_l_inner	access:public
apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_l_inner<id,T,T>$/;"	s	struct:boost::python::detail::binary_op	inherits:operator_l_inner	access:public
apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_r_inner<id,L,T>$/;"	s	struct:boost::python::detail::binary_op_r	inherits:operator_r_inner	access:public
apply	/usr/include/boost/python/pointee.hpp	/^      template <class T> struct apply : remove_pointer<T> {};$/;"	s	struct:boost::python::detail::pointee_impl	inherits:remove_pointer	access:public
apply	/usr/include/boost/python/pointee.hpp	/^      template <class T> struct apply$/;"	s	struct:boost::python::detail::pointee_impl	access:public
apply	/usr/include/boost/python/ptr.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::pointer_unwrapper	access:public
apply	/usr/include/boost/python/reference_existing_object.hpp	/^    struct apply$/;"	s	struct:boost::python::reference_existing_object	access:public
apply	/usr/include/boost/python/return_arg.hpp	/^      template <class T> struct apply$/;"	s	struct:boost::python::detail::return_none	access:public
apply	/usr/include/boost/python/return_by_value.hpp	/^    struct apply$/;"	s	struct:boost::python::return_by_value	access:public
apply	/usr/include/boost/python/return_opaque_pointer.hpp	/^    struct apply$/;"	s	struct:boost::python::return_opaque_pointer	access:public
are_seq_overloads	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static bool are_seq_overloads( function const *f1, function const *f2 , bool check_docs);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:( function const *f1, function const *f2 , bool check_docs)
arg	/usr/include/boost/python/args.hpp	/^typedef detail::keywords<1> arg;$/;"	t	namespace:boost::python
arg_	/usr/include/boost/python/args.hpp	/^typedef arg arg_; \/\/ gcc 2.96 workaround$/;"	t	namespace:boost::python
arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^    arg_from_python(PyObject* p) : m_source(p) {}$/;"	f	struct:boost::python::arg_from_python	access:public	signature:(PyObject* p)
arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^    arg_from_python(PyObject*);$/;"	p	struct:boost::python::arg_from_python	access:public	signature:(PyObject*)
arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^inline arg_from_python<T>::arg_from_python(PyObject* source)$/;"	f	class:boost::python::arg_from_python	signature:(PyObject* source)
arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^struct arg_from_python$/;"	s	namespace:boost::python	inherits:converter::select_arg_from_python::type
arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^struct arg_from_python<PyObject* const&>$/;"	s	namespace:boost::python
arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^struct arg_from_python<PyObject*>$/;"	s	namespace:boost::python
arg_lvalue_from_python_base	/usr/include/boost/python/converter/arg_from_python.hpp	/^    arg_lvalue_from_python_base(void* result);$/;"	p	struct:boost::python::converter::arg_lvalue_from_python_base	access:public	signature:(void* result)
arg_lvalue_from_python_base	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline arg_lvalue_from_python_base::arg_lvalue_from_python_base(void* result)$/;"	f	class:boost::python::converter::arg_lvalue_from_python_base	signature:(void* result)
arg_lvalue_from_python_base	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct arg_lvalue_from_python_base$/;"	s	namespace:boost::python::converter
arg_num_	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    typedef type_list_count_args< BOOST_PYTHON_LIST_ACTUAL_PARAMS > arg_num_;$/;"	t	struct:boost::python::detail::type_list_impl	access:public
arg_rvalue_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    arg_rvalue_from_python(PyObject*);$/;"	p	struct:boost::python::converter::arg_rvalue_from_python	access:public	signature:(PyObject*)
arg_rvalue_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline arg_rvalue_from_python<T>::arg_rvalue_from_python(PyObject* obj)$/;"	f	class:boost::python::converter::arg_rvalue_from_python	signature:(PyObject* obj)
arg_rvalue_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct arg_rvalue_from_python$/;"	s	namespace:boost::python::converter
arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^    arg_to_python(T const& x);$/;"	p	struct:boost::python::converter::arg_to_python	access:public	signature:(T const& x)
arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^inline arg_to_python<T>::arg_to_python(T const& x)$/;"	f	class:boost::python::converter::arg_to_python	signature:(T const& x)
arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^struct arg_to_python$/;"	s	namespace:boost::python::converter	inherits:detail::select_arg_to_python::type
arg_to_python_base	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      arg_to_python_base(void const volatile* source, registration const&);$/;"	p	struct:boost::python::converter::detail::arg_to_python_base	access:public	signature:(void const volatile* source, registration const&)
arg_to_python_base	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^  struct BOOST_PYTHON_DECL arg_to_python_base$/;"	s	namespace:boost::python::converter::detail	inherits:handle
argmax	/usr/include/boost/python/numeric.hpp	/^      object argmax(long axis=-1);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis=-1)
argmin	/usr/include/boost/python/numeric.hpp	/^      object argmin(long axis=-1);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis=-1)
args	/usr/include/boost/python/args.hpp	/^inline detail::keywords<1> args(char const* name)$/;"	f	namespace:boost::python	signature:(char const* name)
args_proxy	/usr/include/boost/python/object_core.hpp	/^  args_proxy(object o) : call_proxy(o) {} $/;"	f	class:boost::python::detail::args_proxy	access:public	signature:(object o)
args_proxy	/usr/include/boost/python/object_core.hpp	/^class args_proxy : public call_proxy $/;"	c	namespace:boost::python::detail	inherits:call_proxy
argsort	/usr/include/boost/python/numeric.hpp	/^      object argsort(long axis=-1);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis=-1)
argument_error	/usr/include/boost/python/object/function.hpp	/^    void argument_error(PyObject* args, PyObject* keywords) const;$/;"	p	struct:boost::python::objects::function	access:private	signature:(PyObject* args, PyObject* keywords) const
argument_package	/usr/include/boost/python/default_call_policies.hpp	/^    typedef PyObject* argument_package;$/;"	t	struct:boost::python::default_call_policies	access:public
argument_package	/usr/include/boost/python/make_constructor.hpp	/^      typedef offset_args<typename BasePolicy_::argument_package, mpl::int_<1> > argument_package;$/;"	t	struct:boost::python::detail::constructor_policy	access:public
argument_type	/usr/include/boost/python/to_python_value.hpp	/^      typedef typename value_arg<T>::type argument_type;$/;"	t	struct:boost::python::detail::object_manager_to_python_value	access:public
argument_type	/usr/include/boost/python/to_python_value.hpp	/^      typedef typename value_arg<T>::type argument_type;$/;"	t	struct:boost::python::detail::registry_to_python_value	access:public
argument_type	/usr/include/boost/python/to_python_value.hpp	/^      typedef typename value_arg<T>::type argument_type;$/;"	t	struct:boost::python::detail::shared_ptr_to_python_value	access:public
arity	/usr/include/boost/python/detail/caller.hpp	/^    enum { arity = mpl::size<Sig>::value - 1 };$/;"	e	enum:boost::python::detail::caller_base_select::__anon1
arity	/usr/include/boost/python/detail/caller.hpp	/^inline unsigned arity(PyObject* const& args_)$/;"	f	namespace:boost::python::detail	signature:(PyObject* const& args_)
arity	/usr/include/boost/python/detail/signature.hpp	/^    enum { arity = mpl::size<Sig>::value - 1 };$/;"	e	enum:boost::python::detail::signature_base_select::__anon6
arity	/usr/include/boost/python/make_constructor.hpp	/^  inline unsigned arity(offset_args<BaseArgs,Offset> const& args_)$/;"	f	namespace:boost::python::detail	signature:(offset_args<BaseArgs,Offset> const& args_)
arity_cmp	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static bool arity_cmp( function const *f1, function const *f2 );$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:( function const *f1, function const *f2 )
array	/usr/include/boost/python/numeric.hpp	/^class array : public aux::array_base$/;"	c	namespace:boost::python::numeric	inherits:aux::array_base
array_base	/usr/include/boost/python/numeric.hpp	/^  struct BOOST_PYTHON_DECL array_base : object$/;"	s	namespace:boost::python::numeric::aux	inherits:object
array_object_manager_traits	/usr/include/boost/python/numeric.hpp	/^  struct BOOST_PYTHON_DECL array_object_manager_traits$/;"	s	namespace:boost::python::numeric::aux
as	/usr/include/boost/python/override.hpp	/^      T as(type<T>* = 0)$/;"	f	class:boost::python::detail::method_result	access:public	signature:(type<T>* = 0)
as_to_python_function	/usr/include/boost/python/converter/as_to_python_function.hpp	/^struct as_to_python_function$/;"	s	namespace:boost::python::converter
assert_array_typeid_compiles	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo assert_array_typeid_compiles()$/;"	f	namespace:boost::python::detail	signature:()
assert_castable	/usr/include/boost/python/cast.hpp	/^  inline void assert_castable(boost::type<T>* = 0)$/;"	f	namespace:boost::python::detail	signature:(boost::type<T>* = 0)
assertion	/usr/include/boost/python/class.hpp	/^    struct assertion$/;"	s	namespace:boost::python::detail::error	inherits:mpl::if_::type
assertion_failed	/usr/include/boost/python/class.hpp	/^    template <class C> struct assertion_failed { };$/;"	s	namespace:boost::python::detail::error
assertion_ok	/usr/include/boost/python/class.hpp	/^    template <class C> struct assertion_ok { typedef C failed; };$/;"	s	namespace:boost::python::detail::error
assignment_self	/usr/include/boost/python/proxy.hpp	/^    typedef proxy assignment_self;$/;"	t	class:boost::python::api::proxy	access:private
assignment_self	/usr/include/boost/python/proxy.hpp	/^    typedef proxy const& assignment_self;$/;"	t	class:boost::python::api::proxy	access:private
astype	/usr/include/boost/python/numeric.hpp	/^      object astype(object const& type = object());$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& type = object())
astype	/usr/include/boost/python/numeric.hpp	/^    object astype() { return base::astype(); }$/;"	f	class:boost::python::numeric::array	access:public	signature:()
astype	/usr/include/boost/python/numeric.hpp	/^    object astype(Type const& type_)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Type const& type_)
attr	/usr/include/boost/python/object_attributes.hpp	/^inline const_object_attribute object_operators<U>::attr(char const* name) const$/;"	f	class:boost::python::api::object_operators	signature:(char const* name) const
attr	/usr/include/boost/python/object_attributes.hpp	/^inline const_object_objattribute object_operators<U>::attr(object const& name) const$/;"	f	class:boost::python::api::object_operators	signature:(object const& name) const
attr	/usr/include/boost/python/object_attributes.hpp	/^inline object_attribute object_operators<U>::attr(char const* name)$/;"	f	class:boost::python::api::object_operators	signature:(char const* name)
attr	/usr/include/boost/python/object_attributes.hpp	/^inline object_objattribute object_operators<U>::attr(object const& name)$/;"	f	class:boost::python::api::object_operators	signature:(object const& name)
attr	/usr/include/boost/python/object_core.hpp	/^      const_object_attribute attr(char const*) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(char const*) const
attr	/usr/include/boost/python/object_core.hpp	/^      const_object_objattribute attr(object const&) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object const&) const
attr	/usr/include/boost/python/object_core.hpp	/^      object_attribute attr(char const*);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(char const*)
attr	/usr/include/boost/python/object_core.hpp	/^      object_objattribute attr(object const&);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object const&)
attribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct attribute_policies : const_attribute_policies$/;"	s	namespace:boost::python::api	inherits:const_attribute_policies
aux	/usr/include/boost/python/numeric.hpp	/^namespace aux$/;"	n	namespace:boost::python::numeric
back_is_optional	/usr/include/boost/python/init.hpp	/^    > back_is_optional;$/;"	t	class:boost::python::init	access:public
back_reference	/usr/include/boost/python/back_reference.hpp	/^    back_reference(PyObject*, T);$/;"	p	struct:boost::python::back_reference	access:public	signature:(PyObject*, T)
back_reference	/usr/include/boost/python/back_reference.hpp	/^back_reference<T>::back_reference(PyObject* p, T x)$/;"	f	class:boost::python::back_reference	signature:(PyObject* p, T x)
back_reference	/usr/include/boost/python/back_reference.hpp	/^struct back_reference$/;"	s	namespace:boost::python
back_reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    back_reference_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::back_reference_arg_from_python	access:public	signature:(PyObject*)
back_reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^back_reference_arg_from_python<T>::back_reference_arg_from_python(PyObject* x)$/;"	f	class:boost::python::converter::back_reference_arg_from_python	signature:(PyObject* x)
back_reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct back_reference_arg_from_python$/;"	s	namespace:boost::python::converter	inherits:boost::python::arg_from_python
base	/usr/include/boost/python/arg_from_python.hpp	/^        >::type base;$/;"	t	struct:boost::python::arg_from_python	access:public
base	/usr/include/boost/python/class.hpp	/^    typedef objects::class_base base;$/;"	t	class:boost::python::class_	access:public
base	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef boost::python::arg_from_python<typename T::type> base;$/;"	t	struct:boost::python::converter::back_reference_arg_from_python	access:private
base	/usr/include/boost/python/converter/arg_to_python.hpp	/^    typedef typename detail::select_arg_to_python<T>::type base;$/;"	t	struct:boost::python::converter::arg_to_python	access:public
base	/usr/include/boost/python/converter/object_manager.hpp	/^  typedef pyobject_traits<typename T::element_type> base;$/;"	t	struct:boost::python::converter::handle_object_manager_traits	access:private
base	/usr/include/boost/python/detail/caller.hpp	/^        >::type base;$/;"	t	struct:boost::python::detail::caller	access:public
base	/usr/include/boost/python/dict.hpp	/^    typedef detail::dict_base base;$/;"	t	class:boost::python::dict	access:private
base	/usr/include/boost/python/enum.hpp	/^    typedef objects::enum_base base;$/;"	t	struct:boost::python::enum_	access:public
base	/usr/include/boost/python/extract.hpp	/^    typedef typename converter::select_extract<T>::type base;$/;"	t	struct:boost::python::extract	access:private
base	/usr/include/boost/python/init.hpp	/^    typedef init_base<init<BOOST_PYTHON_OVERLOAD_ARGS> > base;$/;"	t	class:boost::python::init	access:private
base	/usr/include/boost/python/init.hpp	/^    typedef init_base<init_with_call_policies<CallPoliciesT, InitT> > base;$/;"	t	class:boost::python::init_with_call_policies	access:private
base	/usr/include/boost/python/list.hpp	/^    typedef detail::list_base base;$/;"	t	class:boost::python::list	access:private
base	/usr/include/boost/python/long.hpp	/^    typedef detail::long_base base;$/;"	t	class:boost::python::long_	access:private
base	/usr/include/boost/python/make_constructor.hpp	/^      BaseArgs base;$/;"	m	struct:boost::python::detail::offset_args	access:public
base	/usr/include/boost/python/numeric.hpp	/^    typedef aux::array_base base;$/;"	t	class:boost::python::numeric::array	access:private
base	/usr/include/boost/python/slice.hpp	/^    typedef detail::slice_base base;$/;"	t	class:boost::python::slice	access:private
base	/usr/include/boost/python/str.hpp	/^    typedef detail::str_base base;$/;"	t	class:boost::python::str	access:private
base	/usr/include/boost/python/tuple.hpp	/^    typedef detail::tuple_base base;$/;"	t	class:boost::python::tuple	access:private
base_append	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        base_append(Container& container, object v)$/;"	f	class:boost::python::vector_indexing_suite	access:private	signature:(Container& container, object v)
base_contains	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_contains(Container& container, PyObject* key)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container, PyObject* key)
base_delete_item	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_delete_item(Container& container, PyObject* i)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container, PyObject* i)
base_delete_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_delete_slice(Container& \/*container*\/, PySliceObject* \/*slice*\/)$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:(Container& , PySliceObject* )
base_delete_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_delete_slice(Container& container, PySliceObject* slice)$/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:(Container& container, PySliceObject* slice)
base_erase_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_index($/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:( Container& , Index , NoSlice )
base_erase_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_index($/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:( Container& container, Index i, NoSlice no_slice)
base_erase_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_indexes($/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:( Container& container, Index from, Index to)
base_erase_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_indexes(Container& \/*container*\/, Index \/*from*\/, Index \/*to*\/)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(Container& , Index , Index )
base_extend	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        base_extend(Container& container, object v)$/;"	f	class:boost::python::vector_indexing_suite	access:private	signature:(Container& container, object v)
base_get_item	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_get_item(back_reference<Container&> container, PyObject* i)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(back_reference<Container&> container, PyObject* i)
base_get_item_	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_(back_reference<Container&> const& container, PyObject* i)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(back_reference<Container&> const& container, PyObject* i)
base_get_item_	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_(back_reference<Container&> const& container, PyObject* i)$/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:(back_reference<Container&> const& container, PyObject* i)
base_get_item_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_helper(DataType const& p, mpl::true_)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(DataType const& p, mpl::true_)
base_get_item_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_helper(DataType const& x, mpl::false_)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(DataType const& x, mpl::false_)
base_get_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_slice(Container& \/*container*\/, PySliceObject* \/*slice*\/)$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:(Container& , PySliceObject* )
base_get_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_slice(Container& container, PySliceObject* slice)$/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:(Container& container, PySliceObject* slice)
base_get_slice_data	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_slice_data($/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:( Container& container, PySliceObject* slice, Index& from_, Index& to_)
base_id_t	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    typedef type_info base_id_t;$/;"	t	struct:boost::python::detail::decorated_type_info	access:private
base_id_t	/usr/include/boost/python/type_id.hpp	/^    typedef char const* base_id_t;$/;"	t	struct:boost::python::type_info	access:private
base_id_t	/usr/include/boost/python/type_id.hpp	/^    typedef std::type_info const* base_id_t;$/;"	t	class:boost::python::type_info::std	access:private
base_replace_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_replace_indexes($/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:( Container& , Index , Index , Index )
base_replace_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_replace_indexes($/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:( Container& container, Index from, Index to, Index n)
base_set_item	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_set_item(Container& container, PyObject* i, PyObject* v)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container, PyObject* i, PyObject* v)
base_set_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_set_slice(Container& \/*container*\/, PySliceObject* \/*slice*\/, PyObject* \/*v*\/)$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:(Container& , PySliceObject* , PyObject* )
base_set_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_set_slice(Container& container, PySliceObject* slice, PyObject* v)$/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:(Container& container, PySliceObject* slice, PyObject* v)
base_size	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_size(Container& container)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container)
base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^struct base_type_traits<PyMethodObject>$/;"	s	namespace:boost::python
base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^struct base_type_traits<PyObject>$/;"	s	namespace:boost::python
base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^struct base_type_traits<PyTypeObject>$/;"	s	namespace:boost::python
base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^template <class T> struct base_type_traits$/;"	s	namespace:boost::python	inherits:detail::unspecialized
basename	/usr/include/boost/python/detail/signature.hpp	/^    char const* basename;$/;"	m	struct:boost::python::detail::signature_element	access:public
bases	/usr/include/boost/python/bases.hpp	/^  struct bases : detail::type_list< BOOST_PYTHON_BASE_PARAMS >::type$/;"	s	namespace:boost::python	inherits:detail::type_list::type
bases	/usr/include/boost/python/class.hpp	/^        typedef typename metadata::bases bases;$/;"	t	struct:boost::python::class_::id_vector	access:public
bases	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type bases;$/;"	t	struct:boost::python::objects::class_metadata	access:public
begin	/usr/include/boost/python/iterator.hpp	/^          static iterator begin(T& x) { return x.begin(); }$/;"	f	struct:boost::python::detail::iterators_impl::apply	access:public	signature:(T& x)
binary_op	/usr/include/boost/python/operators.hpp	/^  struct binary_op : operator_l<id>$/;"	s	namespace:boost::python::detail	inherits:operator_l
binary_op_l	/usr/include/boost/python/operators.hpp	/^  struct binary_op_l : operator_l<id>$/;"	s	namespace:boost::python::detail	inherits:operator_l
binary_op_r	/usr/include/boost/python/operators.hpp	/^  struct binary_op_r : operator_r<id>$/;"	s	namespace:boost::python::detail	inherits:operator_r
boost	/usr/include/boost/python/arg_from_python.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/args.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/args_fwd.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/back_reference.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/back_reference.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/base_type_traits.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/bases.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/borrowed.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/call.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/call_method.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/cast.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/class.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/class_fwd.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n
boost	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python$/;"	n
boost	/usr/include/boost/python/converter/arg_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n
boost	/usr/include/boost/python/converter/as_to_python_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/builtin_converters.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/converter/constructor_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/context_result_converter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/convertible_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/implicit.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python$/;"	n
boost	/usr/include/boost/python/converter/pointer_type_id.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/pyobject_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/pyobject_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/pytype_function.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/registered.hpp	/^namespace boost {$/;"	n
boost	/usr/include/boost/python/converter/registered_pointee.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/registrations.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/registry.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n
boost	/usr/include/boost/python/converter/return_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/converter/to_python_function_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n
boost	/usr/include/boost/python/copy_const_reference.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/copy_non_const_reference.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/data_members.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/def.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/def_visitor.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/default_call_policies.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/detail/aix_init_module.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/caller.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/construct.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/convertible.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/cv_category.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/dealloc.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/decorated_type_id.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/decref_guard.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/def_helper.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/detail/def_helper_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/defaults_def.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/detail/defaults_gen.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/detail/dependent.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/destroy.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/enable_if.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/exception_handler.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/force_instantiate.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/if_else.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/indirect_traits.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/detail/invoke.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/is_auto_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/is_wrapper.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/map_entry.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/none.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/not_specified.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/operator_id.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/overloads_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/pointee.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/python_type.hpp	/^namespace boost {namespace python {namespace detail{$/;"	n
boost	/usr/include/boost/python/detail/raw_pyobject.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/referent_storage.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/result.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/scope.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/signature.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/string_literal.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/target.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/translate_exception.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/type_list_impl.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/unwind_type.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/value_arg.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/value_is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/void_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/void_return.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n
boost	/usr/include/boost/python/detail/wrapper_base.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/dict.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/docstring_options.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/enum.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/errors.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/exception_translator.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/exec.hpp	/^namespace boost $/;"	n
boost	/usr/include/boost/python/extract.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/handle.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/handle_fwd.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/has_back_reference.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/implicit.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/import.hpp	/^namespace boost $/;"	n
boost	/usr/include/boost/python/init.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/instance_holder.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/iterator.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/list.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/long.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/lvalue_from_pytype.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/make_constructor.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/make_function.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/manage_new_object.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/module_init.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/numeric.hpp	/^namespace boost { namespace python { namespace numeric {$/;"	n
boost	/usr/include/boost/python/object.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/object/add_to_namespace.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/class.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/object/class_detail.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/class_metadata.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/class_wrapper.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/enum_base.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/find_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/forward.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/function.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/function_doc_signature.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/function_handle.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/function_object.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/object/inheritance.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/inheritance_query.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python$/;"	n
boost	/usr/include/boost/python/object/iterator.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/life_support.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/make_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/make_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/make_ptr_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/pickle_support.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/object/py_function.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/stl_iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n
boost	/usr/include/boost/python/object/value_holder.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object/value_holder_fwd.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n
boost	/usr/include/boost/python/object_attributes.hpp	/^namespace boost { namespace python { namespace api {$/;"	n
boost	/usr/include/boost/python/object_core.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/object_fwd.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/object_items.hpp	/^namespace boost { namespace python { namespace api {$/;"	n
boost	/usr/include/boost/python/object_operators.hpp	/^namespace boost { namespace python { namespace api {$/;"	n
boost	/usr/include/boost/python/object_protocol.hpp	/^namespace boost { namespace python { namespace api {$/;"	n
boost	/usr/include/boost/python/object_protocol_core.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/object_slices.hpp	/^namespace boost { namespace python { namespace api {$/;"	n
boost	/usr/include/boost/python/opaque_pointer_converter.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/operators.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/other.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/override.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/pointee.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/proxy.hpp	/^namespace boost { namespace python { namespace api {$/;"	n
boost	/usr/include/boost/python/ptr.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/pure_virtual.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/raw_function.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/refcount.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/reference_existing_object.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/register_ptr_to_python.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/return_arg.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/return_by_value.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/return_internal_reference.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/return_opaque_pointer.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/return_value_policy.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/scope.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/self.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/signature.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/slice.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/slice_nil.hpp	/^namespace boost { namespace python { namespace api {$/;"	n
boost	/usr/include/boost/python/ssize_t.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/stl_iterator.hpp	/^namespace boost { namespace python$/;"	n
boost	/usr/include/boost/python/str.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/suite/indexing/container_utils.hpp	/^namespace boost { namespace python { namespace container_utils {$/;"	n
boost	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n
boost	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/tag.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/to_python_converter.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/to_python_indirect.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/to_python_value.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/tuple.hpp	/^namespace boost { namespace python {$/;"	n
boost	/usr/include/boost/python/type_id.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/with_custodian_and_ward.hpp	/^namespace boost { namespace python { $/;"	n
boost	/usr/include/boost/python/wrapper.hpp	/^namespace boost { namespace python { $/;"	n
boost::get_pointer	/usr/include/boost/python/handle.hpp	/^template<class T> inline T * get_pointer(python::handle<T> const & p)$/;"	f	namespace:boost	signature:(python::handle<T> const & p)
boost::get_pointer	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    get_pointer($/;"	f	namespace:boost	signature:( python::detail::container_element<Container, Index, Policies> const& p)
boost::python	/usr/include/boost/python/arg_from_python.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/args.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/args_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/back_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/back_reference.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/base_type_traits.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/bases.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/borrowed.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/call.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/call_method.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/cast.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/class.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/class_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/arg_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/as_to_python_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/builtin_converters.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/constructor_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/context_result_converter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/convertible_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/implicit.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/pointer_type_id.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/pyobject_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/pyobject_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/pytype_function.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/registered.hpp	/^namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/registered_pointee.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/registrations.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/registry.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/return_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/converter/to_python_function_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/copy_const_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/copy_non_const_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/data_members.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/def.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/def_visitor.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/default_call_policies.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/aix_init_module.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/caller.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/construct.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/convertible.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/cv_category.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/dealloc.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/decorated_type_id.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/decref_guard.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/def_helper.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/def_helper_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/defaults_def.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/defaults_gen.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/dependent.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/destroy.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/enable_if.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/exception_handler.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/force_instantiate.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/if_else.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/indirect_traits.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/invoke.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/is_auto_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/is_wrapper.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/map_entry.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/none.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/not_specified.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/operator_id.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/overloads_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/pointee.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/python_type.hpp	/^namespace boost {namespace python {namespace detail{$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/raw_pyobject.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/referent_storage.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/result.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/scope.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/signature.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/string_literal.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/target.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/translate_exception.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/type_list_impl.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/unwind_type.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/value_arg.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/value_is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/void_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/void_return.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/detail/wrapper_base.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/dict.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/docstring_options.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/enum.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/errors.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/exception_translator.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/exec.hpp	/^namespace python $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/extract.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/handle.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/handle.hpp	/^namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/handle_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/has_back_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/implicit.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/import.hpp	/^namespace python $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/init.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/instance_holder.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/iterator.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/list.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/long.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/lvalue_from_pytype.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/make_constructor.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/make_function.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/manage_new_object.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/module_init.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/numeric.hpp	/^namespace boost { namespace python { namespace numeric {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/add_to_namespace.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/class.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/class_detail.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/class_metadata.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/class_wrapper.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/enum_base.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/find_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/forward.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/function.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/function_doc_signature.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/function_handle.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/function_object.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/inheritance.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/inheritance_query.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/iterator.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/life_support.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/make_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/make_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/make_ptr_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/pickle_support.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/py_function.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/stl_iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/value_holder.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object/value_holder_fwd.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_attributes.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_core.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_items.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_operators.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_protocol.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_protocol_core.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/object_slices.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/opaque_pointer_converter.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/operators.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/other.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/override.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/pointee.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/proxy.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/ptr.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/pure_virtual.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/raw_function.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/refcount.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/reference_existing_object.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/register_ptr_to_python.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/return_arg.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/return_by_value.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/return_internal_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/return_opaque_pointer.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/return_value_policy.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/scope.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/self.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/signature.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/slice.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/slice_nil.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/ssize_t.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/stl_iterator.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/str.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/suite/indexing/container_utils.hpp	/^namespace boost { namespace python { namespace container_utils {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/tag.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/to_python_converter.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/to_python_indirect.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/to_python_value.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/tuple.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
boost::python	/usr/include/boost/python/type_id.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/with_custodian_and_ward.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python	/usr/include/boost/python/wrapper.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
boost::python::BOOST_EXPLICIT_TEMPLATE_TYPE	/usr/include/boost/python/register_ptr_to_python.hpp	/^void register_ptr_to_python(BOOST_EXPLICIT_TEMPLATE_TYPE(P))$/;"	f	namespace:boost::python	signature:(P)
boost::python::BOOST_EXPLICIT_TEMPLATE_TYPE	/usr/include/boost/python/type_id.hpp	/^inline type_info type_id(BOOST_EXPLICIT_TEMPLATE_TYPE(T))$/;"	f	namespace:boost::python	signature:(T)
boost::python::BOOST_PYTHON_EXPLICIT_TT_DEF	/usr/include/boost/python/type_id.hpp	/^inline type_info type_id<const volatile void>(BOOST_PYTHON_EXPLICIT_TT_DEF(const volatile void))$/;"	f	namespace:boost::python	signature:(const volatile void)
boost::python::BOOST_PYTHON_EXPLICIT_TT_DEF	/usr/include/boost/python/type_id.hpp	/^inline type_info type_id<void>(BOOST_PYTHON_EXPLICIT_TT_DEF(void))$/;"	f	namespace:boost::python	signature:(void)
boost::python::allow_null	/usr/include/boost/python/handle.hpp	/^inline null_ok<T>* allow_null(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
boost::python::api	/usr/include/boost/python/converter/object_manager.hpp	/^  namespace api$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/extract.hpp	/^namespace api$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object/pickle_support.hpp	/^namespace api$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_attributes.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_core.hpp	/^namespace api$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_fwd.hpp	/^namespace api$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_items.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_operators.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_protocol.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_protocol_core.hpp	/^namespace api$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/object_slices.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/proxy.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
boost::python::api	/usr/include/boost/python/slice_nil.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost::python
boost::python::api::_	/usr/include/boost/python/slice_nil.hpp	/^static const slice_nil _ = slice_nil();$/;"	m	namespace:boost::python::api
boost::python::api::attribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct attribute_policies : const_attribute_policies$/;"	s	namespace:boost::python::api	inherits:const_attribute_policies
boost::python::api::attribute_policies::del	/usr/include/boost/python/object_attributes.hpp	/^    static void del(object const&target, char const* key);$/;"	p	struct:boost::python::api::attribute_policies	access:public	signature:(object const&target, char const* key)
boost::python::api::attribute_policies::del	/usr/include/boost/python/object_attributes.hpp	/^inline void attribute_policies::del($/;"	f	class:boost::python::api::attribute_policies	signature:( object const& target , char const* key)
boost::python::api::attribute_policies::set	/usr/include/boost/python/object_attributes.hpp	/^    static object const& set(object const& target, char const* key, object const& value);$/;"	p	struct:boost::python::api::attribute_policies	access:public	signature:(object const& target, char const* key, object const& value)
boost::python::api::attribute_policies::set	/usr/include/boost/python/object_attributes.hpp	/^inline object const& attribute_policies::set($/;"	f	class:boost::python::api::attribute_policies	signature:( object const& target , char const* key , object const& value)
boost::python::api::const_attribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct const_attribute_policies$/;"	s	namespace:boost::python::api
boost::python::api::const_attribute_policies::get	/usr/include/boost/python/object_attributes.hpp	/^    static object get(object const& target, char const* key);$/;"	p	struct:boost::python::api::const_attribute_policies	access:public	signature:(object const& target, char const* key)
boost::python::api::const_attribute_policies::get	/usr/include/boost/python/object_attributes.hpp	/^    static object get(object const& target, object const& key);$/;"	p	struct:boost::python::api::const_attribute_policies	access:public	signature:(object const& target, object const& key)
boost::python::api::const_attribute_policies::get	/usr/include/boost/python/object_attributes.hpp	/^inline object const_attribute_policies::get(object const& target, char const* key)$/;"	f	class:boost::python::api::const_attribute_policies	signature:(object const& target, char const* key)
boost::python::api::const_attribute_policies::key_type	/usr/include/boost/python/object_attributes.hpp	/^    typedef char const* key_type;$/;"	t	struct:boost::python::api::const_attribute_policies	access:public
boost::python::api::const_item_policies	/usr/include/boost/python/object_items.hpp	/^struct const_item_policies$/;"	s	namespace:boost::python::api
boost::python::api::const_item_policies::get	/usr/include/boost/python/object_items.hpp	/^    static object get(object const& target, object const& key);$/;"	p	struct:boost::python::api::const_item_policies	access:public	signature:(object const& target, object const& key)
boost::python::api::const_item_policies::get	/usr/include/boost/python/object_items.hpp	/^inline object const_item_policies::get(object const& target, object const& key)$/;"	f	class:boost::python::api::const_item_policies	signature:(object const& target, object const& key)
boost::python::api::const_item_policies::key_type	/usr/include/boost/python/object_items.hpp	/^    typedef object key_type;$/;"	t	struct:boost::python::api::const_item_policies	access:public
boost::python::api::const_objattribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct const_objattribute_policies$/;"	s	namespace:boost::python::api
boost::python::api::const_objattribute_policies::get	/usr/include/boost/python/object_attributes.hpp	/^    static object get(object const& target, object const& key);$/;"	p	struct:boost::python::api::const_objattribute_policies	access:public	signature:(object const& target, object const& key)
boost::python::api::const_objattribute_policies::get	/usr/include/boost/python/object_attributes.hpp	/^inline object const_objattribute_policies::get(object const& target, object const& key)$/;"	f	class:boost::python::api::const_objattribute_policies	signature:(object const& target, object const& key)
boost::python::api::const_objattribute_policies::key_type	/usr/include/boost/python/object_attributes.hpp	/^    typedef object const key_type;$/;"	t	struct:boost::python::api::const_objattribute_policies	access:public
boost::python::api::const_object_attribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_attribute_policies> const_object_attribute;$/;"	t	namespace:boost::python::api
boost::python::api::const_object_item	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_item_policies> const_object_item;$/;"	t	namespace:boost::python::api
boost::python::api::const_object_objattribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_objattribute_policies> const_object_objattribute;$/;"	t	namespace:boost::python::api
boost::python::api::const_object_slice	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_slice_policies> const_object_slice;$/;"	t	namespace:boost::python::api
boost::python::api::const_slice_policies	/usr/include/boost/python/object_slices.hpp	/^struct const_slice_policies$/;"	s	namespace:boost::python::api
boost::python::api::const_slice_policies::get	/usr/include/boost/python/object_slices.hpp	/^    static object get(object const& target, key_type const& key);$/;"	p	struct:boost::python::api::const_slice_policies	access:public	signature:(object const& target, key_type const& key)
boost::python::api::const_slice_policies::get	/usr/include/boost/python/object_slices.hpp	/^inline object const_slice_policies::get(object const& target, key_type const& key)$/;"	f	class:boost::python::api::const_slice_policies	signature:(object const& target, key_type const& key)
boost::python::api::const_slice_policies::key_type	/usr/include/boost/python/object_slices.hpp	/^    typedef std::pair<handle<>, handle<> > key_type;$/;"	t	struct:boost::python::api::const_slice_policies	access:public
boost::python::api::del	/usr/include/boost/python/proxy.hpp	/^inline void del(proxy<T> const& x)$/;"	f	namespace:boost::python::api	signature:(proxy<T> const& x)
boost::python::api::delattr	/usr/include/boost/python/object_protocol.hpp	/^void delattr(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
boost::python::api::delattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delattr(object const& target, char const* key);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key)
boost::python::api::delattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delattr(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
boost::python::api::delitem	/usr/include/boost/python/object_protocol.hpp	/^void delitem(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
boost::python::api::delitem	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delitem(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
boost::python::api::delslice	/usr/include/boost/python/object_protocol.hpp	/^void delslice(object const& target, Begin const& begin, End const& end)$/;"	f	namespace:boost::python::api	signature:(object const& target, Begin const& begin, End const& end)
boost::python::api::delslice	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delslice(object const& target, handle<> const& begin, handle<> const& end);$/;"	p	namespace:boost::python::api	signature:(object const& target, handle<> const& begin, handle<> const& end)
boost::python::api::do_unforward_cref	/usr/include/boost/python/object_core.hpp	/^  char const (& do_unforward_cref(char const(&x)[N]) )[N]$/;"	f	namespace:boost::python::api	signature:(char const(&x)[N])
boost::python::api::do_unforward_cref	/usr/include/boost/python/object_core.hpp	/^  typename objects::unforward_cref<T>::type do_unforward_cref(T const& x)$/;"	f	namespace:boost::python::api	signature:(T const& x)
boost::python::api::enable_binary	/usr/include/boost/python/object_operators.hpp	/^struct enable_binary$/;"	s	namespace:boost::python::api	inherits:boost::iterators::enable_if
boost::python::api::getattr	/usr/include/boost/python/object_protocol.hpp	/^object getattr(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
boost::python::api::getattr	/usr/include/boost/python/object_protocol.hpp	/^object getattr(Target const& target, Key const& key, Default const& default_ BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(Target const& target, Key const& key, Default const& default_ BOOST_PYTHON_NO_ARRAY_ARG(Key))
boost::python::api::getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, char const* key);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key)
boost::python::api::getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, char const* key, object const& default_);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key, object const& default_)
boost::python::api::getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
boost::python::api::getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, object const& key, object const& default_);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key, object const& default_)
boost::python::api::getitem	/usr/include/boost/python/object_protocol.hpp	/^object getitem(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
boost::python::api::getitem	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getitem(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
boost::python::api::getslice	/usr/include/boost/python/object_protocol.hpp	/^object getslice(Target const& target, Begin const& begin, End const& end)$/;"	f	namespace:boost::python::api	signature:(Target const& target, Begin const& begin, End const& end)
boost::python::api::getslice	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getslice(object const& target, handle<> const& begin, handle<> const& end);$/;"	p	namespace:boost::python::api	signature:(object const& target, handle<> const& begin, handle<> const& end)
boost::python::api::is_derived	/usr/include/boost/python/object_core.hpp	/^  struct is_derived$/;"	s	namespace:boost::python::api	inherits:is_convertible
boost::python::api::is_derived	/usr/include/boost/python/object_core.hpp	/^  struct is_derived$/;"	s	namespace:boost::python::api	inherits:mpl::bool_
boost::python::api::is_derived_impl	/usr/include/boost/python/object_core.hpp	/^  struct is_derived_impl$/;"	s	namespace:boost::python::api
boost::python::api::is_derived_impl::BOOST_STATIC_CONSTANT	/usr/include/boost/python/object_core.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = sizeof(test(to_pointer(x))) == 1);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(bool, value = sizeof(test(to_pointer(x))) == 1)
boost::python::api::is_derived_impl::no	/usr/include/boost/python/object_core.hpp	/^      typedef char (&no)[2];$/;"	t	struct:boost::python::api::is_derived_impl	access:public
boost::python::api::is_derived_impl::test	/usr/include/boost/python/object_core.hpp	/^      static char test(U const*);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(U const*)
boost::python::api::is_derived_impl::test	/usr/include/boost/python/object_core.hpp	/^      static no test(...);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(....)
boost::python::api::is_derived_impl::to_pointer	/usr/include/boost/python/object_core.hpp	/^      static X* to_pointer(X const&);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(X const&)
boost::python::api::is_derived_impl::x	/usr/include/boost/python/object_core.hpp	/^      static T x;$/;"	m	struct:boost::python::api::is_derived_impl	access:public
boost::python::api::is_object_operators	/usr/include/boost/python/object_operators.hpp	/^struct is_object_operators$/;"	s	namespace:boost::python::api
boost::python::api::is_object_operators::type	/usr/include/boost/python/object_operators.hpp	/^    typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::api::is_object_operators	access:public
boost::python::api::is_object_operators::value	/usr/include/boost/python/object_operators.hpp	/^        value $/;"	e	enum:boost::python::api::is_object_operators::__anon8
boost::python::api::is_object_operators_helper	/usr/include/boost/python/object_operators.hpp	/^char is_object_operators_helper(object_operators<X> const*);$/;"	p	namespace:boost::python::api	signature:(object_operators<X> const*)
boost::python::api::is_object_operators_helper	/usr/include/boost/python/object_operators.hpp	/^no_type is_object_operators_helper(...);$/;"	p	namespace:boost::python::api	signature:(....)
boost::python::api::item_policies	/usr/include/boost/python/object_items.hpp	/^struct item_policies : const_item_policies$/;"	s	namespace:boost::python::api	inherits:const_item_policies
boost::python::api::item_policies::del	/usr/include/boost/python/object_items.hpp	/^    static void del(object const& target, object const& key);$/;"	p	struct:boost::python::api::item_policies	access:public	signature:(object const& target, object const& key)
boost::python::api::item_policies::del	/usr/include/boost/python/object_items.hpp	/^inline void item_policies::del($/;"	f	class:boost::python::api::item_policies	signature:( object const& target , object const& key)
boost::python::api::item_policies::set	/usr/include/boost/python/object_items.hpp	/^    static object const& set(object const& target, object const& key, object const& value);$/;"	p	struct:boost::python::api::item_policies	access:public	signature:(object const& target, object const& key, object const& value)
boost::python::api::item_policies::set	/usr/include/boost/python/object_items.hpp	/^inline object const& item_policies::set($/;"	f	class:boost::python::api::item_policies	signature:( object const& target , object const& key , object const& value)
boost::python::api::make_ptr	/usr/include/boost/python/object_operators.hpp	/^template <class X> X* make_ptr();$/;"	p	namespace:boost::python::api	signature:()
boost::python::api::no_type	/usr/include/boost/python/object_operators.hpp	/^typedef char (&no_type)[2];$/;"	t	namespace:boost::python::api
boost::python::api::objattribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct objattribute_policies : const_objattribute_policies$/;"	s	namespace:boost::python::api	inherits:const_objattribute_policies
boost::python::api::objattribute_policies::del	/usr/include/boost/python/object_attributes.hpp	/^    static void del(object const&target, object const& key);$/;"	p	struct:boost::python::api::objattribute_policies	access:public	signature:(object const&target, object const& key)
boost::python::api::objattribute_policies::del	/usr/include/boost/python/object_attributes.hpp	/^inline void objattribute_policies::del($/;"	f	class:boost::python::api::objattribute_policies	signature:( object const& target , object const& key)
boost::python::api::objattribute_policies::set	/usr/include/boost/python/object_attributes.hpp	/^    static object const& set(object const& target, object const& key, object const& value);$/;"	p	struct:boost::python::api::objattribute_policies	access:public	signature:(object const& target, object const& key, object const& value)
boost::python::api::objattribute_policies::set	/usr/include/boost/python/object_attributes.hpp	/^inline object const& objattribute_policies::set($/;"	f	class:boost::python::api::objattribute_policies	signature:( object const& target , object const& key , object const& value)
boost::python::api::object	/usr/include/boost/python/object_core.hpp	/^  class object : public object_base$/;"	c	namespace:boost::python::api	inherits:object_base
boost::python::api::object::object	/usr/include/boost/python/object_core.hpp	/^      BOOST_PYTHON_DECL explicit object(handle<> const&);$/;"	p	class:boost::python::api::object	access:public	signature:(handle< const&)
boost::python::api::object::object	/usr/include/boost/python/object_core.hpp	/^      explicit object($/;"	f	class:boost::python::api::object	access:public	signature:( T const& x , typename mpl::if_<is_proxy<T>,int&,int>::type* = 0 )
boost::python::api::object::object	/usr/include/boost/python/object_core.hpp	/^      explicit object(detail::borrowed_reference);$/;"	p	class:boost::python::api::object	access:public	signature:(detail::borrowed_reference)
boost::python::api::object::object	/usr/include/boost/python/object_core.hpp	/^      explicit object(detail::new_non_null_reference);$/;"	p	class:boost::python::api::object	access:public	signature:(detail::new_non_null_reference)
boost::python::api::object::object	/usr/include/boost/python/object_core.hpp	/^      explicit object(detail::new_reference);$/;"	p	class:boost::python::api::object	access:public	signature:(detail::new_reference)
boost::python::api::object::object	/usr/include/boost/python/object_core.hpp	/^      object();$/;"	p	class:boost::python::api::object	access:public	signature:()
boost::python::api::object_attribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<attribute_policies> object_attribute;$/;"	t	namespace:boost::python::api
boost::python::api::object_base	/usr/include/boost/python/object_core.hpp	/^  struct object_base : object_operators<object>$/;"	s	namespace:boost::python::api	inherits:object_operators
boost::python::api::object_base::is_none	/usr/include/boost/python/object_core.hpp	/^      inline bool is_none() const;$/;"	p	struct:boost::python::api::object_base	access:public	signature:() const
boost::python::api::object_base::is_none	/usr/include/boost/python/object_core.hpp	/^inline bool api::object_base::is_none() const$/;"	f	class:boost::python::api::object_base	signature:() const
boost::python::api::object_base::m_ptr	/usr/include/boost/python/object_core.hpp	/^      PyObject* m_ptr;$/;"	m	struct:boost::python::api::object_base	access:private
boost::python::api::object_base::object_base	/usr/include/boost/python/object_core.hpp	/^      inline object_base(PyObject* ptr);$/;"	p	struct:boost::python::api::object_base	access:public	signature:(PyObject* ptr)
boost::python::api::object_base::object_base	/usr/include/boost/python/object_core.hpp	/^      inline object_base(object_base const&);$/;"	p	struct:boost::python::api::object_base	access:public	signature:(object_base const&)
boost::python::api::object_base::object_base	/usr/include/boost/python/object_core.hpp	/^inline api::object_base::object_base(PyObject* p)$/;"	f	class:boost::python::api::object_base	signature:(PyObject* p)
boost::python::api::object_base::object_base	/usr/include/boost/python/object_core.hpp	/^inline api::object_base::object_base(object_base const& rhs)$/;"	f	class:boost::python::api::object_base	signature:(object_base const& rhs)
boost::python::api::object_base::operator =	/usr/include/boost/python/object_core.hpp	/^      inline object_base& operator=(object_base const& rhs);$/;"	p	struct:boost::python::api::object_base	access:public	signature:(object_base const& rhs)
boost::python::api::object_base::operator =	/usr/include/boost/python/object_core.hpp	/^inline api::object_base& api::object_base::operator=(api::object_base const& rhs)$/;"	f	class:boost::python::api::object_base	signature:(api::object_base const& rhs)
boost::python::api::object_base::ptr	/usr/include/boost/python/object_core.hpp	/^      inline PyObject* ptr() const;$/;"	p	struct:boost::python::api::object_base	access:public	signature:() const
boost::python::api::object_base::ptr	/usr/include/boost/python/object_core.hpp	/^inline PyObject* api::object_base::ptr() const$/;"	f	class:boost::python::api::object_base	signature:() const
boost::python::api::object_base::~object_base	/usr/include/boost/python/object_core.hpp	/^      inline ~object_base();$/;"	p	struct:boost::python::api::object_base	access:public	signature:()
boost::python::api::object_base::~object_base	/usr/include/boost/python/object_core.hpp	/^inline api::object_base::~object_base()$/;"	f	class:boost::python::api::object_base	signature:()
boost::python::api::object_base_initializer	/usr/include/boost/python/object_core.hpp	/^  PyObject* object_base_initializer(T const& x)$/;"	f	namespace:boost::python::api	signature:(T const& x)
boost::python::api::object_initializer	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer : object_initializer_impl<$/;"	s	namespace:boost::python::api	inherits:object_initializer_impl
boost::python::api::object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl$/;"	s	namespace:boost::python::api
boost::python::api::object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl<false, true>$/;"	s	namespace:boost::python::api
boost::python::api::object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl<true, false>$/;"	s	namespace:boost::python::api
boost::python::api::object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl<true, true>$/;"	s	namespace:boost::python::api
boost::python::api::object_initializer_impl::get	/usr/include/boost/python/object_core.hpp	/^      get(T const& x, U)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(T const& x, U)
boost::python::api::object_initializer_impl::get	/usr/include/boost/python/object_core.hpp	/^      get(T const& x, mpl::false_)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(T const& x, mpl::false_)
boost::python::api::object_initializer_impl::get	/usr/include/boost/python/object_core.hpp	/^      get(object const& x, mpl::true_)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(object const& x, mpl::true_)
boost::python::api::object_initializer_impl::get	/usr/include/boost/python/object_core.hpp	/^      get(proxy<Policies> const& x, mpl::false_)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(proxy<Policies> const& x, mpl::false_)
boost::python::api::object_item	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<item_policies> object_item;$/;"	t	namespace:boost::python::api
boost::python::api::object_objattribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<objattribute_policies> object_objattribute;$/;"	t	namespace:boost::python::api
boost::python::api::object_operators	/usr/include/boost/python/object_core.hpp	/^  class object_operators : public def_visitor<U>$/;"	c	namespace:boost::python::api	inherits:def_visitor
boost::python::api::object_operators::attr	/usr/include/boost/python/object_attributes.hpp	/^inline const_object_attribute object_operators<U>::attr(char const* name) const$/;"	f	class:boost::python::api::object_operators	signature:(char const* name) const
boost::python::api::object_operators::attr	/usr/include/boost/python/object_attributes.hpp	/^inline const_object_objattribute object_operators<U>::attr(object const& name) const$/;"	f	class:boost::python::api::object_operators	signature:(object const& name) const
boost::python::api::object_operators::attr	/usr/include/boost/python/object_attributes.hpp	/^inline object_attribute object_operators<U>::attr(char const* name)$/;"	f	class:boost::python::api::object_operators	signature:(char const* name)
boost::python::api::object_operators::attr	/usr/include/boost/python/object_attributes.hpp	/^inline object_objattribute object_operators<U>::attr(object const& name)$/;"	f	class:boost::python::api::object_operators	signature:(object const& name)
boost::python::api::object_operators::attr	/usr/include/boost/python/object_core.hpp	/^      const_object_attribute attr(char const*) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(char const*) const
boost::python::api::object_operators::attr	/usr/include/boost/python/object_core.hpp	/^      const_object_objattribute attr(object const&) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object const&) const
boost::python::api::object_operators::attr	/usr/include/boost/python/object_core.hpp	/^      object_attribute attr(char const*);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(char const*)
boost::python::api::object_operators::attr	/usr/include/boost/python/object_core.hpp	/^      object_objattribute attr(object const&);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object const&)
boost::python::api::object_operators::contains	/usr/include/boost/python/object_core.hpp	/^      object contains(T const& key) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& key) const
boost::python::api::object_operators::contains	/usr/include/boost/python/object_core.hpp	/^object api::object_operators<U>::contains(T const& key) const$/;"	f	class:boost::python::api::object_operators	signature:(T const& key) const
boost::python::api::object_operators::object_cref	/usr/include/boost/python/object_core.hpp	/^      typedef object const& object_cref;$/;"	t	class:boost::python::api::object_operators	access:protected
boost::python::api::object_operators::object_cref2	/usr/include/boost/python/object_core.hpp	/^    typedef object const object_cref2;$/;"	t	class:boost::python::api::object_operators	access:private
boost::python::api::object_operators::object_cref2	/usr/include/boost/python/object_core.hpp	/^    typedef object const& object_cref2;$/;"	t	class:boost::python::api::object_operators	access:private
boost::python::api::object_operators::operator !	/usr/include/boost/python/object_core.hpp	/^      bool operator!() const; \/\/ needed for vc6$/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
boost::python::api::object_operators::operator !	/usr/include/boost/python/object_operators.hpp	/^object_operators<U>::operator!() const$/;"	f	class:boost::python::api::object_operators	signature:() const
boost::python::api::object_operators::operator ()	/usr/include/boost/python/object_core.hpp	/^      object operator()() const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
boost::python::api::object_operators::operator ()	/usr/include/boost/python/object_core.hpp	/^      object operator()(detail::args_proxy const &args) const; $/;"	p	class:boost::python::api::object_operators	access:public	signature:(detail::args_proxy const &args) const
boost::python::api::object_operators::operator ()	/usr/include/boost/python/object_core.hpp	/^      object operator()(detail::args_proxy const &args, $/;"	p	class:boost::python::api::object_operators	access:public	signature:(detail::args_proxy const &args, detail::kwds_proxy const &kwds) const
boost::python::api::object_operators::operator ()	/usr/include/boost/python/object_core.hpp	/^object api::object_operators<U>::operator()(detail::args_proxy const &args) const $/;"	f	class:boost::python::api::object_operators	signature:(detail::args_proxy const &args) const
boost::python::api::object_operators::operator ()	/usr/include/boost/python/object_core.hpp	/^object api::object_operators<U>::operator()(detail::args_proxy const &args, $/;"	f	class:boost::python::api::object_operators	signature:(detail::args_proxy const &args, detail::kwds_proxy const &kwds) const
boost::python::api::object_operators::operator ()	/usr/include/boost/python/object_operators.hpp	/^object object_operators<U>::operator()() const$/;"	f	class:boost::python::api::object_operators	signature:() const
boost::python::api::object_operators::operator *	/usr/include/boost/python/object_core.hpp	/^      detail::args_proxy operator* () const; $/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
boost::python::api::object_operators::operator *	/usr/include/boost/python/object_core.hpp	/^detail::args_proxy api::object_operators<U>::operator* () const $/;"	f	class:boost::python::api::object_operators	signature:() const
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_core.hpp	/^      const_object_item operator[](object_cref) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref) const
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_core.hpp	/^      object_item operator[](object_cref);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref)
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_core.hpp	/^      operator[](T const& key) const$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& key) const
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_core.hpp	/^      operator[](T const& key)$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& key)
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](T const& key) const$/;"	f	class:boost::python::api::object_operators	signature:(T const& key) const
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](T const& key)$/;"	f	class:boost::python::api::object_operators	signature:(T const& key)
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](object_cref key) const$/;"	f	class:boost::python::api::object_operators	signature:(object_cref key) const
boost::python::api::object_operators::operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](object_cref key)$/;"	f	class:boost::python::api::object_operators	signature:(object_cref key)
boost::python::api::object_operators::operator bool_type	/usr/include/boost/python/object_core.hpp	/^      operator bool_type() const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
boost::python::api::object_operators::operator bool_type	/usr/include/boost/python/object_operators.hpp	/^object_operators<U>::operator bool_type() const$/;"	f	class:boost::python::api::object_operators	signature:() const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(object_cref, object_cref) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, object_cref) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(object_cref, slice_nil) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, slice_nil) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(slice_nil, object_cref) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, object_cref) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(slice_nil, slice_nil) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, slice_nil) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(object_cref, object_cref);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, object_cref)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(object_cref, slice_nil);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, slice_nil)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(slice_nil, object_cref);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, object_cref)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(slice_nil, slice_nil);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, slice_nil)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      slice(T const& start, V const& end) const$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& start, V const& end) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_core.hpp	/^      slice(T const& start, V const& end)$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& start, V const& end)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(T const& start, V const& end) const$/;"	f	class:boost::python::api::object_operators	signature:(T const& start, V const& end) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(T const& start, V const& end)$/;"	f	class:boost::python::api::object_operators	signature:(T const& start, V const& end)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, object_cref finish) const$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, object_cref finish) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, object_cref finish)$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, object_cref finish)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, slice_nil) const$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, slice_nil) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, slice_nil)$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, slice_nil)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, object_cref finish) const$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, object_cref finish) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, object_cref finish)$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, object_cref finish)
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, slice_nil) const$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, slice_nil) const
boost::python::api::object_operators::slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, slice_nil)$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, slice_nil)
boost::python::api::object_operators::visit	/usr/include/boost/python/object_core.hpp	/^      void visit(ClassT& cl, char const* name, python::detail::def_helper<DocStringT> const& helper) const$/;"	f	class:boost::python::api::object_operators	access:private	signature:(ClassT& cl, char const* name, python::detail::def_helper<DocStringT> const& helper) const
boost::python::api::object_slice	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<slice_policies> object_slice;$/;"	t	namespace:boost::python::api
boost::python::api::proxy	/usr/include/boost/python/proxy.hpp	/^class proxy : public object_operators<proxy<Policies> >$/;"	c	namespace:boost::python::api	inherits:object_operators
boost::python::api::proxy::assignment_self	/usr/include/boost/python/proxy.hpp	/^    typedef proxy assignment_self;$/;"	t	class:boost::python::api::proxy	access:private
boost::python::api::proxy::assignment_self	/usr/include/boost/python/proxy.hpp	/^    typedef proxy const& assignment_self;$/;"	t	class:boost::python::api::proxy	access:private
boost::python::api::proxy::del	/usr/include/boost/python/proxy.hpp	/^    void del() const;$/;"	p	class:boost::python::api::proxy	access:public	signature:() const
boost::python::api::proxy::del	/usr/include/boost/python/proxy.hpp	/^inline void proxy<Policies>::del() const$/;"	f	class:boost::python::api::proxy	signature:() const
boost::python::api::proxy::key_type	/usr/include/boost/python/proxy.hpp	/^    typedef typename Policies::key_type key_type;$/;"	t	class:boost::python::api::proxy	access:private
boost::python::api::proxy::m_key	/usr/include/boost/python/proxy.hpp	/^    key_type m_key;$/;"	m	class:boost::python::api::proxy	access:private
boost::python::api::proxy::m_target	/usr/include/boost/python/proxy.hpp	/^    object m_target;$/;"	m	class:boost::python::api::proxy	access:private
boost::python::api::proxy::operator =	/usr/include/boost/python/proxy.hpp	/^    inline proxy const& operator=(T const& rhs) const$/;"	f	class:boost::python::api::proxy	access:public	signature:(T const& rhs) const
boost::python::api::proxy::operator =	/usr/include/boost/python/proxy.hpp	/^    proxy const& operator=(assignment_self) const;$/;"	p	class:boost::python::api::proxy	access:public	signature:(assignment_self) const
boost::python::api::proxy::operator =	/usr/include/boost/python/proxy.hpp	/^inline proxy<Policies> const& proxy<Policies>::operator=(typename proxy::assignment_self rhs) const$/;"	f	class:boost::python::api::proxy	signature:(typename proxy::assignment_self rhs) const
boost::python::api::proxy::operator object	/usr/include/boost/python/proxy.hpp	/^    operator object() const;$/;"	p	class:boost::python::api::proxy	access:public	signature:() const
boost::python::api::proxy::operator object	/usr/include/boost/python/proxy.hpp	/^inline proxy<Policies>::operator object() const$/;"	f	class:boost::python::api::proxy	signature:() const
boost::python::api::proxy::proxy	/usr/include/boost/python/proxy.hpp	/^    proxy(object const& target, key_type const& key);$/;"	p	class:boost::python::api::proxy	access:public	signature:(object const& target, key_type const& key)
boost::python::api::proxy::proxy	/usr/include/boost/python/proxy.hpp	/^inline proxy<Policies>::proxy(object const& target, key_type const& key)$/;"	f	class:boost::python::api::proxy	signature:(object const& target, key_type const& key)
boost::python::api::setattr	/usr/include/boost/python/object_protocol.hpp	/^void setattr(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))
boost::python::api::setattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setattr(object const& target, char const* key, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key, object const& value)
boost::python::api::setattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setattr(object const& target, object const& key, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key, object const& value)
boost::python::api::setitem	/usr/include/boost/python/object_protocol.hpp	/^void setitem(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))
boost::python::api::setitem	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setitem(object const& target, object const& key, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key, object const& value)
boost::python::api::setslice	/usr/include/boost/python/object_protocol.hpp	/^void setslice(object const& target, Begin const& begin, End const& end, Value const& value)$/;"	f	namespace:boost::python::api	signature:(object const& target, Begin const& begin, End const& end, Value const& value)
boost::python::api::setslice	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setslice(object const& target, handle<> const& begin, handle<> const& end, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, handle<> const& begin, handle<> const& end, object const& value)
boost::python::api::slice_bound	/usr/include/boost/python/slice_nil.hpp	/^struct slice_bound$/;"	s	namespace:boost::python::api
boost::python::api::slice_bound	/usr/include/boost/python/slice_nil.hpp	/^struct slice_bound<slice_nil>$/;"	s	namespace:boost::python::api
boost::python::api::slice_bound::type	/usr/include/boost/python/slice_nil.hpp	/^    typedef object type;$/;"	t	struct:boost::python::api::slice_bound	access:public
boost::python::api::slice_bound::type	/usr/include/boost/python/slice_nil.hpp	/^    typedef slice_nil type;$/;"	t	struct:boost::python::api::slice_bound	access:public
boost::python::api::slice_key	/usr/include/boost/python/object_slices.hpp	/^inline slice_policies::key_type slice_key(T x, U y)$/;"	f	namespace:boost::python::api	signature:(T x, U y)
boost::python::api::slice_nil	/usr/include/boost/python/slice_nil.hpp	/^class slice_nil : public object$/;"	c	namespace:boost::python::api	inherits:object
boost::python::api::slice_nil::slice_nil	/usr/include/boost/python/slice_nil.hpp	/^    slice_nil() : object() {}$/;"	f	class:boost::python::api::slice_nil	access:public	signature:()
boost::python::api::slice_policies	/usr/include/boost/python/object_slices.hpp	/^struct slice_policies : const_slice_policies$/;"	s	namespace:boost::python::api	inherits:const_slice_policies
boost::python::api::slice_policies::del	/usr/include/boost/python/object_slices.hpp	/^    static void del(object const& target, key_type const& key);$/;"	p	struct:boost::python::api::slice_policies	access:public	signature:(object const& target, key_type const& key)
boost::python::api::slice_policies::del	/usr/include/boost/python/object_slices.hpp	/^inline void slice_policies::del($/;"	f	class:boost::python::api::slice_policies	signature:( object const& target , key_type const& key)
boost::python::api::slice_policies::set	/usr/include/boost/python/object_slices.hpp	/^    static object const& set(object const& target, key_type const& key, object const& value);$/;"	p	struct:boost::python::api::slice_policies	access:public	signature:(object const& target, key_type const& key, object const& value)
boost::python::api::slice_policies::set	/usr/include/boost/python/object_slices.hpp	/^inline object const& slice_policies::set($/;"	f	class:boost::python::api::slice_policies	signature:( object const& target , key_type const& key , object const& value)
boost::python::arg	/usr/include/boost/python/args.hpp	/^typedef detail::keywords<1> arg;$/;"	t	namespace:boost::python
boost::python::arg_	/usr/include/boost/python/args.hpp	/^typedef arg arg_; \/\/ gcc 2.96 workaround$/;"	t	namespace:boost::python
boost::python::arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^struct arg_from_python$/;"	s	namespace:boost::python	inherits:converter::select_arg_from_python::type
boost::python::arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^struct arg_from_python<PyObject* const&>$/;"	s	namespace:boost::python
boost::python::arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^struct arg_from_python<PyObject*>$/;"	s	namespace:boost::python
boost::python::arg_from_python::arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^    arg_from_python(PyObject* p) : m_source(p) {}$/;"	f	struct:boost::python::arg_from_python	access:public	signature:(PyObject* p)
boost::python::arg_from_python::arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^    arg_from_python(PyObject*);$/;"	p	struct:boost::python::arg_from_python	access:public	signature:(PyObject*)
boost::python::arg_from_python::arg_from_python	/usr/include/boost/python/arg_from_python.hpp	/^inline arg_from_python<T>::arg_from_python(PyObject* source)$/;"	f	class:boost::python::arg_from_python	signature:(PyObject* source)
boost::python::arg_from_python::base	/usr/include/boost/python/arg_from_python.hpp	/^        >::type base;$/;"	t	struct:boost::python::arg_from_python	access:public
boost::python::arg_from_python::convertible	/usr/include/boost/python/arg_from_python.hpp	/^    bool convertible() const { return true; }$/;"	f	struct:boost::python::arg_from_python	access:public	signature:() const
boost::python::arg_from_python::m_source	/usr/include/boost/python/arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::arg_from_python	access:private
boost::python::arg_from_python::operator ()	/usr/include/boost/python/arg_from_python.hpp	/^    PyObject* operator()() const { return m_source; }$/;"	f	struct:boost::python::arg_from_python	access:public	signature:() const
boost::python::arg_from_python::operator ()	/usr/include/boost/python/arg_from_python.hpp	/^    PyObject*const& operator()() const { return m_source; }$/;"	f	struct:boost::python::arg_from_python	access:public	signature:() const
boost::python::arg_from_python::result_type	/usr/include/boost/python/arg_from_python.hpp	/^    typedef PyObject* const& result_type;$/;"	t	struct:boost::python::arg_from_python	access:public
boost::python::arg_from_python::result_type	/usr/include/boost/python/arg_from_python.hpp	/^    typedef PyObject* result_type;$/;"	t	struct:boost::python::arg_from_python	access:public
boost::python::args	/usr/include/boost/python/args.hpp	/^inline detail::keywords<1> args(char const* name)$/;"	f	namespace:boost::python	signature:(char const* name)
boost::python::back_reference	/usr/include/boost/python/back_reference.hpp	/^struct back_reference$/;"	s	namespace:boost::python
boost::python::back_reference::back_reference	/usr/include/boost/python/back_reference.hpp	/^    back_reference(PyObject*, T);$/;"	p	struct:boost::python::back_reference	access:public	signature:(PyObject*, T)
boost::python::back_reference::back_reference	/usr/include/boost/python/back_reference.hpp	/^back_reference<T>::back_reference(PyObject* p, T x)$/;"	f	class:boost::python::back_reference	signature:(PyObject* p, T x)
boost::python::back_reference::back_reference::source	/usr/include/boost/python/back_reference.hpp	/^typename back_reference<T>::source_t const& back_reference<T>::source() const$/;"	f	class:boost::python::back_reference::back_reference	signature:() const
boost::python::back_reference::get	/usr/include/boost/python/back_reference.hpp	/^    T get() const;$/;"	p	struct:boost::python::back_reference	access:public	signature:() const
boost::python::back_reference::get	/usr/include/boost/python/back_reference.hpp	/^T back_reference<T>::get() const$/;"	f	class:boost::python::back_reference	signature:() const
boost::python::back_reference::m_source	/usr/include/boost/python/back_reference.hpp	/^    source_t m_source;$/;"	m	struct:boost::python::back_reference	access:private
boost::python::back_reference::m_value	/usr/include/boost/python/back_reference.hpp	/^    T m_value;$/;"	m	struct:boost::python::back_reference	access:private
boost::python::back_reference::source	/usr/include/boost/python/back_reference.hpp	/^    source_t const& source() const;$/;"	p	struct:boost::python::back_reference	access:public	signature:() const
boost::python::back_reference::source_t	/usr/include/boost/python/back_reference.hpp	/^    typedef typename detail::dependent<object,T>::type source_t;$/;"	t	struct:boost::python::back_reference	access:private
boost::python::back_reference::type	/usr/include/boost/python/back_reference.hpp	/^    typedef T type;$/;"	t	struct:boost::python::back_reference	access:public
boost::python::base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^struct base_type_traits<PyMethodObject>$/;"	s	namespace:boost::python
boost::python::base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^struct base_type_traits<PyObject>$/;"	s	namespace:boost::python
boost::python::base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^struct base_type_traits<PyTypeObject>$/;"	s	namespace:boost::python
boost::python::base_type_traits	/usr/include/boost/python/base_type_traits.hpp	/^template <class T> struct base_type_traits$/;"	s	namespace:boost::python	inherits:detail::unspecialized
boost::python::base_type_traits::type	/usr/include/boost/python/base_type_traits.hpp	/^    typedef PyObject type;$/;"	t	struct:boost::python::base_type_traits	access:public
boost::python::bases	/usr/include/boost/python/bases.hpp	/^  struct bases : detail::type_list< BOOST_PYTHON_BASE_PARAMS >::type$/;"	s	namespace:boost::python	inherits:detail::type_list::type
boost::python::borrowed	/usr/include/boost/python/borrowed.hpp	/^inline python::detail::borrowed<T>* borrowed(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
boost::python::class_	/usr/include/boost/python/class.hpp	/^class class_ : public objects::class_base$/;"	c	namespace:boost::python	inherits:objects::class_base
boost::python::class_::add_property	/usr/include/boost/python/class.hpp	/^    add_property(char const* name, Get fget, Set fset, char const* docstr)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, Set fset, char const* docstr)
boost::python::class_::add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget)
boost::python::class_::add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget, DocStrOrSet docstr_or_set)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, DocStrOrSet docstr_or_set)
boost::python::class_::add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget, Set fset, char const* docstr = 0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, Set fset, char const* docstr = 0)
boost::python::class_::add_property	/usr/include/boost/python/class.hpp	/^    self& add_property(char const* name, Get fget, char const* docstr = 0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, char const* docstr = 0)
boost::python::class_::add_property_impl	/usr/include/boost/python/class.hpp	/^    self& add_property_impl(char const* name, Get fget, Set fset, ...)$/;"	f	class:boost::python::class_	access:private	signature:(char const* name, Get fget, Set fset, ...)
boost::python::class_::add_property_impl	/usr/include/boost/python/class.hpp	/^    self& add_property_impl(char const* name, Get fget, char const* docstr, int)$/;"	f	class:boost::python::class_	access:private	signature:(char const* name, Get fget, char const* docstr, int)
boost::python::class_::add_static_property	/usr/include/boost/python/class.hpp	/^    self& add_static_property(char const* name, Get fget)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget)
boost::python::class_::add_static_property	/usr/include/boost/python/class.hpp	/^    self& add_static_property(char const* name, Get fget, Set fset)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Get fget, Set fset)
boost::python::class_::base	/usr/include/boost/python/class.hpp	/^    typedef objects::class_base base;$/;"	t	class:boost::python::class_	access:public
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^    class_(char const* name, char const* doc = 0);$/;"	p	class:boost::python::class_	access:public	signature:(char const* name, char const* doc = 0)
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^    class_(char const* name, char const* doc, no_init_t);$/;"	p	class:boost::python::class_	access:public	signature:(char const* name, char const* doc, no_init_t)
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^    class_(char const* name, no_init_t);$/;"	p	class:boost::python::class_	access:public	signature:(char const* name, no_init_t)
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^    inline class_(char const* name, char const* doc, init_base<DerivedT> const& i)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, char const* doc, init_base<DerivedT> const& i)
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^    inline class_(char const* name, init_base<DerivedT> const& i)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, init_base<DerivedT> const& i)
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^inline class_<W,X1,X2,X3>::class_(char const* name, char const* doc)$/;"	f	class:boost::python::class_	signature:(char const* name, char const* doc)
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^inline class_<W,X1,X2,X3>::class_(char const* name, char const* doc, no_init_t)$/;"	f	class:boost::python::class_	signature:(char const* name, char const* doc, no_init_t)
boost::python::class_::class_	/usr/include/boost/python/class.hpp	/^inline class_<W,X1,X2,X3>::class_(char const* name, no_init_t)$/;"	f	class:boost::python::class_	signature:(char const* name, no_init_t)
boost::python::class_::def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, A1 a1, A2 const& a2)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, A1 a1, A2 const& a2)
boost::python::class_::def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, F f)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, F f)
boost::python::class_::def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, Fn fn, A1 const& a1, A2 const& a2)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Fn fn, A1 const& a1, A2 const& a2)
boost::python::class_::def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, Fn fn, A1 const& a1, A2 const& a2, A3 const& a3)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Fn fn, A1 const& a1, A2 const& a2, A3 const& a3)
boost::python::class_::def	/usr/include/boost/python/class.hpp	/^    self& def(def_visitor<Derived> const& visitor)$/;"	f	class:boost::python::class_	access:public	signature:(def_visitor<Derived> const& visitor)
boost::python::class_::def_default	/usr/include/boost/python/class.hpp	/^    inline void def_default($/;"	f	class:boost::python::class_	access:private	signature:( char const* name , Fn , Helper const& helper , mpl::bool_<true>)
boost::python::class_::def_default	/usr/include/boost/python/class.hpp	/^    inline void def_default(char const*, Fn, Helper const&, mpl::bool_<false>)$/;"	f	class:boost::python::class_	access:private	signature:(char const*, Fn, Helper const&, mpl::bool_<false>)
boost::python::class_::def_impl	/usr/include/boost/python/class.hpp	/^    inline void def_impl($/;"	f	class:boost::python::class_	access:private	signature:( T* , char const* name , Fn fn , Helper const& helper , ... )
boost::python::class_::def_impl	/usr/include/boost/python/class.hpp	/^    inline void def_impl($/;"	f	class:boost::python::class_	access:private	signature:( T* , char const* name , LeafVisitor , Helper const& helper , def_visitor<Visitor> const* v )
boost::python::class_::def_maybe_overloads	/usr/include/boost/python/class.hpp	/^    void def_maybe_overloads($/;"	f	class:boost::python::class_	access:private	signature:( char const* name , Fn fn , A1 const& a1 , ...)
boost::python::class_::def_maybe_overloads	/usr/include/boost/python/class.hpp	/^    void def_maybe_overloads($/;"	f	class:boost::python::class_	access:private	signature:( char const* name , SigT sig , OverloadsT const& overloads , detail::overloads_base const*)
boost::python::class_::def_pickle	/usr/include/boost/python/class.hpp	/^    self& def_pickle(PickleSuiteType const& x)$/;"	f	class:boost::python::class_	access:public	signature:(PickleSuiteType const& x)
boost::python::class_::def_readonly	/usr/include/boost/python/class.hpp	/^    self& def_readonly(char const* name, D const& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D const& d, char const* doc=0)
boost::python::class_::def_readonly	/usr/include/boost/python/class.hpp	/^    self& def_readonly(char const* name, D& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D& d, char const* doc=0)
boost::python::class_::def_readonly_impl	/usr/include/boost/python/class.hpp	/^    self& def_readonly_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D B::*pm_, char const* doc BOOST_PYTHON_YES_DATA_MEMBER)
boost::python::class_::def_readonly_impl	/usr/include/boost/python/class.hpp	/^    self& def_readonly_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D& d, char const* BOOST_PYTHON_NO_DATA_MEMBER)
boost::python::class_::def_readwrite	/usr/include/boost/python/class.hpp	/^    self& def_readwrite(char const* name, D const& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D const& d, char const* doc=0)
boost::python::class_::def_readwrite	/usr/include/boost/python/class.hpp	/^    self& def_readwrite(char const* name, D& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D& d, char const* doc=0)
boost::python::class_::def_readwrite_impl	/usr/include/boost/python/class.hpp	/^    self& def_readwrite_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D B::*pm_, char const* doc BOOST_PYTHON_YES_DATA_MEMBER)
boost::python::class_::def_readwrite_impl	/usr/include/boost/python/class.hpp	/^    self& def_readwrite_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D& d, char const* BOOST_PYTHON_NO_DATA_MEMBER)
boost::python::class_::enable_pickling	/usr/include/boost/python/class.hpp	/^    self& enable_pickling()$/;"	f	class:boost::python::class_	access:public	signature:()
boost::python::class_::id_vector	/usr/include/boost/python/class.hpp	/^    struct id_vector$/;"	s	class:boost::python::class_	access:private
boost::python::class_::id_vector::BOOST_STATIC_CONSTANT	/usr/include/boost/python/class.hpp	/^        BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::class_::id_vector	access:public	signature:( std::size_t, size = mpl::size<bases>::value + 1)
boost::python::class_::id_vector::bases	/usr/include/boost/python/class.hpp	/^        typedef typename metadata::bases bases;$/;"	t	struct:boost::python::class_::id_vector	access:public
boost::python::class_::id_vector::id_vector	/usr/include/boost/python/class.hpp	/^        id_vector()$/;"	f	struct:boost::python::class_::id_vector	access:public	signature:()
boost::python::class_::id_vector::ids	/usr/include/boost/python/class.hpp	/^        type_info ids[size];$/;"	m	struct:boost::python::class_::id_vector	access:public
boost::python::class_::initialize	/usr/include/boost/python/class.hpp	/^    inline void initialize(DefVisitor const& i)$/;"	f	class:boost::python::class_	access:private	signature:(DefVisitor const& i)
boost::python::class_::initialize	/usr/include/boost/python/class.hpp	/^    inline void initialize(no_init_t)$/;"	f	class:boost::python::class_	access:private	signature:(no_init_t)
boost::python::class_::make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, D B::*pm_, mpl::false_, char*, mpl::true_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, D B::*pm_, mpl::false_, char*, mpl::true_)
boost::python::class_::make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, D B::*pm_, mpl::false_, int*, mpl::true_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, D B::*pm_, mpl::false_, int*, mpl::true_)
boost::python::class_::make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, F const& f, mpl::false_, void*, mpl::false_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, F const& f, mpl::false_, void*, mpl::false_)
boost::python::class_::make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, F const& x, mpl::true_, void*, mpl::false_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, F const& x, mpl::true_, void*, mpl::false_)
boost::python::class_::make_getter	/usr/include/boost/python/class.hpp	/^    object make_getter(F f)$/;"	f	class:boost::python::class_	access:private	signature:(F f)
boost::python::class_::make_setter	/usr/include/boost/python/class.hpp	/^    object make_setter(F f)$/;"	f	class:boost::python::class_	access:private	signature:(F f)
boost::python::class_::metadata	/usr/include/boost/python/class.hpp	/^    typedef typename objects::class_metadata<W,X1,X2,X3> metadata;$/;"	t	class:boost::python::class_	access:public
boost::python::class_::self	/usr/include/boost/python/class.hpp	/^    typedef class_<W,X1,X2,X3> self;$/;"	t	class:boost::python::class_	access:public
boost::python::class_::setattr	/usr/include/boost/python/class.hpp	/^    self& setattr(char const* name, U const& x)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, U const& x)
boost::python::class_::staticmethod	/usr/include/boost/python/class.hpp	/^    self& staticmethod(char const* name)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name)
boost::python::class_::wrapped_type	/usr/include/boost/python/class.hpp	/^    typedef W wrapped_type;$/;"	t	class:boost::python::class_	access:public
boost::python::container_utils	/usr/include/boost/python/suite/indexing/container_utils.hpp	/^namespace boost { namespace python { namespace container_utils {$/;"	n	namespace:boost::python
boost::python::container_utils::extend_container	/usr/include/boost/python/suite/indexing/container_utils.hpp	/^    extend_container(Container& container, object l)$/;"	f	namespace:boost::python::container_utils	signature:(Container& container, object l)
boost::python::converter	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/arg_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/as_to_python_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/builtin_converters.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/constructor_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/context_result_converter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/convertible_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/implicit.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/pointer_type_id.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/pyobject_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/pyobject_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/pytype_function.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/registered.hpp	/^namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/registered_pointee.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/registrations.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/registry.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/return_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/converter/to_python_function_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/dict.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/extract.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/list.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/long.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/numeric.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/object_core.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/scope.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/slice.hpp	/^namespace converter {$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/str.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter	/usr/include/boost/python/tuple.hpp	/^namespace converter$/;"	n	namespace:boost::python
boost::python::converter::BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Dict);$/;"	p	namespace:boost::python::converter	signature:(Dict)
boost::python::converter::BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Int);$/;"	p	namespace:boost::python::converter	signature:(Int)
boost::python::converter::BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(List);$/;"	p	namespace:boost::python::converter	signature:(List)
boost::python::converter::BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Long);$/;"	p	namespace:boost::python::converter	signature:(Long)
boost::python::converter::BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Tuple);$/;"	p	namespace:boost::python::converter	signature:(Tuple)
boost::python::converter::BOOST_PYTHON_BUILTIN_OBJECT_TRAITS	/usr/include/boost/python/converter/pyobject_traits.hpp	/^BOOST_PYTHON_BUILTIN_OBJECT_TRAITS(Type);$/;"	p	namespace:boost::python::converter	signature:(Type)
boost::python::converter::arg_lvalue_from_python_base	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct arg_lvalue_from_python_base$/;"	s	namespace:boost::python::converter
boost::python::converter::arg_lvalue_from_python_base::arg_lvalue_from_python_base	/usr/include/boost/python/converter/arg_from_python.hpp	/^    arg_lvalue_from_python_base(void* result);$/;"	p	struct:boost::python::converter::arg_lvalue_from_python_base	access:public	signature:(void* result)
boost::python::converter::arg_lvalue_from_python_base::arg_lvalue_from_python_base	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline arg_lvalue_from_python_base::arg_lvalue_from_python_base(void* result)$/;"	f	class:boost::python::converter::arg_lvalue_from_python_base	signature:(void* result)
boost::python::converter::arg_lvalue_from_python_base::convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::arg_lvalue_from_python_base	access:public	signature:() const
boost::python::converter::arg_lvalue_from_python_base::convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline bool arg_lvalue_from_python_base::convertible() const$/;"	f	class:boost::python::converter::arg_lvalue_from_python_base	signature:() const
boost::python::converter::arg_lvalue_from_python_base::m_result	/usr/include/boost/python/converter/arg_from_python.hpp	/^    void* m_result;$/;"	m	struct:boost::python::converter::arg_lvalue_from_python_base	access:private
boost::python::converter::arg_lvalue_from_python_base::result	/usr/include/boost/python/converter/arg_from_python.hpp	/^    void*const& result() const;$/;"	p	struct:boost::python::converter::arg_lvalue_from_python_base	access:protected	signature:() const
boost::python::converter::arg_lvalue_from_python_base::result	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline void*const& arg_lvalue_from_python_base::result() const$/;"	f	class:boost::python::converter::arg_lvalue_from_python_base	signature:() const
boost::python::converter::arg_rvalue_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct arg_rvalue_from_python$/;"	s	namespace:boost::python::converter
boost::python::converter::arg_rvalue_from_python::arg_rvalue_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    arg_rvalue_from_python(PyObject*);$/;"	p	struct:boost::python::converter::arg_rvalue_from_python	access:public	signature:(PyObject*)
boost::python::converter::arg_rvalue_from_python::arg_rvalue_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline arg_rvalue_from_python<T>::arg_rvalue_from_python(PyObject* obj)$/;"	f	class:boost::python::converter::arg_rvalue_from_python	signature:(PyObject* obj)
boost::python::converter::arg_rvalue_from_python::convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::arg_rvalue_from_python	access:public	signature:() const
boost::python::converter::arg_rvalue_from_python::convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline bool arg_rvalue_from_python<T>::convertible() const$/;"	f	class:boost::python::converter::arg_rvalue_from_python	signature:() const
boost::python::converter::arg_rvalue_from_python::m_data	/usr/include/boost/python/converter/arg_from_python.hpp	/^    rvalue_from_python_data<result_type> m_data;$/;"	m	struct:boost::python::converter::arg_rvalue_from_python	access:private
boost::python::converter::arg_rvalue_from_python::m_source	/usr/include/boost/python/converter/arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::converter::arg_rvalue_from_python	access:private
boost::python::converter::arg_rvalue_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    result_type operator()();$/;"	p	struct:boost::python::converter::arg_rvalue_from_python	access:public	signature:()
boost::python::converter::arg_rvalue_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^arg_rvalue_from_python<T>::operator()()$/;"	f	class:boost::python::converter::arg_rvalue_from_python	signature:()
boost::python::converter::arg_rvalue_from_python::result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    >::type result_type;$/;"	t	struct:boost::python::converter::arg_rvalue_from_python	access:public
boost::python::converter::arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^struct arg_to_python$/;"	s	namespace:boost::python::converter	inherits:detail::select_arg_to_python::type
boost::python::converter::arg_to_python::arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^    arg_to_python(T const& x);$/;"	p	struct:boost::python::converter::arg_to_python	access:public	signature:(T const& x)
boost::python::converter::arg_to_python::arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^inline arg_to_python<T>::arg_to_python(T const& x)$/;"	f	class:boost::python::converter::arg_to_python	signature:(T const& x)
boost::python::converter::arg_to_python::base	/usr/include/boost/python/converter/arg_to_python.hpp	/^    typedef typename detail::select_arg_to_python<T>::type base;$/;"	t	struct:boost::python::converter::arg_to_python	access:public
boost::python::converter::as_to_python_function	/usr/include/boost/python/converter/as_to_python_function.hpp	/^struct as_to_python_function$/;"	s	namespace:boost::python::converter
boost::python::converter::as_to_python_function::convert	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static PyObject* convert(void const* x)$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:(void const* x)
boost::python::converter::as_to_python_function::convert_function_must_take_value_or_const_reference	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static void convert_function_must_take_value_or_const_reference(U(*)(T const&), long ...) {}$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:(U()T const&), long ...)
boost::python::converter::as_to_python_function::convert_function_must_take_value_or_const_reference	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static void convert_function_must_take_value_or_const_reference(U(*)(T), int, T* = 0) {}$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:(U()T), int, T* = 0)
boost::python::converter::as_to_python_function::get_pytype	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static PyTypeObject const * get_pytype() { return ToPython::get_pytype(); }$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:()
boost::python::converter::back_reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct back_reference_arg_from_python$/;"	s	namespace:boost::python::converter	inherits:boost::python::arg_from_python
boost::python::converter::back_reference_arg_from_python::back_reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    back_reference_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::back_reference_arg_from_python	access:public	signature:(PyObject*)
boost::python::converter::back_reference_arg_from_python::back_reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^back_reference_arg_from_python<T>::back_reference_arg_from_python(PyObject* x)$/;"	f	class:boost::python::converter::back_reference_arg_from_python	signature:(PyObject* x)
boost::python::converter::back_reference_arg_from_python::base	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef boost::python::arg_from_python<typename T::type> base;$/;"	t	struct:boost::python::converter::back_reference_arg_from_python	access:private
boost::python::converter::back_reference_arg_from_python::m_source	/usr/include/boost/python/converter/arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::converter::back_reference_arg_from_python	access:private
boost::python::converter::back_reference_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()();$/;"	p	struct:boost::python::converter::back_reference_arg_from_python	access:public	signature:()
boost::python::converter::back_reference_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^back_reference_arg_from_python<T>::operator()()$/;"	f	class:boost::python::converter::back_reference_arg_from_python	signature:()
boost::python::converter::back_reference_arg_from_python::result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::back_reference_arg_from_python	access:public
boost::python::converter::checked_downcast_impl	/usr/include/boost/python/converter/pyobject_type.hpp	/^BOOST_PYTHON_DECL PyObject* checked_downcast_impl(PyObject*, PyTypeObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, PyTypeObject*)
boost::python::converter::constructor_function	/usr/include/boost/python/converter/constructor_function.hpp	/^typedef void (*constructor_function)(PyObject* source, rvalue_from_python_stage1_data*);$/;"	t	namespace:boost::python::converter
boost::python::converter::context_result_converter	/usr/include/boost/python/converter/context_result_converter.hpp	/^struct context_result_converter {};$/;"	s	namespace:boost::python::converter
boost::python::converter::convertible_function	/usr/include/boost/python/converter/convertible_function.hpp	/^typedef void* (*convertible_function)(PyObject*);$/;"	t	namespace:boost::python::converter
boost::python::converter::default_object_manager_traits	/usr/include/boost/python/converter/object_manager.hpp	/^struct default_object_manager_traits$/;"	s	namespace:boost::python::converter
boost::python::converter::default_object_manager_traits::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/object_manager.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::default_object_manager_traits	access:public	signature:( bool, is_specialized = python::detail::is_borrowed_ptr<T>::value )
boost::python::converter::detail	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/arg_to_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/object_manager.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/pointer_type_id.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/pytype_function.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/registered.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/registered_pointee.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail	/usr/include/boost/python/converter/return_from_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
boost::python::converter::detail::arg_to_python_base	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^  struct BOOST_PYTHON_DECL arg_to_python_base$/;"	s	namespace:boost::python::converter::detail	inherits:handle
boost::python::converter::detail::arg_to_python_base::arg_to_python_base	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      arg_to_python_base(void const volatile* source, registration const&);$/;"	p	struct:boost::python::converter::detail::arg_to_python_base	access:public	signature:(void const volatile* source, registration const&)
boost::python::converter::detail::arg_to_python_base::get	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      PyObject* get() const { return m_ptr.get(); }$/;"	f	struct:boost::python::converter::detail::arg_to_python_base	access:public	signature:() const
boost::python::converter::detail::arg_to_python_base::m_ptr	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      handle<> m_ptr;$/;"	m	struct:boost::python::converter::detail::arg_to_python_base	access:private
boost::python::converter::detail::arg_to_python_base::release	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      PyObject* release() { return m_ptr.release(); }$/;"	f	struct:boost::python::converter::detail::arg_to_python_base	access:public	signature:()
boost::python::converter::detail::function_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct function_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
boost::python::converter::detail::function_arg_to_python::function_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      function_arg_to_python(T const& x);$/;"	p	struct:boost::python::converter::detail::function_arg_to_python	access:public	signature:(T const& x)
boost::python::converter::detail::function_arg_to_python::function_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline function_arg_to_python<T>::function_arg_to_python(T const& x)$/;"	f	class:boost::python::converter::detail::function_arg_to_python	signature:(T const& x)
boost::python::converter::detail::is_object_manager_help	/usr/include/boost/python/converter/object_manager.hpp	/^  struct is_object_manager_help$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::is_object_manager_help::call	/usr/include/boost/python/converter/object_manager.hpp	/^      static type call();$/;"	p	struct:boost::python::converter::detail::is_object_manager_help	access:public	signature:()
boost::python::converter::detail::is_object_manager_help::type	/usr/include/boost/python/converter/object_manager.hpp	/^          >::type type;$/;"	t	struct:boost::python::converter::detail::is_object_manager_help	access:public
boost::python::converter::detail::is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U const volatile*, void const volatile*);$/;"	p	namespace:boost::python::converter::detail	signature:(U const volatile*, void const volatile*)
boost::python::converter::detail::is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U const*, void const*);$/;"	p	namespace:boost::python::converter::detail	signature:(U const*, void const*)
boost::python::converter::detail::is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U volatile*, void volatile*);$/;"	p	namespace:boost::python::converter::detail	signature:(U volatile*, void volatile*)
boost::python::converter::detail::is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U*, void*);$/;"	p	namespace:boost::python::converter::detail	signature:(U*, void*)
boost::python::converter::detail::is_reference_to_object_manager_nonref	/usr/include/boost/python/converter/object_manager.hpp	/^  struct is_reference_to_object_manager_nonref$/;"	s	namespace:boost::python::converter::detail	inherits:mpl::false_
boost::python::converter::detail::is_reference_to_object_manager_ref	/usr/include/boost/python/converter/object_manager.hpp	/^  struct is_reference_to_object_manager_ref$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::is_reference_to_object_manager_ref::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/object_manager.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::is_reference_to_object_manager_ref	access:public	signature:( bool, value = (sizeof(is_object_manager_helper(&sample_object, &sample_object).call()) == sizeof(detail::yes_reference_to_object_manager) ) )
boost::python::converter::detail::is_reference_to_object_manager_ref::sample_object	/usr/include/boost/python/converter/object_manager.hpp	/^      static T sample_object;$/;"	m	struct:boost::python::converter::detail::is_reference_to_object_manager_ref	access:public
boost::python::converter::detail::is_reference_to_object_manager_ref::type	/usr/include/boost/python/converter/object_manager.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::converter::detail::is_reference_to_object_manager_ref	access:public
boost::python::converter::detail::no_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^  typedef char (&no_reference_to_object_manager)[2];$/;"	t	namespace:boost::python::converter::detail
boost::python::converter::detail::null_ptr_owner	/usr/include/boost/python/converter/arg_from_python.hpp	/^  struct null_ptr_owner$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::null_ptr_owner::value	/usr/include/boost/python/converter/arg_from_python.hpp	/^      static T value;$/;"	m	struct:boost::python::converter::detail::null_ptr_owner	access:public
boost::python::converter::detail::null_ptr_owner::value	/usr/include/boost/python/converter/arg_from_python.hpp	/^  template <class T> T null_ptr_owner<T>::value = 0;$/;"	m	class:boost::python::converter::detail::null_ptr_owner
boost::python::converter::detail::null_ptr_reference	/usr/include/boost/python/converter/arg_from_python.hpp	/^  inline U& null_ptr_reference(U&(*)())$/;"	f	namespace:boost::python::converter::detail	signature:(U&(*)())
boost::python::converter::detail::object_manager_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct object_manager_arg_to_python$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::object_manager_arg_to_python::get	/usr/include/boost/python/converter/arg_to_python.hpp	/^      PyObject* get() const$/;"	f	struct:boost::python::converter::detail::object_manager_arg_to_python	access:public	signature:() const
boost::python::converter::detail::object_manager_arg_to_python::m_src	/usr/include/boost/python/converter/arg_to_python.hpp	/^      T const& m_src;$/;"	m	struct:boost::python::converter::detail::object_manager_arg_to_python	access:private
boost::python::converter::detail::object_manager_arg_to_python::object_manager_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      object_manager_arg_to_python(T const& x) : m_src(x) {}$/;"	f	struct:boost::python::converter::detail::object_manager_arg_to_python	access:public	signature:(T const& x)
boost::python::converter::detail::object_manager_ref_check	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^  inline bool object_manager_ref_check(T const& x)$/;"	f	namespace:boost::python::converter::detail	signature:(T const& x)
boost::python::converter::detail::pointer_deep_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct pointer_deep_arg_to_python : arg_to_python_base$/;"	s	namespace:boost::python::converter::detail	inherits:arg_to_python_base
boost::python::converter::detail::pointer_deep_arg_to_python::pointer_deep_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      pointer_deep_arg_to_python(Ptr);$/;"	p	struct:boost::python::converter::detail::pointer_deep_arg_to_python	access:public	signature:(Ptr)
boost::python::converter::detail::pointer_deep_arg_to_python::pointer_deep_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline pointer_deep_arg_to_python<Ptr>::pointer_deep_arg_to_python(Ptr x)$/;"	f	class:boost::python::converter::detail::pointer_deep_arg_to_python	signature:(Ptr x)
boost::python::converter::detail::pointer_shallow_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct pointer_shallow_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
boost::python::converter::detail::pointer_shallow_arg_to_python::get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static PyObject* get_object(Ptr p);$/;"	p	struct:boost::python::converter::detail::pointer_shallow_arg_to_python	access:private	signature:(Ptr p)
boost::python::converter::detail::pointer_shallow_arg_to_python::get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline PyObject* pointer_shallow_arg_to_python<Ptr>::get_object(Ptr x)$/;"	f	class:boost::python::converter::detail::pointer_shallow_arg_to_python	signature:(Ptr x)
boost::python::converter::detail::pointer_shallow_arg_to_python::pointer_shallow_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      pointer_shallow_arg_to_python(Ptr);$/;"	p	struct:boost::python::converter::detail::pointer_shallow_arg_to_python	access:public	signature:(Ptr)
boost::python::converter::detail::pointer_shallow_arg_to_python::pointer_shallow_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline pointer_shallow_arg_to_python<Ptr>::pointer_shallow_arg_to_python(Ptr x)$/;"	f	class:boost::python::converter::detail::pointer_shallow_arg_to_python	signature:(Ptr x)
boost::python::converter::detail::pointer_typeid_select	/usr/include/boost/python/converter/pointer_type_id.hpp	/^  struct pointer_typeid_select$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::pointer_typeid_select	/usr/include/boost/python/converter/pointer_type_id.hpp	/^  struct pointer_typeid_select<true>$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::pointer_typeid_select::execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T* const volatile&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T* const volatile&(*)() = 0)
boost::python::converter::detail::pointer_typeid_select::execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*&(*)() = 0)
boost::python::converter::detail::pointer_typeid_select::execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*(*)() = 0)
boost::python::converter::detail::pointer_typeid_select::execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*const&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*const&(*)() = 0)
boost::python::converter::detail::pointer_typeid_select::execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*volatile&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*volatile&(*)() = 0)
boost::python::converter::detail::reference_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct reference_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
boost::python::converter::detail::reference_arg_to_python::get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static PyObject* get_object(T& x);$/;"	p	struct:boost::python::converter::detail::reference_arg_to_python	access:private	signature:(T& x)
boost::python::converter::detail::reference_arg_to_python::get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline PyObject* reference_arg_to_python<T>::get_object(T& x)$/;"	f	class:boost::python::converter::detail::reference_arg_to_python	signature:(T& x)
boost::python::converter::detail::reference_arg_to_python::reference_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      reference_arg_to_python(T& x);$/;"	p	struct:boost::python::converter::detail::reference_arg_to_python	access:public	signature:(T& x)
boost::python::converter::detail::reference_arg_to_python::reference_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline reference_arg_to_python<T>::reference_arg_to_python(T& x)$/;"	f	class:boost::python::converter::detail::reference_arg_to_python	signature:(T& x)
boost::python::converter::detail::register_shared_ptr0	/usr/include/boost/python/converter/registered.hpp	/^  register_shared_ptr0(...)$/;"	f	namespace:boost::python::converter::detail	signature:(....)
boost::python::converter::detail::register_shared_ptr0	/usr/include/boost/python/converter/registered.hpp	/^  register_shared_ptr0(shared_ptr<T>*)$/;"	f	namespace:boost::python::converter::detail	signature:(shared_ptr<T>*)
boost::python::converter::detail::register_shared_ptr1	/usr/include/boost/python/converter/registered.hpp	/^  register_shared_ptr1(T const volatile*)$/;"	f	namespace:boost::python::converter::detail	signature:(T const volatile*)
boost::python::converter::detail::registered_base	/usr/include/boost/python/converter/registered.hpp	/^  struct registered_base$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::registered_base::converters	/usr/include/boost/python/converter/registered.hpp	/^      static registration const& converters;$/;"	m	struct:boost::python::converter::detail::registered_base	access:public
boost::python::converter::detail::registered_base::converters	/usr/include/boost/python/converter/registered.hpp	/^  registration const& registered_base<T>::converters = detail::registry_lookup1(type<T>());$/;"	m	class:boost::python::converter::detail::registered_base
boost::python::converter::detail::registered_pointee_base	/usr/include/boost/python/converter/registered_pointee.hpp	/^  struct registered_pointee_base$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::registered_pointee_base::converters	/usr/include/boost/python/converter/registered_pointee.hpp	/^      static registration const& converters;$/;"	m	struct:boost::python::converter::detail::registered_pointee_base	access:public
boost::python::converter::detail::registered_pointee_base::converters	/usr/include/boost/python/converter/registered_pointee.hpp	/^  registration const& registered_pointee_base<T>::converters$/;"	m	class:boost::python::converter::detail::registered_pointee_base
boost::python::converter::detail::registry_lookup1	/usr/include/boost/python/converter/registered.hpp	/^  registry_lookup1(type<T>)$/;"	f	namespace:boost::python::converter::detail	signature:(type<T>)
boost::python::converter::detail::registry_lookup1	/usr/include/boost/python/converter/registered.hpp	/^  registry_lookup1(type<const volatile void>)$/;"	f	namespace:boost::python::converter::detail	signature:(type<const volatile void>)
boost::python::converter::detail::registry_lookup2	/usr/include/boost/python/converter/registered.hpp	/^  registry_lookup2(T&(*)())$/;"	f	namespace:boost::python::converter::detail	signature:(T&(*)())
boost::python::converter::detail::reject_raw_object_helper	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct reject_raw_object_helper$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::reject_raw_object_helper::error	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static void error(...) {}$/;"	f	struct:boost::python::converter::detail::reject_raw_object_helper	access:public	signature:(....)
boost::python::converter::detail::reject_raw_object_helper::error	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static void error(Convertibility)$/;"	f	struct:boost::python::converter::detail::reject_raw_object_helper	access:public	signature:(Convertibility)
boost::python::converter::detail::reject_raw_object_ptr	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline void reject_raw_object_ptr(T*)$/;"	f	namespace:boost::python::converter::detail	signature:(T*)
boost::python::converter::detail::return_object_manager_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_object_manager_from_python$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::return_object_manager_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      result_type operator()(PyObject*) const;$/;"	p	struct:boost::python::converter::detail::return_object_manager_from_python	access:public	signature:(PyObject*) const
boost::python::converter::detail::return_object_manager_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline T return_object_manager_from_python<T>::operator()(PyObject* obj) const$/;"	f	class:boost::python::converter::detail::return_object_manager_from_python	signature:(PyObject* obj) const
boost::python::converter::detail::return_object_manager_from_python::result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_object_manager_from_python	access:public
boost::python::converter::detail::return_pointer_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_pointer_from_python$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::return_pointer_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      T operator()(PyObject*) const;$/;"	p	struct:boost::python::converter::detail::return_pointer_from_python	access:public	signature:(PyObject*) const
boost::python::converter::detail::return_pointer_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline T return_pointer_from_python<T>::operator()(PyObject* obj) const$/;"	f	class:boost::python::converter::detail::return_pointer_from_python	signature:(PyObject* obj) const
boost::python::converter::detail::return_pointer_from_python::result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_pointer_from_python	access:public
boost::python::converter::detail::return_reference_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_reference_from_python$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::return_reference_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      T operator()(PyObject*) const;$/;"	p	struct:boost::python::converter::detail::return_reference_from_python	access:public	signature:(PyObject*) const
boost::python::converter::detail::return_reference_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline T return_reference_from_python<T>::operator()(PyObject* obj) const$/;"	f	class:boost::python::converter::detail::return_reference_from_python	signature:(PyObject* obj) const
boost::python::converter::detail::return_reference_from_python::result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_reference_from_python	access:public
boost::python::converter::detail::return_rvalue_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_rvalue_from_python$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::return_rvalue_from_python::m_data	/usr/include/boost/python/converter/return_from_python.hpp	/^      rvalue_from_python_data<T> m_data;$/;"	m	struct:boost::python::converter::detail::return_rvalue_from_python	access:private
boost::python::converter::detail::return_rvalue_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      result_type operator()(PyObject*);$/;"	p	struct:boost::python::converter::detail::return_rvalue_from_python	access:public	signature:(PyObject*)
boost::python::converter::detail::return_rvalue_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  return_rvalue_from_python<T>::operator()(PyObject* obj)$/;"	f	class:boost::python::converter::detail::return_rvalue_from_python	signature:(PyObject* obj)
boost::python::converter::detail::return_rvalue_from_python::result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_rvalue_from_python	access:public
boost::python::converter::detail::return_rvalue_from_python::return_rvalue_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^      return_rvalue_from_python();$/;"	p	struct:boost::python::converter::detail::return_rvalue_from_python	access:public	signature:()
boost::python::converter::detail::return_rvalue_from_python::return_rvalue_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline return_rvalue_from_python<T>::return_rvalue_from_python()$/;"	f	class:boost::python::converter::detail::return_rvalue_from_python	signature:()
boost::python::converter::detail::select_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct select_arg_to_python$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::select_arg_to_python::type	/usr/include/boost/python/converter/arg_to_python.hpp	/^      type;$/;"	t	struct:boost::python::converter::detail::select_arg_to_python	access:public
boost::python::converter::detail::select_arg_to_python::unwrapped_ptr	/usr/include/boost/python/converter/arg_to_python.hpp	/^      typedef typename unwrap_pointer<T>::type unwrapped_ptr;$/;"	t	struct:boost::python::converter::detail::select_arg_to_python	access:public
boost::python::converter::detail::select_arg_to_python::unwrapped_referent	/usr/include/boost/python/converter/arg_to_python.hpp	/^      typedef typename unwrap_reference<T>::type unwrapped_referent;$/;"	t	struct:boost::python::converter::detail::select_arg_to_python	access:public
boost::python::converter::detail::select_return_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct select_return_from_python$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::select_return_from_python::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/return_from_python.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::select_return_from_python	access:public	signature:( bool, obj_mgr = is_object_manager<T>::value)
boost::python::converter::detail::select_return_from_python::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/return_from_python.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::select_return_from_python	access:public	signature:( bool, ptr = is_pointer<T>::value)
boost::python::converter::detail::select_return_from_python::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/return_from_python.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::detail::select_return_from_python	access:public	signature:( bool, ref = is_reference<T>::value)
boost::python::converter::detail::select_return_from_python::type	/usr/include/boost/python/converter/return_from_python.hpp	/^         >::type type;$/;"	t	struct:boost::python::converter::detail::select_return_from_python	access:public
boost::python::converter::detail::shared_ptr_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct shared_ptr_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
boost::python::converter::detail::shared_ptr_arg_to_python::get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static PyObject* get_object(T& x);$/;"	p	struct:boost::python::converter::detail::shared_ptr_arg_to_python	access:private	signature:(T& x)
boost::python::converter::detail::shared_ptr_arg_to_python::shared_ptr_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      shared_ptr_arg_to_python(T const& x);$/;"	p	struct:boost::python::converter::detail::shared_ptr_arg_to_python	access:public	signature:(T const& x)
boost::python::converter::detail::shared_ptr_arg_to_python::shared_ptr_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline shared_ptr_arg_to_python<T>::shared_ptr_arg_to_python(T const& x)$/;"	f	class:boost::python::converter::detail::shared_ptr_arg_to_python	signature:(T const& x)
boost::python::converter::detail::unwind_type_id	/usr/include/boost/python/converter/pytype_function.hpp	/^inline python::type_info unwind_type_id(boost::type<T>* p= 0)$/;"	f	namespace:boost::python::converter::detail	signature:(boost::type<T>* p= 0)
boost::python::converter::detail::unwind_type_id_	/usr/include/boost/python/converter/pytype_function.hpp	/^inline python::type_info unwind_type_id_(boost::type<T>* = 0, mpl::false_ * =0)$/;"	f	namespace:boost::python::converter::detail	signature:(boost::type<T>* = 0, mpl::false_ * =0)
boost::python::converter::detail::unwind_type_id_	/usr/include/boost/python/converter/pytype_function.hpp	/^inline python::type_info unwind_type_id_(boost::type<void>* = 0, mpl::true_* =0)$/;"	f	namespace:boost::python::converter::detail	signature:(boost::type<void>* = 0, mpl::true_* =0)
boost::python::converter::detail::unwind_type_id_helper	/usr/include/boost/python/converter/pytype_function.hpp	/^struct unwind_type_id_helper{$/;"	s	namespace:boost::python::converter::detail
boost::python::converter::detail::unwind_type_id_helper::execute	/usr/include/boost/python/converter/pytype_function.hpp	/^    static result_type execute(U* ){$/;"	f	struct:boost::python::converter::detail::unwind_type_id_helper	access:public	signature:(U* )
boost::python::converter::detail::unwind_type_id_helper::result_type	/usr/include/boost/python/converter/pytype_function.hpp	/^    typedef python::type_info result_type;$/;"	t	struct:boost::python::converter::detail::unwind_type_id_helper	access:public
boost::python::converter::detail::value_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct value_arg_to_python : arg_to_python_base$/;"	s	namespace:boost::python::converter::detail	inherits:arg_to_python_base
boost::python::converter::detail::value_arg_to_python::value_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      value_arg_to_python(T const&);$/;"	p	struct:boost::python::converter::detail::value_arg_to_python	access:public	signature:(T const&)
boost::python::converter::detail::value_arg_to_python::value_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline value_arg_to_python<T>::value_arg_to_python(T const& x)$/;"	f	class:boost::python::converter::detail::value_arg_to_python	signature:(T const& x)
boost::python::converter::detail::yes_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^  typedef char (&yes_reference_to_object_manager)[1];$/;"	t	namespace:boost::python::converter::detail
boost::python::converter::do_arg_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_arg_to_python(PyObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*)
boost::python::converter::do_return_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_return_to_python(PyObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*)
boost::python::converter::do_return_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_return_to_python(char const*);$/;"	p	namespace:boost::python::converter	signature:(char const*)
boost::python::converter::do_return_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_return_to_python(char);$/;"	p	namespace:boost::python::converter	signature:(char)
boost::python::converter::expected_from_python_type	/usr/include/boost/python/converter/pytype_function.hpp	/^struct expected_from_python_type : expected_pytype_for_arg<T>{};$/;"	s	namespace:boost::python::converter	inherits:expected_pytype_for_arg
boost::python::converter::expected_from_python_type_direct	/usr/include/boost/python/converter/pytype_function.hpp	/^struct expected_from_python_type_direct$/;"	s	namespace:boost::python::converter
boost::python::converter::expected_from_python_type_direct::get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::converter::expected_from_python_type_direct	access:public	signature:()
boost::python::converter::expected_pytype_for_arg	/usr/include/boost/python/converter/pytype_function.hpp	/^struct expected_pytype_for_arg$/;"	s	namespace:boost::python::converter
boost::python::converter::expected_pytype_for_arg::get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::expected_pytype_for_arg	access:public	signature:()
boost::python::converter::extract_object_manager	/usr/include/boost/python/extract.hpp	/^  struct extract_object_manager$/;"	s	namespace:boost::python::converter
boost::python::converter::extract_object_manager::check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_object_manager	access:public	signature:() const
boost::python::converter::extract_object_manager::check	/usr/include/boost/python/extract.hpp	/^  inline bool extract_object_manager<T>::check() const$/;"	f	class:boost::python::converter::extract_object_manager	signature:() const
boost::python::converter::extract_object_manager::extract_object_manager	/usr/include/boost/python/extract.hpp	/^      extract_object_manager(PyObject*);$/;"	p	struct:boost::python::converter::extract_object_manager	access:public	signature:(PyObject*)
boost::python::converter::extract_object_manager::extract_object_manager	/usr/include/boost/python/extract.hpp	/^  inline extract_object_manager<T>::extract_object_manager(PyObject* obj)$/;"	f	class:boost::python::converter::extract_object_manager	signature:(PyObject* obj)
boost::python::converter::extract_object_manager::m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_object_manager	access:private
boost::python::converter::extract_object_manager::operator ()	/usr/include/boost/python/extract.hpp	/^      result_type operator()() const;$/;"	p	struct:boost::python::converter::extract_object_manager	access:public	signature:() const
boost::python::converter::extract_object_manager::operator ()	/usr/include/boost/python/extract.hpp	/^  inline T extract_object_manager<T>::operator()() const$/;"	f	class:boost::python::converter::extract_object_manager	signature:() const
boost::python::converter::extract_object_manager::result_type	/usr/include/boost/python/extract.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::extract_object_manager	access:public
boost::python::converter::extract_pointer	/usr/include/boost/python/extract.hpp	/^  struct extract_pointer$/;"	s	namespace:boost::python::converter
boost::python::converter::extract_pointer::check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_pointer	access:public	signature:() const
boost::python::converter::extract_pointer::check	/usr/include/boost/python/extract.hpp	/^  inline bool extract_pointer<Ptr>::check() const$/;"	f	class:boost::python::converter::extract_pointer	signature:() const
boost::python::converter::extract_pointer::extract_pointer	/usr/include/boost/python/extract.hpp	/^      extract_pointer(PyObject*);$/;"	p	struct:boost::python::converter::extract_pointer	access:public	signature:(PyObject*)
boost::python::converter::extract_pointer::extract_pointer	/usr/include/boost/python/extract.hpp	/^  inline extract_pointer<Ptr>::extract_pointer(PyObject* obj)$/;"	f	class:boost::python::converter::extract_pointer	signature:(PyObject* obj)
boost::python::converter::extract_pointer::m_result	/usr/include/boost/python/extract.hpp	/^      void* m_result;$/;"	m	struct:boost::python::converter::extract_pointer	access:private
boost::python::converter::extract_pointer::m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_pointer	access:private
boost::python::converter::extract_pointer::operator ()	/usr/include/boost/python/extract.hpp	/^      Ptr operator()() const;$/;"	p	struct:boost::python::converter::extract_pointer	access:public	signature:() const
boost::python::converter::extract_pointer::operator ()	/usr/include/boost/python/extract.hpp	/^  inline Ptr extract_pointer<Ptr>::operator()() const$/;"	f	class:boost::python::converter::extract_pointer	signature:() const
boost::python::converter::extract_pointer::result_type	/usr/include/boost/python/extract.hpp	/^      typedef Ptr result_type;$/;"	t	struct:boost::python::converter::extract_pointer	access:public
boost::python::converter::extract_reference	/usr/include/boost/python/extract.hpp	/^  struct extract_reference$/;"	s	namespace:boost::python::converter
boost::python::converter::extract_reference::check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_reference	access:public	signature:() const
boost::python::converter::extract_reference::check	/usr/include/boost/python/extract.hpp	/^  inline bool extract_reference<Ref>::check() const$/;"	f	class:boost::python::converter::extract_reference	signature:() const
boost::python::converter::extract_reference::extract_reference	/usr/include/boost/python/extract.hpp	/^      extract_reference(PyObject*);$/;"	p	struct:boost::python::converter::extract_reference	access:public	signature:(PyObject*)
boost::python::converter::extract_reference::extract_reference	/usr/include/boost/python/extract.hpp	/^  inline extract_reference<Ref>::extract_reference(PyObject* obj)$/;"	f	class:boost::python::converter::extract_reference	signature:(PyObject* obj)
boost::python::converter::extract_reference::m_result	/usr/include/boost/python/extract.hpp	/^      void* m_result;$/;"	m	struct:boost::python::converter::extract_reference	access:private
boost::python::converter::extract_reference::m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_reference	access:private
boost::python::converter::extract_reference::operator ()	/usr/include/boost/python/extract.hpp	/^      Ref operator()() const;$/;"	p	struct:boost::python::converter::extract_reference	access:public	signature:() const
boost::python::converter::extract_reference::operator ()	/usr/include/boost/python/extract.hpp	/^  inline Ref extract_reference<Ref>::operator()() const$/;"	f	class:boost::python::converter::extract_reference	signature:() const
boost::python::converter::extract_reference::result_type	/usr/include/boost/python/extract.hpp	/^      typedef Ref result_type;$/;"	t	struct:boost::python::converter::extract_reference	access:public
boost::python::converter::extract_rvalue	/usr/include/boost/python/extract.hpp	/^  struct extract_rvalue : private noncopyable$/;"	s	namespace:boost::python::converter	inherits:noncopyable
boost::python::converter::extract_rvalue::check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_rvalue	access:public	signature:() const
boost::python::converter::extract_rvalue::check	/usr/include/boost/python/extract.hpp	/^  extract_rvalue<T>::check() const$/;"	f	class:boost::python::converter::extract_rvalue	signature:() const
boost::python::converter::extract_rvalue::extract_rvalue	/usr/include/boost/python/extract.hpp	/^      extract_rvalue(PyObject*);$/;"	p	struct:boost::python::converter::extract_rvalue	access:public	signature:(PyObject*)
boost::python::converter::extract_rvalue::extract_rvalue	/usr/include/boost/python/extract.hpp	/^  inline extract_rvalue<T>::extract_rvalue(PyObject* x)$/;"	f	class:boost::python::converter::extract_rvalue	signature:(PyObject* x)
boost::python::converter::extract_rvalue::m_data	/usr/include/boost/python/extract.hpp	/^      mutable rvalue_from_python_data<T> m_data;$/;"	m	struct:boost::python::converter::extract_rvalue	access:private
boost::python::converter::extract_rvalue::m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_rvalue	access:private
boost::python::converter::extract_rvalue::operator ()	/usr/include/boost/python/extract.hpp	/^      result_type operator()() const;$/;"	p	struct:boost::python::converter::extract_rvalue	access:public	signature:() const
boost::python::converter::extract_rvalue::operator ()	/usr/include/boost/python/extract.hpp	/^  extract_rvalue<T>::operator()() const$/;"	f	class:boost::python::converter::extract_rvalue	signature:() const
boost::python::converter::extract_rvalue::result_type	/usr/include/boost/python/extract.hpp	/^      >::type result_type;$/;"	t	struct:boost::python::converter::extract_rvalue	access:public
boost::python::converter::get_lvalue_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* get_lvalue_from_python($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, registration const&)
boost::python::converter::handle_object_manager_traits	/usr/include/boost/python/converter/object_manager.hpp	/^struct handle_object_manager_traits$/;"	s	namespace:boost::python::converter	inherits:pyobject_traits
boost::python::converter::handle_object_manager_traits::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/object_manager.hpp	/^  BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::handle_object_manager_traits	access:public	signature:(bool, is_specialized = true)
boost::python::converter::handle_object_manager_traits::adopt	/usr/include/boost/python/converter/object_manager.hpp	/^  static null_ok<typename T::element_type>* adopt(PyObject* p)$/;"	f	struct:boost::python::converter::handle_object_manager_traits	access:public	signature:(PyObject* p)
boost::python::converter::handle_object_manager_traits::base	/usr/include/boost/python/converter/object_manager.hpp	/^  typedef pyobject_traits<typename T::element_type> base;$/;"	t	struct:boost::python::converter::handle_object_manager_traits	access:private
boost::python::converter::if_2	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct if_2$/;"	s	namespace:boost::python::converter
boost::python::converter::if_2::type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef typename mpl::eval_if<C, mpl::identity<T>, F>::type type;$/;"	t	struct:boost::python::converter::if_2	access:public
boost::python::converter::implicit	/usr/include/boost/python/converter/implicit.hpp	/^struct implicit$/;"	s	namespace:boost::python::converter
boost::python::converter::implicit::construct	/usr/include/boost/python/converter/implicit.hpp	/^    static void construct(PyObject* obj, rvalue_from_python_stage1_data* data)$/;"	f	struct:boost::python::converter::implicit	access:public	signature:(PyObject* obj, rvalue_from_python_stage1_data* data)
boost::python::converter::implicit::convertible	/usr/include/boost/python/converter/implicit.hpp	/^    static void* convertible(PyObject* obj)$/;"	f	struct:boost::python::converter::implicit	access:public	signature:(PyObject* obj)
boost::python::converter::implicit_rvalue_convertible_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL bool implicit_rvalue_convertible_from_python($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, registration const&)
boost::python::converter::initialize_builtin_converters	/usr/include/boost/python/converter/builtin_converters.hpp	/^  void initialize_builtin_converters();$/;"	p	namespace:boost::python::converter	signature:()
boost::python::converter::is_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_object_manager$/;"	s	namespace:boost::python::converter	inherits:mpl::bool_
boost::python::converter::is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager$/;"	s	namespace:boost::python::converter	inherits:mpl::false_
boost::python::converter::is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager$/;"	s	namespace:boost::python::converter	inherits:mpl::if_::type
boost::python::converter::is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T const volatile&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
boost::python::converter::is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T const&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
boost::python::converter::is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T volatile&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
boost::python::converter::is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
boost::python::converter::lvalue_from_python_chain	/usr/include/boost/python/converter/registrations.hpp	/^struct lvalue_from_python_chain$/;"	s	namespace:boost::python::converter
boost::python::converter::lvalue_from_python_chain::convert	/usr/include/boost/python/converter/registrations.hpp	/^    convertible_function convert;$/;"	m	struct:boost::python::converter::lvalue_from_python_chain	access:public
boost::python::converter::lvalue_from_python_chain::next	/usr/include/boost/python/converter/registrations.hpp	/^    lvalue_from_python_chain* next;$/;"	m	struct:boost::python::converter::lvalue_from_python_chain	access:public
boost::python::converter::object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^struct object_manager_ref_arg_from_python$/;"	s	namespace:boost::python::converter
boost::python::converter::object_manager_ref_arg_from_python::convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:() const
boost::python::converter::object_manager_ref_arg_from_python::convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline bool object_manager_ref_arg_from_python<Ref>::convertible() const$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:() const
boost::python::converter::object_manager_ref_arg_from_python::m_result	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    typename python::detail::referent_storage<Ref>::type m_result;$/;"	m	struct:boost::python::converter::object_manager_ref_arg_from_python	access:private
boost::python::converter::object_manager_ref_arg_from_python::object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    object_manager_ref_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:(PyObject*)
boost::python::converter::object_manager_ref_arg_from_python::object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline object_manager_ref_arg_from_python<Ref>::object_manager_ref_arg_from_python(PyObject* x)$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:(PyObject* x)
boost::python::converter::object_manager_ref_arg_from_python::operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    Ref operator()() const;$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:() const
boost::python::converter::object_manager_ref_arg_from_python::operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline Ref object_manager_ref_arg_from_python<Ref>::operator()() const$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:() const
boost::python::converter::object_manager_ref_arg_from_python::result_type	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    typedef Ref result_type;$/;"	t	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public
boost::python::converter::object_manager_ref_arg_from_python::~object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    ~object_manager_ref_arg_from_python();$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:()
boost::python::converter::object_manager_ref_arg_from_python::~object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline object_manager_ref_arg_from_python<Ref>::~object_manager_ref_arg_from_python()$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:()
boost::python::converter::object_manager_traits	/usr/include/boost/python/converter/object_manager.hpp	/^struct object_manager_traits$/;"	s	namespace:boost::python::converter	inherits:mpl::if_c::type
boost::python::converter::object_manager_traits	/usr/include/boost/python/dict.hpp	/^  struct object_manager_traits<dict>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
boost::python::converter::object_manager_traits	/usr/include/boost/python/list.hpp	/^  struct object_manager_traits<list>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
boost::python::converter::object_manager_traits	/usr/include/boost/python/long.hpp	/^  struct object_manager_traits<long_>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
boost::python::converter::object_manager_traits	/usr/include/boost/python/numeric.hpp	/^  struct object_manager_traits< numeric::array >$/;"	s	namespace:boost::python::converter	inherits:numeric::aux::array_object_manager_traits
boost::python::converter::object_manager_traits	/usr/include/boost/python/object_core.hpp	/^  struct object_manager_traits<object>$/;"	s	namespace:boost::python::converter
boost::python::converter::object_manager_traits	/usr/include/boost/python/scope.hpp	/^  struct object_manager_traits<scope>$/;"	s	namespace:boost::python::converter	inherits:object_manager_traits
boost::python::converter::object_manager_traits	/usr/include/boost/python/slice.hpp	/^struct object_manager_traits<slice>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
boost::python::converter::object_manager_traits	/usr/include/boost/python/str.hpp	/^  struct object_manager_traits<str>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
boost::python::converter::object_manager_traits	/usr/include/boost/python/tuple.hpp	/^  struct object_manager_traits<tuple>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
boost::python::converter::object_manager_traits::BOOST_STATIC_CONSTANT	/usr/include/boost/python/numeric.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::object_manager_traits	access:public	signature:(bool, is_specialized = true)
boost::python::converter::object_manager_traits::BOOST_STATIC_CONSTANT	/usr/include/boost/python/object_core.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::object_manager_traits	access:public	signature:(bool, is_specialized = true)
boost::python::converter::object_manager_traits::adopt	/usr/include/boost/python/object_core.hpp	/^      static python::detail::new_non_null_reference adopt(PyObject* x)$/;"	f	struct:boost::python::converter::object_manager_traits	access:public	signature:(PyObject* x)
boost::python::converter::object_manager_traits::check	/usr/include/boost/python/object_core.hpp	/^      static bool check(PyObject*) { return true; }$/;"	f	struct:boost::python::converter::object_manager_traits	access:public	signature:(PyObject*)
boost::python::converter::object_manager_traits::get_pytype	/usr/include/boost/python/object_core.hpp	/^      static PyTypeObject const *get_pytype() {return 0;}$/;"	f	struct:boost::python::converter::object_manager_traits	access:public	signature:()
boost::python::converter::object_manager_value_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^struct object_manager_value_arg_from_python$/;"	s	namespace:boost::python::converter
boost::python::converter::object_manager_value_arg_from_python::convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::object_manager_value_arg_from_python	access:public	signature:() const
boost::python::converter::object_manager_value_arg_from_python::convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline bool object_manager_value_arg_from_python<T>::convertible() const$/;"	f	class:boost::python::converter::object_manager_value_arg_from_python	signature:() const
boost::python::converter::object_manager_value_arg_from_python::m_source	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::converter::object_manager_value_arg_from_python	access:private
boost::python::converter::object_manager_value_arg_from_python::object_manager_value_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    object_manager_value_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::object_manager_value_arg_from_python	access:public	signature:(PyObject*)
boost::python::converter::object_manager_value_arg_from_python::object_manager_value_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline object_manager_value_arg_from_python<T>::object_manager_value_arg_from_python(PyObject* x)$/;"	f	class:boost::python::converter::object_manager_value_arg_from_python	signature:(PyObject* x)
boost::python::converter::object_manager_value_arg_from_python::operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::object_manager_value_arg_from_python	access:public	signature:() const
boost::python::converter::object_manager_value_arg_from_python::operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline T object_manager_value_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::object_manager_value_arg_from_python	signature:() const
boost::python::converter::object_manager_value_arg_from_python::result_type	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::object_manager_value_arg_from_python	access:public
boost::python::converter::operator <	/usr/include/boost/python/converter/registrations.hpp	/^inline bool operator<(registration const& lhs, registration const& rhs)$/;"	f	namespace:boost::python::converter	signature:(registration const& lhs, registration const& rhs)
boost::python::converter::pointer_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct pointer_arg_from_python : arg_lvalue_from_python_base$/;"	s	namespace:boost::python::converter	inherits:arg_lvalue_from_python_base
boost::python::converter::pointer_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::pointer_arg_from_python	access:public	signature:() const
boost::python::converter::pointer_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline T pointer_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::pointer_arg_from_python	signature:() const
boost::python::converter::pointer_arg_from_python::pointer_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    pointer_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::pointer_arg_from_python	access:public	signature:(PyObject*)
boost::python::converter::pointer_arg_from_python::pointer_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline pointer_arg_from_python<T>::pointer_arg_from_python(PyObject* p)$/;"	f	class:boost::python::converter::pointer_arg_from_python	signature:(PyObject* p)
boost::python::converter::pointer_arg_from_python::result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::pointer_arg_from_python	access:public
boost::python::converter::pointer_cref_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct pointer_cref_arg_from_python$/;"	s	namespace:boost::python::converter
boost::python::converter::pointer_cref_arg_from_python::convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::pointer_cref_arg_from_python	access:public	signature:() const
boost::python::converter::pointer_cref_arg_from_python::convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline bool pointer_cref_arg_from_python<T>::convertible() const$/;"	f	class:boost::python::converter::pointer_cref_arg_from_python	signature:() const
boost::python::converter::pointer_cref_arg_from_python::m_result	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typename python::detail::referent_storage<T>::type m_result;$/;"	m	struct:boost::python::converter::pointer_cref_arg_from_python	access:private
boost::python::converter::pointer_cref_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::pointer_cref_arg_from_python	access:public	signature:() const
boost::python::converter::pointer_cref_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline T pointer_cref_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::pointer_cref_arg_from_python	signature:() const
boost::python::converter::pointer_cref_arg_from_python::pointer_cref_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    pointer_cref_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::pointer_cref_arg_from_python	access:public	signature:(PyObject*)
boost::python::converter::pointer_cref_arg_from_python::pointer_cref_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline pointer_cref_arg_from_python<T>::pointer_cref_arg_from_python(PyObject* p)$/;"	f	class:boost::python::converter::pointer_cref_arg_from_python	signature:(PyObject* p)
boost::python::converter::pointer_cref_arg_from_python::result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::pointer_cref_arg_from_python	access:public
boost::python::converter::pointer_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* pointer_result_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
boost::python::converter::pointer_type_id	/usr/include/boost/python/converter/pointer_type_id.hpp	/^type_info pointer_type_id(T(*)() = 0)$/;"	f	namespace:boost::python::converter	signature:(T()) = 0)
boost::python::converter::pyobject_traits	/usr/include/boost/python/converter/pyobject_traits.hpp	/^struct pyobject_traits<PyObject>$/;"	s	namespace:boost::python::converter
boost::python::converter::pyobject_traits::check	/usr/include/boost/python/converter/pyobject_traits.hpp	/^    static bool check(PyObject*) { return true; }$/;"	f	struct:boost::python::converter::pyobject_traits	access:public	signature:(PyObject*)
boost::python::converter::pyobject_traits::checked_downcast	/usr/include/boost/python/converter/pyobject_traits.hpp	/^    static PyObject* checked_downcast(PyObject* x) { return x; }$/;"	f	struct:boost::python::converter::pyobject_traits	access:public	signature:(PyObject* x)
boost::python::converter::pyobject_traits::get_pytype	/usr/include/boost/python/converter/pyobject_traits.hpp	/^    static PyTypeObject const* get_pytype() { return 0; }$/;"	f	struct:boost::python::converter::pyobject_traits	access:public	signature:()
boost::python::converter::pyobject_type	/usr/include/boost/python/converter/pyobject_type.hpp	/^struct pyobject_type $/;"	s	namespace:boost::python::converter
boost::python::converter::pyobject_type::check	/usr/include/boost/python/converter/pyobject_type.hpp	/^    static bool check(PyObject* x)$/;"	f	struct:boost::python::converter::pyobject_type	access:public	signature:(PyObject* x)
boost::python::converter::pyobject_type::checked_downcast	/usr/include/boost/python/converter/pyobject_type.hpp	/^    static Object* checked_downcast(PyObject* x)$/;"	f	struct:boost::python::converter::pyobject_type	access:public	signature:(PyObject* x)
boost::python::converter::pyobject_type::get_pytype	/usr/include/boost/python/converter/pyobject_type.hpp	/^    static PyTypeObject const* get_pytype() { return pytype; }$/;"	f	struct:boost::python::converter::pyobject_type	access:public	signature:()
boost::python::converter::pytype_function	/usr/include/boost/python/converter/pytype_function.hpp	/^typedef PyTypeObject const* (*pytype_function)();$/;"	t	namespace:boost::python::converter
boost::python::converter::pytype_object_manager_traits	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^struct pytype_object_manager_traits$/;"	s	namespace:boost::python::converter	inherits:pyobject_type
boost::python::converter::pytype_object_manager_traits::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^    BOOST_STATIC_CONSTANT(bool, is_specialized = true);$/;"	p	struct:boost::python::converter::pytype_object_manager_traits	access:public	signature:(bool, is_specialized = true)
boost::python::converter::pytype_object_manager_traits::adopt	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^    static inline python::detail::new_reference adopt(PyObject*);$/;"	p	struct:boost::python::converter::pytype_object_manager_traits	access:public	signature:(PyObject*)
boost::python::converter::pytype_object_manager_traits::adopt	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^inline python::detail::new_reference pytype_object_manager_traits<pytype,T>::adopt(PyObject* x)$/;"	f	class:boost::python::converter::pytype_object_manager_traits	signature:(PyObject* x)
boost::python::converter::reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct reference_arg_from_python : arg_lvalue_from_python_base$/;"	s	namespace:boost::python::converter	inherits:arg_lvalue_from_python_base
boost::python::converter::reference_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::reference_arg_from_python	access:public	signature:() const
boost::python::converter::reference_arg_from_python::operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline T reference_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::reference_arg_from_python	signature:() const
boost::python::converter::reference_arg_from_python::reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    reference_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::reference_arg_from_python	access:public	signature:(PyObject*)
boost::python::converter::reference_arg_from_python::reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline reference_arg_from_python<T>::reference_arg_from_python(PyObject* p)$/;"	f	class:boost::python::converter::reference_arg_from_python	signature:(PyObject* p)
boost::python::converter::reference_arg_from_python::result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::reference_arg_from_python	access:public
boost::python::converter::reference_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* reference_result_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
boost::python::converter::registered	/usr/include/boost/python/converter/registered.hpp	/^struct registered$/;"	s	namespace:boost::python::converter	inherits:detail::registered_base
boost::python::converter::registered	/usr/include/boost/python/converter/registered.hpp	/^struct registered<T&>$/;"	s	namespace:boost::python::converter	inherits:registered
boost::python::converter::registered_pointee	/usr/include/boost/python/converter/registered_pointee.hpp	/^struct registered_pointee$/;"	s	namespace:boost::python::converter	inherits:detail::registered_pointee_base
boost::python::converter::registered_pointee	/usr/include/boost/python/converter/registered_pointee.hpp	/^struct registered_pointee$/;"	s	namespace:boost::python::converter	inherits:registered
boost::python::converter::registered_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^struct registered_pytype$/;"	s	namespace:boost::python::converter
boost::python::converter::registered_pytype::get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::registered_pytype	access:public	signature:()
boost::python::converter::registered_pytype_direct	/usr/include/boost/python/converter/pytype_function.hpp	/^struct registered_pytype_direct$/;"	s	namespace:boost::python::converter
boost::python::converter::registered_pytype_direct::get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::converter::registered_pytype_direct	access:public	signature:()
boost::python::converter::registration	/usr/include/boost/python/converter/registrations.hpp	/^struct BOOST_PYTHON_DECL registration$/;"	s	namespace:boost::python::converter
boost::python::converter::registration::expected_from_python_type	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* expected_from_python_type() const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:() const
boost::python::converter::registration::get_class_object	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject* get_class_object() const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:() const
boost::python::converter::registration::is_shared_ptr	/usr/include/boost/python/converter/registrations.hpp	/^    const bool is_shared_ptr;$/;"	m	struct:boost::python::converter::registration	access:public
boost::python::converter::registration::lvalue_chain	/usr/include/boost/python/converter/registrations.hpp	/^    lvalue_from_python_chain* lvalue_chain;$/;"	m	struct:boost::python::converter::registration	access:public
boost::python::converter::registration::m_class_object	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject* m_class_object;$/;"	m	struct:boost::python::converter::registration	access:public
boost::python::converter::registration::m_to_python	/usr/include/boost/python/converter/registrations.hpp	/^    to_python_function_t m_to_python;$/;"	m	struct:boost::python::converter::registration	access:public
boost::python::converter::registration::m_to_python_target_type	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* (*m_to_python_target_type)();$/;"	m	struct:boost::python::converter::registration	access:public
boost::python::converter::registration::operator =	/usr/include/boost/python/converter/registrations.hpp	/^    void operator=(registration); \/\/ This is not defined, and just keeps MWCW happy.$/;"	p	struct:boost::python::converter::registration	access:private	signature:(registration)
boost::python::converter::registration::registration	/usr/include/boost/python/converter/registrations.hpp	/^    explicit registration(type_info target, bool is_shared_ptr = false);$/;"	p	struct:boost::python::converter::registration	access:public	signature:(type_info target, bool is_shared_ptr = false)
boost::python::converter::registration::registration	/usr/include/boost/python/converter/registrations.hpp	/^inline registration::registration(type_info target_type, bool is_shared_ptr)$/;"	f	class:boost::python::converter::registration	signature:(type_info target_type, bool is_shared_ptr)
boost::python::converter::registration::rvalue_chain	/usr/include/boost/python/converter/registrations.hpp	/^    rvalue_from_python_chain* rvalue_chain;$/;"	m	struct:boost::python::converter::registration	access:public
boost::python::converter::registration::target_type	/usr/include/boost/python/converter/registrations.hpp	/^    const python::type_info target_type;$/;"	m	struct:boost::python::converter::registration	access:public
boost::python::converter::registration::to_python	/usr/include/boost/python/converter/registrations.hpp	/^    PyObject* to_python(void const volatile*) const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:(void const volatile*) const
boost::python::converter::registration::to_python_target_type	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* to_python_target_type() const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:() const
boost::python::converter::registration::~registration	/usr/include/boost/python/converter/registrations.hpp	/^   ~registration();$/;"	p	struct:boost::python::converter::registration	access:public	signature:()
boost::python::converter::registry	/usr/include/boost/python/converter/registry.hpp	/^namespace registry$/;"	n	namespace:boost::python::converter
boost::python::converter::registry::insert	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void insert($/;"	p	namespace:boost::python::converter::registry	signature:( convertible_function , constructor_function , type_info , PyTypeObject const* (*expected_pytype)() = 0 )
boost::python::converter::registry::insert	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void insert(convertible_function, type_info, PyTypeObject const* (*expected_pytype)() = 0);$/;"	p	namespace:boost::python::converter::registry	signature:(convertible_function, type_info, PyTypeObject const* (*expected_pytype)() = 0)
boost::python::converter::registry::insert	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void insert(to_python_function_t, type_info, PyTypeObject const* (*to_python_target_type)() = 0);$/;"	p	namespace:boost::python::converter::registry	signature:(to_python_function_t, type_info, PyTypeObject const* (*to_python_target_type)() = 0)
boost::python::converter::registry::lookup	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL registration const& lookup(type_info);$/;"	p	namespace:boost::python::converter::registry	signature:(type_info)
boost::python::converter::registry::lookup_shared_ptr	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL registration const& lookup_shared_ptr(type_info);$/;"	p	namespace:boost::python::converter::registry	signature:(type_info)
boost::python::converter::registry::push_back	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void push_back($/;"	p	namespace:boost::python::converter::registry	signature:( convertible_function , constructor_function , type_info , PyTypeObject const* (*expected_pytype)() = 0 )
boost::python::converter::registry::query	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL registration const* query(type_info);$/;"	p	namespace:boost::python::converter::registry	signature:(type_info)
boost::python::converter::return_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^struct return_from_python$/;"	s	namespace:boost::python::converter	inherits:detail::select_return_from_python::type
boost::python::converter::return_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^struct return_from_python<void>$/;"	s	namespace:boost::python::converter
boost::python::converter::return_from_python::operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^    result_type operator()(PyObject* x) const$/;"	f	struct:boost::python::converter::return_from_python	access:public	signature:(PyObject* x) const
boost::python::converter::return_from_python::result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^    typedef python::detail::returnable<void>::type result_type;$/;"	t	struct:boost::python::converter::return_from_python	access:public
boost::python::converter::rvalue_from_python_chain	/usr/include/boost/python/converter/registrations.hpp	/^struct rvalue_from_python_chain$/;"	s	namespace:boost::python::converter
boost::python::converter::rvalue_from_python_chain::construct	/usr/include/boost/python/converter/registrations.hpp	/^    constructor_function construct;$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
boost::python::converter::rvalue_from_python_chain::convertible	/usr/include/boost/python/converter/registrations.hpp	/^    convertible_function convertible;$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
boost::python::converter::rvalue_from_python_chain::expected_pytype	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* (*expected_pytype)();$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
boost::python::converter::rvalue_from_python_chain::next	/usr/include/boost/python/converter/registrations.hpp	/^    rvalue_from_python_chain* next;$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
boost::python::converter::rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^struct rvalue_from_python_data : rvalue_from_python_storage<T>$/;"	s	namespace:boost::python::converter	inherits:rvalue_from_python_storage
boost::python::converter::rvalue_from_python_data::BOOST_PYTHON_OFFSETOF	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    BOOST_STATIC_ASSERT(BOOST_PYTHON_OFFSETOF(rvalue_from_python_storage<T>,stage1) == 0);$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:(rvalue_from_python_storage<T>,stage1)
boost::python::converter::rvalue_from_python_data::ref_type	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    typedef typename add_reference<typename add_cv<T>::type>::type ref_type;$/;"	t	struct:boost::python::converter::rvalue_from_python_data	access:private
boost::python::converter::rvalue_from_python_data::rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    rvalue_from_python_data(rvalue_from_python_stage1_data const&);$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:(rvalue_from_python_stage1_data const&)
boost::python::converter::rvalue_from_python_data::rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    rvalue_from_python_data(void* convertible);$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:(void* convertible)
boost::python::converter::rvalue_from_python_data::rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^inline rvalue_from_python_data<T>::rvalue_from_python_data(rvalue_from_python_stage1_data const& _stage1)$/;"	f	class:boost::python::converter::rvalue_from_python_data	signature:(rvalue_from_python_stage1_data const& _stage1)
boost::python::converter::rvalue_from_python_data::rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^inline rvalue_from_python_data<T>::rvalue_from_python_data(void* convertible)$/;"	f	class:boost::python::converter::rvalue_from_python_data	signature:(void* convertible)
boost::python::converter::rvalue_from_python_data::~rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    ~rvalue_from_python_data();$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:()
boost::python::converter::rvalue_from_python_data::~rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^inline rvalue_from_python_data<T>::~rvalue_from_python_data()$/;"	f	class:boost::python::converter::rvalue_from_python_data	signature:()
boost::python::converter::rvalue_from_python_stage1	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL rvalue_from_python_stage1_data rvalue_from_python_stage1($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, registration const&)
boost::python::converter::rvalue_from_python_stage1_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^struct rvalue_from_python_stage1_data$/;"	s	namespace:boost::python::converter
boost::python::converter::rvalue_from_python_stage1_data::construct	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    constructor_function construct;$/;"	m	struct:boost::python::converter::rvalue_from_python_stage1_data	access:public
boost::python::converter::rvalue_from_python_stage1_data::convertible	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    void* convertible;$/;"	m	struct:boost::python::converter::rvalue_from_python_stage1_data	access:public
boost::python::converter::rvalue_from_python_stage2	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* rvalue_from_python_stage2($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, rvalue_from_python_stage1_data&, registration const&)
boost::python::converter::rvalue_from_python_storage	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^struct rvalue_from_python_storage$/;"	s	namespace:boost::python::converter
boost::python::converter::rvalue_from_python_storage::stage1	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    rvalue_from_python_stage1_data stage1;$/;"	m	struct:boost::python::converter::rvalue_from_python_storage	access:public
boost::python::converter::rvalue_from_python_storage::storage	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    >::type storage;$/;"	m	struct:boost::python::converter::rvalue_from_python_storage	access:public
boost::python::converter::rvalue_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* rvalue_result_from_python($/;"	p	namespace:boost::python::converter	signature:( PyObject*, rvalue_from_python_stage1_data&)
boost::python::converter::select_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct select_arg_from_python$/;"	s	namespace:boost::python::converter
boost::python::converter::select_arg_from_python::type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    >::type type;$/;"	t	struct:boost::python::converter::select_arg_from_python	access:public
boost::python::converter::select_extract	/usr/include/boost/python/extract.hpp	/^  struct select_extract$/;"	s	namespace:boost::python::converter
boost::python::converter::select_extract::BOOST_STATIC_CONSTANT	/usr/include/boost/python/extract.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::select_extract	access:public	signature:( bool, obj_mgr = is_object_manager<T>::value)
boost::python::converter::select_extract::BOOST_STATIC_CONSTANT	/usr/include/boost/python/extract.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::select_extract	access:public	signature:( bool, ptr = is_pointer<T>::value)
boost::python::converter::select_extract::BOOST_STATIC_CONSTANT	/usr/include/boost/python/extract.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::converter::select_extract	access:public	signature:( bool, ref = is_reference<T>::value)
boost::python::converter::select_extract::type	/usr/include/boost/python/extract.hpp	/^         >::type type;$/;"	t	struct:boost::python::converter::select_extract	access:public
boost::python::converter::shared_ptr_deleter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^struct BOOST_PYTHON_DECL shared_ptr_deleter$/;"	s	namespace:boost::python::converter
boost::python::converter::shared_ptr_deleter::operator ()	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    void operator()(void const*);$/;"	p	struct:boost::python::converter::shared_ptr_deleter	access:public	signature:(void const*)
boost::python::converter::shared_ptr_deleter::owner	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    handle<> owner;$/;"	m	struct:boost::python::converter::shared_ptr_deleter	access:public
boost::python::converter::shared_ptr_deleter::shared_ptr_deleter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    shared_ptr_deleter(handle<> owner);$/;"	p	struct:boost::python::converter::shared_ptr_deleter	access:public	signature:(handle< owner)
boost::python::converter::shared_ptr_deleter::~shared_ptr_deleter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    ~shared_ptr_deleter();$/;"	p	struct:boost::python::converter::shared_ptr_deleter	access:public	signature:()
boost::python::converter::shared_ptr_from_python	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^struct shared_ptr_from_python$/;"	s	namespace:boost::python::converter
boost::python::converter::shared_ptr_from_python::construct	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^    static void construct(PyObject* source, rvalue_from_python_stage1_data* data)$/;"	f	struct:boost::python::converter::shared_ptr_from_python	access:private	signature:(PyObject* source, rvalue_from_python_stage1_data* data)
boost::python::converter::shared_ptr_from_python::convertible	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^    static void* convertible(PyObject* p)$/;"	f	struct:boost::python::converter::shared_ptr_from_python	access:private	signature:(PyObject* p)
boost::python::converter::shared_ptr_from_python::shared_ptr_from_python	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^    shared_ptr_from_python()$/;"	f	struct:boost::python::converter::shared_ptr_from_python	access:public	signature:()
boost::python::converter::shared_ptr_to_python	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	/^PyObject* shared_ptr_to_python(shared_ptr<T> const& x)$/;"	f	namespace:boost::python::converter	signature:(shared_ptr<T> const& x)
boost::python::converter::throw_no_pointer_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void throw_no_pointer_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
boost::python::converter::throw_no_reference_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void throw_no_reference_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
boost::python::converter::to_python_function_t	/usr/include/boost/python/converter/to_python_function_type.hpp	/^typedef PyObject* (*to_python_function_t)(void const*);$/;"	t	namespace:boost::python::converter
boost::python::converter::to_python_target_type	/usr/include/boost/python/converter/pytype_function.hpp	/^struct to_python_target_type$/;"	s	namespace:boost::python::converter
boost::python::converter::to_python_target_type::get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::to_python_target_type	access:public	signature:()
boost::python::converter::to_python_target_type_direct	/usr/include/boost/python/converter/pytype_function.hpp	/^struct to_python_target_type_direct$/;"	s	namespace:boost::python::converter
boost::python::converter::to_python_target_type_direct::get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::to_python_target_type_direct	access:public	signature:()
boost::python::converter::void_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void void_result_from_python(PyObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*)
boost::python::converter::wrap_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^struct wrap_pytype$/;"	s	namespace:boost::python::converter
boost::python::converter::wrap_pytype::get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::converter::wrap_pytype	access:public	signature:()
boost::python::copy_const_reference	/usr/include/boost/python/copy_const_reference.hpp	/^struct copy_const_reference$/;"	s	namespace:boost::python
boost::python::copy_const_reference::apply	/usr/include/boost/python/copy_const_reference.hpp	/^    struct apply$/;"	s	struct:boost::python::copy_const_reference	access:public
boost::python::copy_const_reference::apply::type	/usr/include/boost/python/copy_const_reference.hpp	/^        >::type type;$/;"	t	struct:boost::python::copy_const_reference::apply	access:public
boost::python::copy_non_const_reference	/usr/include/boost/python/copy_non_const_reference.hpp	/^struct copy_non_const_reference$/;"	s	namespace:boost::python
boost::python::copy_non_const_reference::apply	/usr/include/boost/python/copy_non_const_reference.hpp	/^    struct apply$/;"	s	struct:boost::python::copy_non_const_reference	access:public
boost::python::copy_non_const_reference::apply::type	/usr/include/boost/python/copy_non_const_reference.hpp	/^        >::type type;$/;"	t	struct:boost::python::copy_non_const_reference::apply	access:public
boost::python::cxxabi_cxa_demangle_is_broken	/usr/include/boost/python/type_id.hpp	/^bool cxxabi_cxa_demangle_is_broken();$/;"	p	namespace:boost::python	signature:()
boost::python::decref	/usr/include/boost/python/refcount.hpp	/^inline void decref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
boost::python::def	/usr/include/boost/python/def.hpp	/^void def(char const* name, Arg1T arg1, Arg2T const& arg2)$/;"	f	namespace:boost::python	signature:(char const* name, Arg1T arg1, Arg2T const& arg2)
boost::python::def	/usr/include/boost/python/def.hpp	/^void def(char const* name, F f, A1 const& a1, A2 const& a2)$/;"	f	namespace:boost::python	signature:(char const* name, F f, A1 const& a1, A2 const& a2)
boost::python::def	/usr/include/boost/python/def.hpp	/^void def(char const* name, F f, A1 const& a1, A2 const& a2, A3 const& a3)$/;"	f	namespace:boost::python	signature:(char const* name, F f, A1 const& a1, A2 const& a2, A3 const& a3)
boost::python::def	/usr/include/boost/python/def.hpp	/^void def(char const* name, Fn fn)$/;"	f	namespace:boost::python	signature:(char const* name, Fn fn)
boost::python::def_visitor	/usr/include/boost/python/def_visitor.hpp	/^class def_visitor$/;"	c	namespace:boost::python
boost::python::def_visitor::derived_visitor	/usr/include/boost/python/def_visitor.hpp	/^    DerivedVisitor const& derived_visitor() const$/;"	f	class:boost::python::def_visitor	access:protected	signature:() const
boost::python::def_visitor::visit	/usr/include/boost/python/def_visitor.hpp	/^    void visit(classT& c) const$/;"	f	class:boost::python::def_visitor	access:public	signature:(classT& c) const
boost::python::def_visitor::visit	/usr/include/boost/python/def_visitor.hpp	/^    void visit(classT& c, char const* name, OptionalArgs const& options) const$/;"	f	class:boost::python::def_visitor	access:public	signature:(classT& c, char const* name, OptionalArgs const& options) const
boost::python::def_visitor_access	/usr/include/boost/python/def_visitor.hpp	/^class def_visitor_access$/;"	c	namespace:boost::python
boost::python::def_visitor_access::visit	/usr/include/boost/python/def_visitor.hpp	/^    static void visit($/;"	f	class:boost::python::def_visitor_access	access:public	signature:( V const& v , classT& c , char const* name , OptionalArgs const& options )
boost::python::def_visitor_access::visit	/usr/include/boost/python/def_visitor.hpp	/^    static void visit(V const& v, classT& c)$/;"	f	class:boost::python::def_visitor_access	access:public	signature:(V const& v, classT& c)
boost::python::default_call_policies	/usr/include/boost/python/default_call_policies.hpp	/^struct default_call_policies$/;"	s	namespace:boost::python
boost::python::default_call_policies::argument_package	/usr/include/boost/python/default_call_policies.hpp	/^    typedef PyObject* argument_package;$/;"	t	struct:boost::python::default_call_policies	access:public
boost::python::default_call_policies::extract_return_type	/usr/include/boost/python/default_call_policies.hpp	/^    struct extract_return_type : mpl::front<Sig>$/;"	s	struct:boost::python::default_call_policies	inherits:mpl::front	access:public
boost::python::default_call_policies::postcall	/usr/include/boost/python/default_call_policies.hpp	/^    static PyObject* postcall(ArgumentPackage const&, PyObject* result)$/;"	f	struct:boost::python::default_call_policies	access:public	signature:(ArgumentPackage const&, PyObject* result)
boost::python::default_call_policies::precall	/usr/include/boost/python/default_call_policies.hpp	/^    static bool precall(ArgumentPackage const&)$/;"	f	struct:boost::python::default_call_policies	access:public	signature:(ArgumentPackage const&)
boost::python::default_call_policies::result_converter	/usr/include/boost/python/default_call_policies.hpp	/^    typedef default_result_converter result_converter;$/;"	t	struct:boost::python::default_call_policies	access:public
boost::python::default_result_converter	/usr/include/boost/python/default_call_policies.hpp	/^struct default_result_converter$/;"	s	namespace:boost::python
boost::python::default_result_converter::apply	/usr/include/boost/python/default_call_policies.hpp	/^    struct apply$/;"	s	struct:boost::python::default_result_converter	access:public
boost::python::default_result_converter::apply	/usr/include/boost/python/default_call_policies.hpp	/^struct default_result_converter::apply<PyObject*>$/;"	s	class:boost::python::default_result_converter
boost::python::default_result_converter::apply	/usr/include/boost/python/default_call_policies.hpp	/^struct default_result_converter::apply<char const*>$/;"	s	class:boost::python::default_result_converter
boost::python::default_result_converter::apply::type	/usr/include/boost/python/default_call_policies.hpp	/^        >::type type;$/;"	t	struct:boost::python::default_result_converter::apply	access:public
boost::python::default_result_converter::apply::type	/usr/include/boost/python/default_call_policies.hpp	/^    typedef boost::python::to_python_value<PyObject*const&> type;$/;"	t	struct:boost::python::default_result_converter::apply	access:public
boost::python::default_result_converter::apply::type	/usr/include/boost/python/default_call_policies.hpp	/^    typedef boost::python::to_python_value<char const*const&> type;$/;"	t	struct:boost::python::default_result_converter::apply	access:public
boost::python::detail	/usr/include/boost/python/args.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/args_fwd.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/back_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/base_type_traits.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/bases.hpp	/^  namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/cast.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/class.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/converter/builtin_converters.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/copy_const_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/copy_non_const_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/data_members.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/def.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/default_call_policies.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/aix_init_module.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/caller.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/construct.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/convertible.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/cv_category.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/dealloc.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/decorated_type_id.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/decref_guard.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/def_helper.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/def_helper_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/defaults_def.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/defaults_gen.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/dependent.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/destroy.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/enable_if.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/exception_handler.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/force_instantiate.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/if_else.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/invoke.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/is_auto_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/is_wrapper.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/map_entry.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/none.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/not_specified.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/operator_id.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/overloads_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/pointee.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/python_type.hpp	/^namespace boost {namespace python {namespace detail{$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/raw_pyobject.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/referent_storage.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/result.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/scope.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/signature.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/string_literal.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/target.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/translate_exception.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/type_list_impl.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/unwind_type.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/value_arg.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/value_is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/void_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/void_return.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/detail/wrapper_base.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/dict.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/errors.hpp	/^namespace detail { inline void rethrow() { throw; } }$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/handle.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/init.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/iterator.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/list.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/long.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/lvalue_from_pytype.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/make_constructor.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/make_function.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/manage_new_object.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/module_init.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/object/pickle_support.hpp	/^namespace detail { struct pickle_suite_registration; }$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/object/pickle_support.hpp	/^namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/object_core.hpp	/^namespace detail $/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/object_core.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/operators.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/other.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/override.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/pointee.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/ptr.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/pure_virtual.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/raw_function.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/reference_existing_object.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/return_arg.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/return_internal_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/return_opaque_pointer.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/scope.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/signature.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/slice.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/str.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^    namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^    namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/to_python_indirect.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/to_python_value.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/tuple.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/type_id.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail	/usr/include/boost/python/with_custodian_and_ward.hpp	/^namespace detail$/;"	n	namespace:boost::python
boost::python::detail::BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE	/usr/include/boost/python/pure_virtual.hpp	/^  error_signature(S BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE(C))$/;"	f	namespace:boost::python::detail	signature:(C)
boost::python::detail::R	/usr/include/boost/python/detail/result.hpp	/^boost::type<R>* result(R (T::*), int = 0) { return 0; }$/;"	p	namespace:boost::python::detail	signature:(T::*)
boost::python::detail::aix_init_module	/usr/include/boost/python/detail/aix_init_module.hpp	/^void aix_init_module(so_load_function, char const* name, void (*init_module)());$/;"	p	namespace:boost::python::detail	signature:(so_load_function, char const* name, void (*init_module)())
boost::python::detail::aligned_storage	/usr/include/boost/python/detail/referent_storage.hpp	/^union aligned_storage$/;"	u	namespace:boost::python::detail
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(char, 0);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(char, 0)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(double, 5);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(double, 5)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(float, 4);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(float, 4)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(function_ptr, 8);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(function_ptr, 8)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(int, 2);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(int, 2)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(long double, 6);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(long double, 6)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(long, 3);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(long, 3)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(member_function_ptr, 10);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(member_function_ptr, 10)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(member_ptr, 9);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(member_ptr, 9)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(short, 1);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(short, 1)
boost::python::detail::aligned_storage::BOOST_PYTHON_ALIGNER	/usr/include/boost/python/detail/referent_storage.hpp	/^    BOOST_PYTHON_ALIGNER(void*, 7);$/;"	p	union:boost::python::detail::aligned_storage	access:public	signature:(void*, 7)
boost::python::detail::aligned_storage::bytes	/usr/include/boost/python/detail/referent_storage.hpp	/^    char bytes[size];$/;"	m	union:boost::python::detail::aligned_storage	access:public
boost::python::detail::always_void	/usr/include/boost/python/detail/enable_if.hpp	/^template <class T> struct always_void { typedef void type; };$/;"	s	namespace:boost::python::detail
boost::python::detail::always_void::type	/usr/include/boost/python/detail/enable_if.hpp	/^template <class T> struct always_void { typedef void type; };$/;"	t	struct:boost::python::detail::always_void	access:public
boost::python::detail::args_proxy	/usr/include/boost/python/object_core.hpp	/^class args_proxy : public call_proxy $/;"	c	namespace:boost::python::detail	inherits:call_proxy
boost::python::detail::args_proxy::args_proxy	/usr/include/boost/python/object_core.hpp	/^  args_proxy(object o) : call_proxy(o) {} $/;"	f	class:boost::python::detail::args_proxy	access:public	signature:(object o)
boost::python::detail::args_proxy::operator *	/usr/include/boost/python/object_core.hpp	/^  kwds_proxy operator* () const { return kwds_proxy(*this);} $/;"	f	class:boost::python::detail::args_proxy	access:public	signature:() const
boost::python::detail::arity	/usr/include/boost/python/detail/caller.hpp	/^inline unsigned arity(PyObject* const& args_)$/;"	f	namespace:boost::python::detail	signature:(PyObject* const& args_)
boost::python::detail::arity	/usr/include/boost/python/make_constructor.hpp	/^  inline unsigned arity(offset_args<BaseArgs,Offset> const& args_)$/;"	f	namespace:boost::python::detail	signature:(offset_args<BaseArgs,Offset> const& args_)
boost::python::detail::assert_array_typeid_compiles	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo assert_array_typeid_compiles()$/;"	f	namespace:boost::python::detail	signature:()
boost::python::detail::assert_castable	/usr/include/boost/python/cast.hpp	/^  inline void assert_castable(boost::type<T>* = 0)$/;"	f	namespace:boost::python::detail	signature:(boost::type<T>* = 0)
boost::python::detail::binary_op	/usr/include/boost/python/operators.hpp	/^  struct binary_op : operator_l<id>$/;"	s	namespace:boost::python::detail	inherits:operator_l
boost::python::detail::binary_op::apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_l_inner<id,T,T>$/;"	s	struct:boost::python::detail::binary_op	inherits:operator_l_inner	access:public
boost::python::detail::binary_op_l	/usr/include/boost/python/operators.hpp	/^  struct binary_op_l : operator_l<id>$/;"	s	namespace:boost::python::detail	inherits:operator_l
boost::python::detail::binary_op_l::apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_l_inner<id,T,R>$/;"	s	struct:boost::python::detail::binary_op_l	inherits:operator_l_inner	access:public
boost::python::detail::binary_op_r	/usr/include/boost/python/operators.hpp	/^  struct binary_op_r : operator_r<id>$/;"	s	namespace:boost::python::detail	inherits:operator_r
boost::python::detail::binary_op_r::apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_r_inner<id,L,T>$/;"	s	struct:boost::python::detail::binary_op_r	inherits:operator_r_inner	access:public
boost::python::detail::borrowed	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^template<class T> class borrowed$/;"	c	namespace:boost::python::detail
boost::python::detail::borrowed::type	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    typedef T type;$/;"	t	class:boost::python::detail::borrowed	access:private
boost::python::detail::borrowed_reference	/usr/include/boost/python/detail/raw_pyobject.hpp	/^typedef borrowed_reference_t* borrowed_reference;$/;"	t	namespace:boost::python::detail
boost::python::detail::builtin_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  struct builtin_to_python$/;"	s	namespace:boost::python::detail
boost::python::detail::builtin_to_python::BOOST_STATIC_CONSTANT	/usr/include/boost/python/converter/builtin_converters.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = false);$/;"	p	struct:boost::python::detail::builtin_to_python	access:public	signature:(bool, uses_registry = false)
boost::python::detail::call_proxy	/usr/include/boost/python/object_core.hpp	/^class call_proxy $/;"	c	namespace:boost::python::detail
boost::python::detail::call_proxy::call_proxy	/usr/include/boost/python/object_core.hpp	/^  call_proxy(object target) : m_target(target) {} $/;"	f	class:boost::python::detail::call_proxy	access:public	signature:(object target)
boost::python::detail::call_proxy::m_target	/usr/include/boost/python/object_core.hpp	/^    object m_target; $/;"	m	class:boost::python::detail::call_proxy	access:private
boost::python::detail::call_proxy::operator object	/usr/include/boost/python/object_core.hpp	/^  operator object() const { return m_target;} $/;"	f	class:boost::python::detail::call_proxy	access:public	signature:() const
boost::python::detail::caller	/usr/include/boost/python/detail/caller.hpp	/^struct caller$/;"	s	namespace:boost::python::detail	inherits:caller_base_select::type
boost::python::detail::caller::base	/usr/include/boost/python/detail/caller.hpp	/^        >::type base;$/;"	t	struct:boost::python::detail::caller	access:public
boost::python::detail::caller::caller	/usr/include/boost/python/detail/caller.hpp	/^    caller(F f, CallPolicies p) : base(f,p) {}$/;"	f	struct:boost::python::detail::caller	access:public	signature:(F f, CallPolicies p)
boost::python::detail::caller::result_type	/usr/include/boost/python/detail/caller.hpp	/^    typedef PyObject* result_type;$/;"	t	struct:boost::python::detail::caller	access:public
boost::python::detail::caller_base_select	/usr/include/boost/python/detail/caller.hpp	/^struct caller_base_select$/;"	s	namespace:boost::python::detail
boost::python::detail::caller_base_select::arity	/usr/include/boost/python/detail/caller.hpp	/^    enum { arity = mpl::size<Sig>::value - 1 };$/;"	e	enum:boost::python::detail::caller_base_select::__anon1
boost::python::detail::caller_base_select::type	/usr/include/boost/python/detail/caller.hpp	/^    typedef typename caller_arity<arity>::template impl<F,CallPolicies,Sig> type;$/;"	t	struct:boost::python::detail::caller_base_select	access:public
boost::python::detail::compare_proxy_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct compare_proxy_index$/;"	s	namespace:boost::python::detail
boost::python::detail::compare_proxy_index::operator ()	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        bool operator()(PyObject* prox, Index i) const$/;"	f	struct:boost::python::detail::compare_proxy_index	access:public	signature:(PyObject* prox, Index i) const
boost::python::detail::const_	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<true,false> const_;$/;"	t	namespace:boost::python::detail
boost::python::detail::const_volatile_	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<true,true> const_volatile_;$/;"	t	namespace:boost::python::detail
boost::python::detail::construct_pointee	/usr/include/boost/python/detail/construct.hpp	/^void construct_pointee(void* storage, Arg& x$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg& x , T const volatile* )
boost::python::detail::construct_referent	/usr/include/boost/python/detail/construct.hpp	/^void construct_referent(void* storage, Arg const& x, T(*tag)() = 0)$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg const& x, T(*tag)() = 0)
boost::python::detail::construct_referent	/usr/include/boost/python/detail/construct.hpp	/^void construct_referent(void* storage, Arg& x, T(*tag)() = 0)$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg& x, T(*tag)() = 0)
boost::python::detail::construct_referent_impl	/usr/include/boost/python/detail/construct.hpp	/^void construct_referent_impl(void* storage, Arg& x, T&(*)())$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg& x, T&(*)())
boost::python::detail::constructor_policy	/usr/include/boost/python/make_constructor.hpp	/^  struct constructor_policy : BasePolicy_$/;"	s	namespace:boost::python::detail	inherits:BasePolicy_
boost::python::detail::constructor_policy::BOOST_MPL_ASSERT_MSG	/usr/include/boost/python/make_constructor.hpp	/^      BOOST_MPL_ASSERT_MSG($/;"	p	struct:boost::python::detail::constructor_policy	access:public	signature:(is_same< typename BasePolicy_::result_converter , default_result_converter >::value) , MAKE_CONSTRUCTOR_SUPPLIES_ITS_OWN_RESULT_CONVERTER_THAT_WOULD_OVERRIDE_YOURS , (typename BasePolicy_::result_converter) 
boost::python::detail::constructor_policy::BOOST_STATIC_ASSERT	/usr/include/boost/python/make_constructor.hpp	/^      BOOST_STATIC_ASSERT(same_result_converter::value) ;$/;"	p	struct:boost::python::detail::constructor_policy	access:public	signature:(same_result_converter::value)
boost::python::detail::constructor_policy::argument_package	/usr/include/boost/python/make_constructor.hpp	/^      typedef offset_args<typename BasePolicy_::argument_package, mpl::int_<1> > argument_package;$/;"	t	struct:boost::python::detail::constructor_policy	access:public
boost::python::detail::constructor_policy::constructor_policy	/usr/include/boost/python/make_constructor.hpp	/^      constructor_policy(BasePolicy_ base) : BasePolicy_(base) {}$/;"	f	struct:boost::python::detail::constructor_policy	access:public	signature:(BasePolicy_ base)
boost::python::detail::constructor_policy::result_converter	/usr/include/boost/python/make_constructor.hpp	/^      typedef constructor_result_converter result_converter;$/;"	t	struct:boost::python::detail::constructor_policy	access:public
boost::python::detail::constructor_policy::same_result_converter	/usr/include/boost/python/make_constructor.hpp	/^          > same_result_converter;$/;"	t	struct:boost::python::detail::constructor_policy	access:public
boost::python::detail::constructor_result_converter	/usr/include/boost/python/make_constructor.hpp	/^  struct constructor_result_converter$/;"	s	namespace:boost::python::detail
boost::python::detail::constructor_result_converter::apply	/usr/include/boost/python/make_constructor.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::constructor_result_converter	access:public
boost::python::detail::constructor_result_converter::apply::type	/usr/include/boost/python/make_constructor.hpp	/^          typedef install_holder<T> type;$/;"	t	struct:boost::python::detail::constructor_result_converter::apply	access:public
boost::python::detail::container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    class container_element$/;"	c	namespace:boost::python::detail
boost::python::detail::container_element::container	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        object container;$/;"	m	class:boost::python::detail::container_element	access:private
boost::python::detail::container_element::container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        container_element(container_element const& ce)$/;"	f	class:boost::python::detail::container_element	access:public	signature:(container_element const& ce)
boost::python::detail::container_element::container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        container_element(object container, Index index)$/;"	f	class:boost::python::detail::container_element	access:public	signature:(object container, Index index)
boost::python::detail::container_element::container_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef Container container_type;$/;"	t	class:boost::python::detail::container_element	access:public
boost::python::detail::container_element::detach	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        detach()$/;"	f	class:boost::python::detail::container_element	access:public	signature:()
boost::python::detail::container_element::element_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Policies::data_type element_type;$/;"	t	class:boost::python::detail::container_element	access:public
boost::python::detail::container_element::get	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        element_type* get() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
boost::python::detail::container_element::get_container	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        get_container() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
boost::python::detail::container_element::get_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        get_index() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
boost::python::detail::container_element::get_links	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        get_links()$/;"	f	class:boost::python::detail::container_element	access:public	signature:()
boost::python::detail::container_element::index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        Index index;$/;"	m	class:boost::python::detail::container_element	access:private
boost::python::detail::container_element::index_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef Index index_type;$/;"	t	class:boost::python::detail::container_element	access:public
boost::python::detail::container_element::is_detached	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        is_detached() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
boost::python::detail::container_element::links_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef proxy_group<self_t> links_type;$/;"	t	class:boost::python::detail::container_element	access:public
boost::python::detail::container_element::operator *	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        element_type& operator*() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
boost::python::detail::container_element::operator =	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        container_element& operator=(container_element const& ce);$/;"	p	class:boost::python::detail::container_element	access:private	signature:(container_element const& ce)
boost::python::detail::container_element::policies_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef Policies policies_type;$/;"	t	class:boost::python::detail::container_element	access:public
boost::python::detail::container_element::ptr	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        scoped_ptr<element_type> ptr;$/;"	m	class:boost::python::detail::container_element	access:private
boost::python::detail::container_element::self_t	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef container_element<Container, Index, Policies> self_t;$/;"	t	class:boost::python::detail::container_element	access:public
boost::python::detail::container_element::set_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        set_index(Index i)$/;"	f	class:boost::python::detail::container_element	access:public	signature:(Index i)
boost::python::detail::container_element::~container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        ~container_element()$/;"	f	class:boost::python::detail::container_element	access:public	signature:()
boost::python::detail::convert_result	/usr/include/boost/python/operators.hpp	/^  PyObject* convert_result(T const& x)$/;"	f	namespace:boost::python::detail	signature:(T const& x)
boost::python::detail::converter_target_type	/usr/include/boost/python/detail/caller.hpp	/^struct converter_target_type $/;"	s	namespace:boost::python::detail
boost::python::detail::converter_target_type	/usr/include/boost/python/detail/caller.hpp	/^struct converter_target_type <void_result_to_python >$/;"	s	namespace:boost::python::detail
boost::python::detail::converter_target_type::get_pytype	/usr/include/boost/python/detail/caller.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::detail::converter_target_type	access:public	signature:()
boost::python::detail::convertible	/usr/include/boost/python/detail/convertible.hpp	/^struct convertible$/;"	s	namespace:boost::python::detail
boost::python::detail::convertible::check	/usr/include/boost/python/detail/convertible.hpp	/^    static inline no_convertible check(...) { return 0; }$/;"	f	struct:boost::python::detail::convertible	access:public	signature:(....)
boost::python::detail::convertible::check	/usr/include/boost/python/detail/convertible.hpp	/^    static inline yes_convertible check(Target) { return 0; }$/;"	f	struct:boost::python::detail::convertible	access:public	signature:(Target)
boost::python::detail::copy_const_reference_expects_a_const_reference_return_type	/usr/include/boost/python/copy_const_reference.hpp	/^  struct copy_const_reference_expects_a_const_reference_return_type$/;"	s	namespace:boost::python::detail
boost::python::detail::copy_ctor_mutates_rhs	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	/^struct copy_ctor_mutates_rhs$/;"	s	namespace:boost::python::detail	inherits:is_auto_ptr
boost::python::detail::copy_non_const_reference_expects_a_non_const_reference_return_type	/usr/include/boost/python/copy_non_const_reference.hpp	/^  struct copy_non_const_reference_expects_a_non_const_reference_return_type$/;"	s	namespace:boost::python::detail
boost::python::detail::create_result_converter	/usr/include/boost/python/detail/caller.hpp	/^inline ResultConverter create_result_converter($/;"	f	namespace:boost::python::detail	signature:( ArgPackage const& , ResultConverter* , ... )
boost::python::detail::create_result_converter	/usr/include/boost/python/detail/caller.hpp	/^inline ResultConverter create_result_converter($/;"	f	namespace:boost::python::detail	signature:( ArgPackage const& args_ , ResultConverter* , converter::context_result_converter* )
boost::python::detail::cv_category	/usr/include/boost/python/detail/cv_category.hpp	/^struct cv_category$/;"	s	namespace:boost::python::detail
boost::python::detail::cv_category::type	/usr/include/boost/python/detail/cv_category.hpp	/^    > type;$/;"	t	struct:boost::python::detail::cv_category	access:public
boost::python::detail::cv_tag	/usr/include/boost/python/detail/cv_category.hpp	/^struct cv_tag$/;"	s	namespace:boost::python::detail
boost::python::detail::cv_tag::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/cv_category.hpp	/^    BOOST_STATIC_CONSTANT(bool, is_const = is_const_);$/;"	p	struct:boost::python::detail::cv_tag	access:public	signature:(bool, is_const = is_const_)
boost::python::detail::cv_tag::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/cv_category.hpp	/^    BOOST_STATIC_CONSTANT(bool, is_volatile = is_const_);$/;"	p	struct:boost::python::detail::cv_tag	access:public	signature:(bool, is_volatile = is_const_)
boost::python::detail::cv_unqualified	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<false,false> cv_unqualified;$/;"	t	namespace:boost::python::detail
boost::python::detail::datum	/usr/include/boost/python/data_members.hpp	/^  struct datum$/;"	s	namespace:boost::python::detail
boost::python::detail::datum::datum	/usr/include/boost/python/data_members.hpp	/^      datum(Data *which) : m_which(which) {}$/;"	f	struct:boost::python::detail::datum	access:public	signature:(Data *which)
boost::python::detail::datum::m_which	/usr/include/boost/python/data_members.hpp	/^      Data *m_which;$/;"	m	struct:boost::python::detail::datum	access:private
boost::python::detail::datum::operator ()	/usr/include/boost/python/data_members.hpp	/^      Data& operator()() const$/;"	f	struct:boost::python::detail::datum	access:public	signature:() const
boost::python::detail::datum::operator ()	/usr/include/boost/python/data_members.hpp	/^      void operator()(typename value_arg<Data>::type d) const$/;"	f	struct:boost::python::detail::datum	access:public	signature:(typename value_arg<Data>::type d) const
boost::python::detail::dealloc	/usr/include/boost/python/detail/dealloc.hpp	/^        inline void dealloc(PyObject* self)$/;"	f	signature:(PyObject* self)
boost::python::detail::decorated_type_id	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline decorated_type_info decorated_type_id(boost::type<T>* = 0)$/;"	f	namespace:boost::python::detail	signature:(boost::type<T>* = 0)
boost::python::detail::decorated_type_info	/usr/include/boost/python/detail/decorated_type_id.hpp	/^struct decorated_type_info : totally_ordered<decorated_type_info>$/;"	s	namespace:boost::python::detail	inherits:totally_ordered
boost::python::detail::decorated_type_info::base_id_t	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    typedef type_info base_id_t;$/;"	t	struct:boost::python::detail::decorated_type_info	access:private
boost::python::detail::decorated_type_info::const_	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	e	enum:boost::python::detail::decorated_type_info::decoration
boost::python::detail::decorated_type_info::decorated_type_info	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    decorated_type_info(type_info, decoration = decoration());$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:(type_info, decoration = decoration())
boost::python::detail::decorated_type_info::decorated_type_info	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline decorated_type_info::decorated_type_info(type_info base_t, decoration decoration)$/;"	f	class:boost::python::detail::decorated_type_info	signature:(type_info base_t, decoration decoration)
boost::python::detail::decorated_type_info::decoration	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	g	struct:boost::python::detail::decorated_type_info	access:public
boost::python::detail::decorated_type_info::m_base_type	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    base_id_t m_base_type;$/;"	m	struct:boost::python::detail::decorated_type_info	access:private
boost::python::detail::decorated_type_info::m_decoration	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    decoration m_decoration;$/;"	m	struct:boost::python::detail::decorated_type_info	access:private
boost::python::detail::decorated_type_info::operator <	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    inline bool operator<(decorated_type_info const& rhs) const;$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:(decorated_type_info const& rhs) const
boost::python::detail::decorated_type_info::operator <	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline bool decorated_type_info::operator<(decorated_type_info const& rhs) const$/;"	f	class:boost::python::detail::decorated_type_info	signature:(decorated_type_info const& rhs) const
boost::python::detail::decorated_type_info::operator <<	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    friend BOOST_PYTHON_DECL std::ostream& operator<<(std::ostream&, decorated_type_info const&);$/;"	p	struct:boost::python::detail::decorated_type_info	access:friend	signature:(std::ostream&, decorated_type_info const&)
boost::python::detail::decorated_type_info::operator ==	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    inline bool operator==(decorated_type_info const& rhs) const;$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:(decorated_type_info const& rhs) const
boost::python::detail::decorated_type_info::operator ==	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline bool decorated_type_info::operator==(decorated_type_info const& rhs) const$/;"	f	class:boost::python::detail::decorated_type_info	signature:(decorated_type_info const& rhs) const
boost::python::detail::decorated_type_info::operator type_info const&	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    operator type_info const&() const;$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:() const
boost::python::detail::decorated_type_info::operator type_info const&	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline decorated_type_info::operator type_info const&() const$/;"	f	class:boost::python::detail::decorated_type_info	signature:() const
boost::python::detail::decorated_type_info::reference	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	e	enum:boost::python::detail::decorated_type_info::decoration
boost::python::detail::decorated_type_info::volatile_	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	e	enum:boost::python::detail::decorated_type_info::decoration
boost::python::detail::decref_guard	/usr/include/boost/python/detail/decref_guard.hpp	/^struct decref_guard$/;"	s	namespace:boost::python::detail
boost::python::detail::decref_guard::cancel	/usr/include/boost/python/detail/decref_guard.hpp	/^    void cancel() { obj = 0; }$/;"	f	struct:boost::python::detail::decref_guard	access:public	signature:()
boost::python::detail::decref_guard::decref_guard	/usr/include/boost/python/detail/decref_guard.hpp	/^    decref_guard(PyObject* o) : obj(o) {}$/;"	f	struct:boost::python::detail::decref_guard	access:public	signature:(PyObject* o)
boost::python::detail::decref_guard::obj	/usr/include/boost/python/detail/decref_guard.hpp	/^    PyObject* obj;$/;"	m	struct:boost::python::detail::decref_guard	access:private
boost::python::detail::decref_guard::~decref_guard	/usr/include/boost/python/detail/decref_guard.hpp	/^    ~decref_guard() { Py_XDECREF(obj); }$/;"	f	struct:boost::python::detail::decref_guard	access:public	signature:()
boost::python::detail::def_from_helper	/usr/include/boost/python/def.hpp	/^  void def_from_helper($/;"	f	namespace:boost::python::detail	signature:( char const* name, F const& fn, Helper const& helper)
boost::python::detail::def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^  struct def_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::def_helper::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/def_helper.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::detail::def_helper	access:public	signature:( bool, has_default_implementation = ( !is_same<default_implementation_t, void(not_specified::*)()>::value))
boost::python::detail::def_helper::all_t	/usr/include/boost/python/detail/def_helper.hpp	/^          > all_t;$/;"	t	struct:boost::python::detail::def_helper	access:public
boost::python::detail::def_helper::def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1) : m_all(a1,m_nil,m_nil,m_nil) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1)
boost::python::detail::def_helper::def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1, T2 const& a2) : m_all(a1,a2,m_nil,m_nil) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1, T2 const& a2)
boost::python::detail::def_helper::def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1, T2 const& a2, T3 const& a3) : m_all(a1,a2,a3,m_nil) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1, T2 const& a2, T3 const& a3)
boost::python::detail::def_helper::def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1, T2 const& a2, T3 const& a3, T4 const& a4) : m_all(a1,a2,a3,a4) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1, T2 const& a2, T3 const& a3, T4 const& a4)
boost::python::detail::def_helper::default_implementation	/usr/include/boost/python/detail/def_helper.hpp	/^      default_implementation_t default_implementation() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
boost::python::detail::def_helper::default_implementation_t	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename default_implementation_extract<all_t>::result_type default_implementation_t;$/;"	t	struct:boost::python::detail::def_helper	access:private
boost::python::detail::def_helper::doc	/usr/include/boost/python/detail/def_helper.hpp	/^      char const* doc() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
boost::python::detail::def_helper::keywords	/usr/include/boost/python/detail/def_helper.hpp	/^      typename keyword_extract<all_t>::result_type keywords() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
boost::python::detail::def_helper::m_all	/usr/include/boost/python/detail/def_helper.hpp	/^      all_t m_all; $/;"	m	struct:boost::python::detail::def_helper	access:private
boost::python::detail::def_helper::m_nil	/usr/include/boost/python/detail/def_helper.hpp	/^      not_specified m_nil; \/\/ for filling in not_specified slots$/;"	m	struct:boost::python::detail::def_helper	access:private
boost::python::detail::def_helper::policies	/usr/include/boost/python/detail/def_helper.hpp	/^      typename policy_extract<all_t>::result_type policies() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
boost::python::detail::def_init_aux	/usr/include/boost/python/init.hpp	/^  inline void def_init_aux($/;"	f	namespace:boost::python::detail	signature:( ClassT& cl , Signature const& , NArgs , CallPoliciesT const& policies , char const* doc , detail::keyword_range const& keywords_ )
boost::python::detail::def_maybe_overloads	/usr/include/boost/python/def.hpp	/^  def_maybe_overloads($/;"	f	namespace:boost::python::detail	signature:( char const* name , Fn fn , A1 const& a1 , ...)
boost::python::detail::def_maybe_overloads	/usr/include/boost/python/def.hpp	/^  void def_maybe_overloads($/;"	f	namespace:boost::python::detail	signature:( char const* name , SigT sig , StubsT const& stubs , detail::overloads_base const*)
boost::python::detail::default_datum_getter_policy	/usr/include/boost/python/data_members.hpp	/^  struct default_datum_getter_policy$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
boost::python::detail::default_getter_by_ref	/usr/include/boost/python/data_members.hpp	/^  struct default_getter_by_ref$/;"	s	namespace:boost::python::detail	inherits:mpl::and_
boost::python::detail::default_implementation_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct default_implementation_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
boost::python::detail::default_member_getter_policy	/usr/include/boost/python/data_members.hpp	/^  struct default_member_getter_policy$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
boost::python::detail::define_class_init_helper	/usr/include/boost/python/init.hpp	/^  struct define_class_init_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::define_class_init_helper	/usr/include/boost/python/init.hpp	/^  struct define_class_init_helper<0> {$/;"	s	namespace:boost::python::detail
boost::python::detail::define_class_init_helper::apply	/usr/include/boost/python/init.hpp	/^      static void apply($/;"	f	struct:boost::python::detail::define_class_init_helper	access:public	signature:( ClassT& cl , CallPoliciesT const& policies , Signature const& args , NArgs , char const* doc , detail::keyword_range const& keywords)
boost::python::detail::define_class_init_helper::apply	/usr/include/boost/python/init.hpp	/^      static void apply($/;"	f	struct:boost::python::detail::define_class_init_helper	access:public	signature:( ClassT& cl , CallPoliciesT const& policies , Signature const& args , NArgs , char const* doc , detail::keyword_range keywords)
boost::python::detail::define_stub_function	/usr/include/boost/python/detail/defaults_def.hpp	/^  struct define_stub_function {};$/;"	s	namespace:boost::python::detail
boost::python::detail::define_with_defaults	/usr/include/boost/python/detail/defaults_def.hpp	/^  define_with_defaults($/;"	f	namespace:boost::python::detail	signature:( char const* name, OverloadsT const& overloads, NameSpaceT& name_space, SigT const&)
boost::python::detail::define_with_defaults	/usr/include/boost/python/detail/overloads_fwd.hpp	/^inline void define_with_defaults(char const* name, OverloadsT const&, NameSpaceT&, SigT const&);$/;"	p	namespace:boost::python::detail	signature:(char const* name, OverloadsT const&, NameSpaceT&, SigT const&)
boost::python::detail::define_with_defaults_helper	/usr/include/boost/python/detail/defaults_def.hpp	/^  struct define_with_defaults_helper {$/;"	s	namespace:boost::python::detail
boost::python::detail::define_with_defaults_helper	/usr/include/boost/python/detail/defaults_def.hpp	/^  struct define_with_defaults_helper<0> {$/;"	s	namespace:boost::python::detail
boost::python::detail::define_with_defaults_helper::def	/usr/include/boost/python/detail/defaults_def.hpp	/^      def($/;"	f	struct:boost::python::detail::define_with_defaults_helper	access:public	signature:( char const* name, StubsT stubs, keyword_range const& kw, CallPolicies const& policies, NameSpaceT& name_space, char const* doc)
boost::python::detail::define_with_defaults_helper::def	/usr/include/boost/python/detail/defaults_def.hpp	/^      def($/;"	f	struct:boost::python::detail::define_with_defaults_helper	access:public	signature:( char const* name, StubsT stubs, keyword_range kw, CallPolicies const& policies, NameSpaceT& name_space, char const* doc)
boost::python::detail::dependent	/usr/include/boost/python/detail/dependent.hpp	/^struct dependent$/;"	s	namespace:boost::python::detail
boost::python::detail::dependent::type	/usr/include/boost/python/detail/dependent.hpp	/^    typedef T type;$/;"	t	struct:boost::python::detail::dependent	access:public
boost::python::detail::destroy_referent	/usr/include/boost/python/detail/destroy.hpp	/^inline void destroy_referent(void* p, T(*)() = 0)$/;"	f	namespace:boost::python::detail	signature:(void* p, T(*)() = 0)
boost::python::detail::destroy_referent_impl	/usr/include/boost/python/detail/destroy.hpp	/^inline void destroy_referent_impl(void* p, T& (*)())$/;"	f	namespace:boost::python::detail	signature:(void* p, T& (*)())
boost::python::detail::dict_base	/usr/include/boost/python/dict.hpp	/^  struct BOOST_PYTHON_DECL dict_base : object$/;"	s	namespace:boost::python::detail	inherits:object
boost::python::detail::dict_base::call	/usr/include/boost/python/dict.hpp	/^      static detail::new_reference call(object const&);$/;"	p	struct:boost::python::detail::dict_base	access:private	signature:(object const&)
boost::python::detail::dict_base::clear	/usr/include/boost/python/dict.hpp	/^      void clear();$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:()
boost::python::detail::dict_base::copy	/usr/include/boost/python/dict.hpp	/^      dict copy();$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:()
boost::python::detail::dict_base::dict_base	/usr/include/boost/python/dict.hpp	/^      dict_base();   \/\/ new dict$/;"	p	struct:boost::python::detail::dict_base	access:protected	signature:()
boost::python::detail::dict_base::dict_base	/usr/include/boost/python/dict.hpp	/^      explicit dict_base(object_cref data);$/;"	p	struct:boost::python::detail::dict_base	access:protected	signature:(object_cref data)
boost::python::detail::dict_base::get	/usr/include/boost/python/dict.hpp	/^      object get(object_cref k) const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k) const
boost::python::detail::dict_base::get	/usr/include/boost/python/dict.hpp	/^      object get(object_cref k, object_cref d) const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k, object_cref d) const
boost::python::detail::dict_base::has_key	/usr/include/boost/python/dict.hpp	/^      bool has_key(object_cref k) const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k) const
boost::python::detail::dict_base::items	/usr/include/boost/python/dict.hpp	/^      list items() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
boost::python::detail::dict_base::iteritems	/usr/include/boost/python/dict.hpp	/^      object iteritems() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
boost::python::detail::dict_base::iterkeys	/usr/include/boost/python/dict.hpp	/^      object iterkeys() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
boost::python::detail::dict_base::itervalues	/usr/include/boost/python/dict.hpp	/^      object itervalues() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
boost::python::detail::dict_base::keys	/usr/include/boost/python/dict.hpp	/^      list keys() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
boost::python::detail::dict_base::popitem	/usr/include/boost/python/dict.hpp	/^      tuple popitem();$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:()
boost::python::detail::dict_base::setdefault	/usr/include/boost/python/dict.hpp	/^      object setdefault(object_cref k);$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k)
boost::python::detail::dict_base::setdefault	/usr/include/boost/python/dict.hpp	/^      object setdefault(object_cref k, object_cref d);$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k, object_cref d)
boost::python::detail::dict_base::update	/usr/include/boost/python/dict.hpp	/^      void update(object_cref E);$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref E)
boost::python::detail::dict_base::values	/usr/include/boost/python/dict.hpp	/^      list values() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
boost::python::detail::direct_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
boost::python::detail::disable_if_arg	/usr/include/boost/python/detail/enable_if.hpp	/^struct disable_if_arg$/;"	s	namespace:boost::python::detail
boost::python::detail::disable_if_arg::type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,int&,T>::type type;$/;"	t	struct:boost::python::detail::disable_if_arg	access:public
boost::python::detail::disable_if_ret	/usr/include/boost/python/detail/enable_if.hpp	/^struct disable_if_ret$/;"	s	namespace:boost::python::detail
boost::python::detail::disable_if_ret::type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,int[2],T>::type type;$/;"	t	struct:boost::python::detail::disable_if_ret	access:public
boost::python::detail::doc_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct doc_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
boost::python::detail::downcast	/usr/include/boost/python/cast.hpp	/^  inline Target* downcast(Source* p, no_convertible, boost::type<Target>* = 0)$/;"	f	namespace:boost::python::detail	signature:(Source* p, no_convertible, boost::type<Target>* = 0)
boost::python::detail::downcast	/usr/include/boost/python/cast.hpp	/^  inline Target* downcast(Source* p, yes_convertible)$/;"	f	namespace:boost::python::detail	signature:(Source* p, yes_convertible)
boost::python::detail::drop1	/usr/include/boost/python/init.hpp	/^  struct drop1$/;"	s	namespace:boost::python::detail	inherits:mpl::iterator_range
boost::python::detail::elif_selected	/usr/include/boost/python/detail/if_else.hpp	/^struct elif_selected$/;"	s	namespace:boost::python::detail
boost::python::detail::elif_selected::then	/usr/include/boost/python/detail/if_else.hpp	/^class elif_selected<T>::then : public if_selected<T>$/;"	c	class:boost::python::detail::elif_selected	inherits:if_selected
boost::python::detail::enable_if_arg	/usr/include/boost/python/detail/enable_if.hpp	/^struct enable_if_arg$/;"	s	namespace:boost::python::detail
boost::python::detail::enable_if_arg::type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,T,int&>::type type;$/;"	t	struct:boost::python::detail::enable_if_arg	access:public
boost::python::detail::enable_if_ret	/usr/include/boost/python/detail/enable_if.hpp	/^struct enable_if_ret$/;"	s	namespace:boost::python::detail
boost::python::detail::enable_if_ret::type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,T,int[2]>::type type;$/;"	t	struct:boost::python::detail::enable_if_ret	access:public
boost::python::detail::error	/usr/include/boost/python/args_fwd.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
boost::python::detail::error	/usr/include/boost/python/class.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
boost::python::detail::error	/usr/include/boost/python/def.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
boost::python::detail::error	/usr/include/boost/python/init.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
boost::python::detail::error::assertion	/usr/include/boost/python/class.hpp	/^    struct assertion$/;"	s	namespace:boost::python::detail::error	inherits:mpl::if_::type
boost::python::detail::error::assertion_failed	/usr/include/boost/python/class.hpp	/^    template <class C> struct assertion_failed { };$/;"	s	namespace:boost::python::detail::error
boost::python::detail::error::assertion_ok	/usr/include/boost/python/class.hpp	/^    template <class C> struct assertion_ok { typedef C failed; };$/;"	s	namespace:boost::python::detail::error
boost::python::detail::error::assertion_ok::failed	/usr/include/boost/python/class.hpp	/^    template <class C> struct assertion_ok { typedef C failed; };$/;"	t	struct:boost::python::detail::error::assertion_ok	access:public
boost::python::detail::error::more_keywords_than_function_arguments	/usr/include/boost/python/args_fwd.hpp	/^    struct more_keywords_than_function_arguments$/;"	s	namespace:boost::python::detail::error
boost::python::detail::error::more_keywords_than_function_arguments::too_many_keywords	/usr/include/boost/python/args_fwd.hpp	/^        typedef char too_many_keywords[keywords > function_args ? -1 : 1];$/;"	t	struct:boost::python::detail::error::more_keywords_than_function_arguments	access:public
boost::python::detail::error::more_keywords_than_init_arguments	/usr/include/boost/python/init.hpp	/^    struct more_keywords_than_init_arguments$/;"	s	namespace:boost::python::detail::error
boost::python::detail::error::more_keywords_than_init_arguments::too_many_keywords	/usr/include/boost/python/init.hpp	/^        typedef char too_many_keywords[init_args - keywords >= 0 ? 1 : -1];$/;"	t	struct:boost::python::detail::error::more_keywords_than_init_arguments	access:public
boost::python::detail::error::multiple_functions_passed_to_def	/usr/include/boost/python/def.hpp	/^    template <> struct multiple_functions_passed_to_def<false> { typedef char type; };$/;"	s	namespace:boost::python::detail::error
boost::python::detail::error::multiple_functions_passed_to_def::type	/usr/include/boost/python/def.hpp	/^    template <> struct multiple_functions_passed_to_def<false> { typedef char type; };$/;"	t	struct:boost::python::detail::error::multiple_functions_passed_to_def	access:public
boost::python::detail::error::not_a_derived_class_member	/usr/include/boost/python/class.hpp	/^    void not_a_derived_class_member(Default) {}$/;"	f	namespace:boost::python::detail::error	signature:(Default)
boost::python::detail::error::virtual_function_default	/usr/include/boost/python/class.hpp	/^    struct virtual_function_default$/;"	s	namespace:boost::python::detail::error
boost::python::detail::error::virtual_function_default::must_be_derived_class_member	/usr/include/boost/python/class.hpp	/^        must_be_derived_class_member(Default const&)$/;"	f	struct:boost::python::detail::error::virtual_function_default	access:public	signature:(Default const&)
boost::python::detail::exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^struct BOOST_PYTHON_DECL exception_handler$/;"	s	namespace:boost::python::detail
boost::python::detail::exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^struct BOOST_PYTHON_DECL_FORWARD exception_handler;$/;"	m	namespace:boost::python::detail	typeref:struct:boost::python::detail::BOOST_PYTHON_DECL_FORWARD
boost::python::detail::exception_handler::chain	/usr/include/boost/python/detail/exception_handler.hpp	/^    static exception_handler* chain;$/;"	m	struct:boost::python::detail::exception_handler	access:public
boost::python::detail::exception_handler::exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^    explicit exception_handler(handler_function const& impl);$/;"	p	struct:boost::python::detail::exception_handler	access:public	signature:(handler_function const& impl)
boost::python::detail::exception_handler::handle	/usr/include/boost/python/detail/exception_handler.hpp	/^    inline bool handle(function0<void> const& f) const;$/;"	p	struct:boost::python::detail::exception_handler	access:public	signature:(function0<void> const& f) const
boost::python::detail::exception_handler::handle	/usr/include/boost/python/detail/exception_handler.hpp	/^inline bool exception_handler::handle(function0<void> const& f) const$/;"	f	class:boost::python::detail::exception_handler	signature:(function0<void> const& f) const
boost::python::detail::exception_handler::m_impl	/usr/include/boost/python/detail/exception_handler.hpp	/^    handler_function m_impl;$/;"	m	struct:boost::python::detail::exception_handler	access:private
boost::python::detail::exception_handler::m_next	/usr/include/boost/python/detail/exception_handler.hpp	/^    exception_handler* m_next;$/;"	m	struct:boost::python::detail::exception_handler	access:private
boost::python::detail::exception_handler::operator ()	/usr/include/boost/python/detail/exception_handler.hpp	/^    bool operator()(function0<void> const& f) const;$/;"	p	struct:boost::python::detail::exception_handler	access:public	signature:(function0<void> const& f) const
boost::python::detail::exception_handler::tail	/usr/include/boost/python/detail/exception_handler.hpp	/^    static exception_handler* tail;$/;"	m	struct:boost::python::detail::exception_handler	access:private
boost::python::detail::extractor_type_id	/usr/include/boost/python/lvalue_from_pytype.hpp	/^  inline type_info extractor_type_id(T&(*)(U))$/;"	f	namespace:boost::python::detail	signature:(T&(*)(U))
boost::python::detail::final_map_derived_policies	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        class final_map_derived_policies$/;"	c	namespace:boost::python::detail	inherits:map_indexing_suite
boost::python::detail::final_vector_derived_policies	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        class final_vector_derived_policies $/;"	c	namespace:boost::python::detail	inherits:vector_indexing_suite
boost::python::detail::force_instantiate	/usr/include/boost/python/detail/force_instantiate.hpp	/^inline void force_instantiate(T const&) {}$/;"	f	namespace:boost::python::detail	signature:(T const&)
boost::python::detail::function_ptr	/usr/include/boost/python/detail/referent_storage.hpp	/^typedef void (*function_ptr)();$/;"	t	namespace:boost::python::detail
boost::python::detail::gcc_demangle	/usr/include/boost/python/type_id.hpp	/^  BOOST_PYTHON_DECL char const* gcc_demangle(char const*);$/;"	p	namespace:boost::python::detail	signature:(char const*)
boost::python::detail::get	/usr/include/boost/python/detail/caller.hpp	/^inline PyObject* get(mpl::int_<N>, PyObject* const& args_)$/;"	f	namespace:boost::python::detail	signature:(mpl::int_<N>, PyObject* const& args_)
boost::python::detail::get	/usr/include/boost/python/make_constructor.hpp	/^  inline PyObject* get(mpl::int_<N>, offset_args<BaseArgs,Offset> const& args_)$/;"	f	namespace:boost::python::detail	signature:(mpl::int_<N>, offset_args<BaseArgs,Offset> const& args_)
boost::python::detail::get_prev	/usr/include/boost/python/with_custodian_and_ward.hpp	/^  struct get_prev$/;"	s	namespace:boost::python::detail
boost::python::detail::get_prev	/usr/include/boost/python/with_custodian_and_ward.hpp	/^  struct get_prev<0>$/;"	s	namespace:boost::python::detail
boost::python::detail::get_prev::execute	/usr/include/boost/python/with_custodian_and_ward.hpp	/^      static PyObject* execute(ArgumentPackage const& args, PyObject* = 0)$/;"	f	struct:boost::python::detail::get_prev	access:public	signature:(ArgumentPackage const& args, PyObject* = 0)
boost::python::detail::get_prev::execute	/usr/include/boost/python/with_custodian_and_ward.hpp	/^      static PyObject* execute(ArgumentPackage const&, PyObject* zeroth)$/;"	f	struct:boost::python::detail::get_prev	access:public	signature:(ArgumentPackage const&, PyObject* zeroth)
boost::python::detail::handler_function	/usr/include/boost/python/detail/exception_handler.hpp	/^typedef function2<bool, exception_handler const&, function0<void> const&> handler_function;$/;"	t	namespace:boost::python::detail
boost::python::detail::if_	/usr/include/boost/python/detail/if_else.hpp	/^struct if_<false>$/;"	s	namespace:boost::python::detail
boost::python::detail::if_	/usr/include/boost/python/detail/if_else.hpp	/^template <bool b> struct if_$/;"	s	namespace:boost::python::detail
boost::python::detail::if_::then	/usr/include/boost/python/detail/if_else.hpp	/^    struct then : if_selected<T>$/;"	s	struct:boost::python::detail::if_	inherits:if_selected	access:public
boost::python::detail::if_::then	/usr/include/boost/python/detail/if_else.hpp	/^    struct then : if_unselected$/;"	s	struct:boost::python::detail::if_	inherits:if_unselected	access:public
boost::python::detail::if_selected	/usr/include/boost/python/detail/if_else.hpp	/^struct if_selected$/;"	s	namespace:boost::python::detail
boost::python::detail::if_selected::elif	/usr/include/boost/python/detail/if_else.hpp	/^    struct elif : elif_selected<T>$/;"	s	struct:boost::python::detail::if_selected	inherits:elif_selected	access:public
boost::python::detail::if_selected::else_	/usr/include/boost/python/detail/if_else.hpp	/^    struct else_$/;"	s	struct:boost::python::detail::if_selected	access:public
boost::python::detail::if_selected::else_::type	/usr/include/boost/python/detail/if_else.hpp	/^        typedef T type;$/;"	t	struct:boost::python::detail::if_selected::else_	access:public
boost::python::detail::if_unselected	/usr/include/boost/python/detail/if_else.hpp	/^struct if_unselected$/;"	s	namespace:boost::python::detail
boost::python::detail::if_unselected::elif	/usr/include/boost/python/detail/if_else.hpp	/^    template <bool b> struct elif : if_<b>$/;"	s	struct:boost::python::detail::if_unselected	inherits:if_	access:public
boost::python::detail::if_unselected::else_	/usr/include/boost/python/detail/if_else.hpp	/^    struct else_$/;"	s	struct:boost::python::detail::if_unselected	access:public
boost::python::detail::if_unselected::else_::type	/usr/include/boost/python/detail/if_else.hpp	/^        typedef U type;$/;"	t	struct:boost::python::detail::if_unselected::else_	access:public
boost::python::detail::init_module	/usr/include/boost/python/module_init.hpp	/^BOOST_PYTHON_DECL PyObject* init_module(PyModuleDef&, void(*)());$/;"	p	namespace:boost::python::detail	signature:(PyModuleDef&, void(*)())
boost::python::detail::initialize_wrapper	/usr/include/boost/python/detail/wrapper_base.hpp	/^  inline void initialize_wrapper(PyObject* \/*self*\/, ...) {}$/;"	f	namespace:boost::python::detail	signature:(PyObject* , ...)
boost::python::detail::initialize_wrapper	/usr/include/boost/python/detail/wrapper_base.hpp	/^  inline void initialize_wrapper(PyObject* self, wrapper_base* w)$/;"	f	namespace:boost::python::detail	signature:(PyObject* self, wrapper_base* w)
boost::python::detail::install_holder	/usr/include/boost/python/make_constructor.hpp	/^  struct install_holder : converter::context_result_converter$/;"	s	namespace:boost::python::detail	inherits:converter::context_result_converter
boost::python::detail::install_holder::dispatch	/usr/include/boost/python/make_constructor.hpp	/^      void dispatch(Ptr x, mpl::false_) const$/;"	f	struct:boost::python::detail::install_holder	access:private	signature:(Ptr x, mpl::false_) const
boost::python::detail::install_holder::dispatch	/usr/include/boost/python/make_constructor.hpp	/^      void dispatch(U* x, mpl::true_) const$/;"	f	struct:boost::python::detail::install_holder	access:private	signature:(U* x, mpl::true_) const
boost::python::detail::install_holder::install_holder	/usr/include/boost/python/make_constructor.hpp	/^      install_holder(PyObject* args_)$/;"	f	struct:boost::python::detail::install_holder	access:public	signature:(PyObject* args_)
boost::python::detail::install_holder::m_self	/usr/include/boost/python/make_constructor.hpp	/^      PyObject* m_self;$/;"	m	struct:boost::python::detail::install_holder	access:private
boost::python::detail::install_holder::operator ()	/usr/include/boost/python/make_constructor.hpp	/^      PyObject* operator()(T x) const$/;"	f	struct:boost::python::detail::install_holder	access:public	signature:(T x) const
boost::python::detail::invoke_tag	/usr/include/boost/python/detail/invoke.hpp	/^struct invoke_tag$/;"	s	namespace:boost::python::detail	inherits:invoke_tag_
boost::python::detail::invoke_tag_	/usr/include/boost/python/detail/invoke.hpp	/^struct invoke_tag_ {};$/;"	s	namespace:boost::python::detail
boost::python::detail::is_back_reference_test	/usr/include/boost/python/back_reference.hpp	/^  no_back_reference_t is_back_reference_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
boost::python::detail::is_back_reference_test	/usr/include/boost/python/back_reference.hpp	/^  yes_back_reference_t is_back_reference_test(boost::type< back_reference<T> >);$/;"	p	namespace:boost::python::detail	signature:(boost::type< back_reference<T> >)
boost::python::detail::is_borrowed	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed$/;"	s	namespace:boost::python::detail
boost::python::detail::is_borrowed	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed<borrowed<T> >$/;"	s	namespace:boost::python::detail
boost::python::detail::is_borrowed::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false);$/;"	p	struct:boost::python::detail::is_borrowed	access:public	signature:(bool, value = false)
boost::python::detail::is_borrowed::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	struct:boost::python::detail::is_borrowed	access:public	signature:(bool, value = true)
boost::python::detail::is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^class is_borrowed_ptr$/;"	c	namespace:boost::python::detail
boost::python::detail::is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr$/;"	s	namespace:boost::python::detail
boost::python::detail::is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<T*>$/;"	s	namespace:boost::python::detail	inherits:is_borrowed
boost::python::detail::is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T> const volatile*>$/;"	s	namespace:boost::python::detail
boost::python::detail::is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T> const*>$/;"	s	namespace:boost::python::detail
boost::python::detail::is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T> volatile*>$/;"	s	namespace:boost::python::detail
boost::python::detail::is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T>*>$/;"	s	namespace:boost::python::detail
boost::python::detail::is_borrowed_ptr::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::detail::is_borrowed_ptr	access:public	signature:( bool, value = ( sizeof(detail::is_borrowed_ptr_test(is_borrowed_ptr_test1(boost::type<T>()))) == sizeof(detail::yes_borrowed_ptr_t)))
boost::python::detail::is_borrowed_ptr::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	struct:boost::python::detail::is_borrowed_ptr	access:public	signature:(bool, value = false)
boost::python::detail::is_borrowed_ptr::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	struct:boost::python::detail::is_borrowed_ptr	access:public	signature:(bool, value = true)
boost::python::detail::is_borrowed_ptr_test	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^no_borrowed_ptr_t is_borrowed_ptr_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
boost::python::detail::is_borrowed_ptr_test	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^yes_borrowed_ptr_t is_borrowed_ptr_test(borrowed<T> const volatile*);$/;"	p	namespace:boost::python::detail	signature:(borrowed<T> const volatile*)
boost::python::detail::is_borrowed_ptr_test1	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^is_borrowed_ptr_test1(boost::type<T>);$/;"	p	namespace:boost::python::detail	signature:(boost::type<T>)
boost::python::detail::is_data_member_pointer	/usr/include/boost/python/class.hpp	/^  struct is_data_member_pointer$/;"	s	namespace:boost::python::detail	inherits:mpl::and_
boost::python::detail::is_handle_test	/usr/include/boost/python/handle.hpp	/^  no_handle_t is_handle_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
boost::python::detail::is_handle_test	/usr/include/boost/python/handle.hpp	/^  yes_handle_t is_handle_test(boost::type< handle<T> >);$/;"	p	namespace:boost::python::detail	signature:(boost::type< handle<T> >)
boost::python::detail::is_keywords	/usr/include/boost/python/args.hpp	/^  struct is_keywords$/;"	s	namespace:boost::python::detail
boost::python::detail::is_keywords	/usr/include/boost/python/args.hpp	/^  struct is_keywords<keywords<nkeywords> >$/;"	s	namespace:boost::python::detail
boost::python::detail::is_keywords::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	struct:boost::python::detail::is_keywords	access:public	signature:(bool, value = false)
boost::python::detail::is_keywords::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	struct:boost::python::detail::is_keywords	access:public	signature:(bool, value = true)
boost::python::detail::is_keywords_test	/usr/include/boost/python/args.hpp	/^  no_keywords_t is_keywords_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
boost::python::detail::is_keywords_test	/usr/include/boost/python/args.hpp	/^  yes_keywords_t is_keywords_test(void (*)(keywords<nkeywords> const&));$/;"	p	namespace:boost::python::detail	signature:(void (*)(keywords<nkeywords> const&))
boost::python::detail::is_keywords_test	/usr/include/boost/python/args.hpp	/^  yes_keywords_t is_keywords_test(void (*)(keywords<nkeywords>&));$/;"	p	namespace:boost::python::detail	signature:(void (*)(keywords<nkeywords>&))
boost::python::detail::is_list_arg	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct is_list_arg$/;"	s	namespace:boost::python::detail
boost::python::detail::is_list_arg	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct is_list_arg<mpl::void_>$/;"	s	namespace:boost::python::detail
boost::python::detail::is_list_arg::value	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    enum { value = false };$/;"	e	enum:boost::python::detail::is_list_arg::__anon4
boost::python::detail::is_list_arg::value	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    enum { value = true };$/;"	e	enum:boost::python::detail::is_list_arg::__anon3
boost::python::detail::is_not_wrapper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  typedef char (&is_not_wrapper)[2];$/;"	t	namespace:boost::python::detail
boost::python::detail::is_optional	/usr/include/boost/python/init.hpp	/^    struct is_optional {$/;"	s	namespace:boost::python::detail
boost::python::detail::is_optional::BOOST_STATIC_CONSTANT	/usr/include/boost/python/init.hpp	/^        BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::detail::is_optional	access:public	signature:( bool, value = sizeof(f(t())) == sizeof(::boost::type_traits::yes_type))
boost::python::detail::is_optional::f	/usr/include/boost/python/init.hpp	/^        static boost::type_traits::no_type f(...);$/;"	p	struct:boost::python::detail::is_optional	access:private	signature:(....)
boost::python::detail::is_optional::f	/usr/include/boost/python/init.hpp	/^        static boost::type_traits::yes_type f(optional<BOOST_PYTHON_OVERLOAD_ARGS>);$/;"	p	struct:boost::python::detail::is_optional	access:private	signature:(optional<BOOST_PYTHON_OVERLOAD_ARGS>)
boost::python::detail::is_optional::t	/usr/include/boost/python/init.hpp	/^        static T t();$/;"	p	struct:boost::python::detail::is_optional	access:private	signature:()
boost::python::detail::is_optional::type	/usr/include/boost/python/init.hpp	/^        typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::detail::is_optional	access:public
boost::python::detail::is_other	/usr/include/boost/python/other.hpp	/^  class is_other$/;"	c	namespace:boost::python::detail
boost::python::detail::is_other	/usr/include/boost/python/other.hpp	/^  class is_other<other<T> >$/;"	c	namespace:boost::python::detail
boost::python::detail::is_other::BOOST_STATIC_CONSTANT	/usr/include/boost/python/other.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	class:boost::python::detail::is_other	access:public	signature:(bool, value = false)
boost::python::detail::is_other::BOOST_STATIC_CONSTANT	/usr/include/boost/python/other.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	class:boost::python::detail::is_other	access:public	signature:(bool, value = true)
boost::python::detail::is_pointer_wrapper_test	/usr/include/boost/python/ptr.hpp	/^  no_pointer_wrapper_t is_pointer_wrapper_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
boost::python::detail::is_pointer_wrapper_test	/usr/include/boost/python/ptr.hpp	/^  yes_pointer_wrapper_t is_pointer_wrapper_test(boost::type< pointer_wrapper<T> >);$/;"	p	namespace:boost::python::detail	signature:(boost::type< pointer_wrapper<T> >)
boost::python::detail::is_ref_tester1	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline char BOOST_TT_DECL is_ref_tester1(...) { return 0; }$/;"	f	namespace:boost::python::detail	signature:(....)
boost::python::detail::is_ref_tester1	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^template< typename T > T&(* is_ref_tester1(type<T>) )(type<T>) { return 0; }$/;"	f	namespace:boost::python::detail	signature:(type<T>)
boost::python::detail::is_reference_to_keywords	/usr/include/boost/python/args.hpp	/^  class is_reference_to_keywords$/;"	c	namespace:boost::python::detail
boost::python::detail::is_reference_to_keywords	/usr/include/boost/python/args.hpp	/^  struct is_reference_to_keywords$/;"	s	namespace:boost::python::detail
boost::python::detail::is_reference_to_keywords::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::detail::is_reference_to_keywords	access:public	signature:( bool, value = ( sizeof(detail::is_keywords_test( (void (*)(T))0 )) == sizeof(detail::yes_keywords_t)))
boost::python::detail::is_reference_to_keywords::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_key = is_keywords<key_t>::value);$/;"	p	struct:boost::python::detail::is_reference_to_keywords	access:public	signature:(bool, is_key = is_keywords<key_t>::value)
boost::python::detail::is_reference_to_keywords::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, is_ref = is_reference<T>::value);$/;"	p	struct:boost::python::detail::is_reference_to_keywords	access:public	signature:(bool, is_ref = is_reference<T>::value)
boost::python::detail::is_reference_to_keywords::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(bool, value = (is_ref & is_key));$/;"	p	struct:boost::python::detail::is_reference_to_keywords	access:public	signature:(bool, value = (is_ref & is_key))
boost::python::detail::is_reference_to_keywords::deref	/usr/include/boost/python/args.hpp	/^      typedef typename remove_reference<T>::type deref;$/;"	t	struct:boost::python::detail::is_reference_to_keywords	access:public
boost::python::detail::is_reference_to_keywords::key_t	/usr/include/boost/python/args.hpp	/^      typedef typename remove_cv<deref>::type key_t;$/;"	t	struct:boost::python::detail::is_reference_to_keywords	access:public
boost::python::detail::is_reference_to_keywords::type	/usr/include/boost/python/args.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	class:boost::python::detail::is_reference_to_keywords	access:public
boost::python::detail::is_reference_to_keywords::type	/usr/include/boost/python/args.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::detail::is_reference_to_keywords	access:public
boost::python::detail::is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal : mpl::false_$/;"	s	namespace:boost::python::detail	inherits:mpl::false_
boost::python::detail::is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal<T[n]>$/;"	s	namespace:boost::python::detail	inherits:is_same
boost::python::detail::is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal<char const[n]> : mpl::true_$/;"	s	namespace:boost::python::detail	inherits:mpl::true_
boost::python::detail::is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal<char* const> : mpl::true_$/;"	s	namespace:boost::python::detail	inherits:mpl::true_
boost::python::detail::is_wrapper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  struct is_wrapper$/;"	s	namespace:boost::python::detail	inherits:mpl::bool_
boost::python::detail::is_wrapper_helper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  char is_wrapper_helper(wrapper<T> const volatile*);$/;"	p	namespace:boost::python::detail	signature:(wrapper<T> const volatile*)
boost::python::detail::is_wrapper_helper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  is_not_wrapper is_wrapper_helper(...);$/;"	p	namespace:boost::python::detail	signature:(....)
boost::python::detail::iterators_impl	/usr/include/boost/python/iterator.hpp	/^  struct iterators_impl$/;"	s	namespace:boost::python::detail
boost::python::detail::iterators_impl	/usr/include/boost/python/iterator.hpp	/^  struct iterators_impl<true>$/;"	s	namespace:boost::python::detail
boost::python::detail::iterators_impl::apply	/usr/include/boost/python/iterator.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::iterators_impl	access:public
boost::python::detail::iterators_impl::apply::begin	/usr/include/boost/python/iterator.hpp	/^          static iterator begin(T& x) { return x.begin(); }$/;"	f	struct:boost::python::detail::iterators_impl::apply	access:public	signature:(T& x)
boost::python::detail::iterators_impl::apply::end	/usr/include/boost/python/iterator.hpp	/^          static iterator end(T& x) { return x.end(); }$/;"	f	struct:boost::python::detail::iterators_impl::apply	access:public	signature:(T& x)
boost::python::detail::iterators_impl::apply::iterator	/usr/include/boost/python/iterator.hpp	/^          typedef typename T::const_iterator iterator;$/;"	t	struct:boost::python::detail::iterators_impl::apply	access:public
boost::python::detail::iterators_impl::apply::iterator	/usr/include/boost/python/iterator.hpp	/^          typedef typename T::iterator iterator;$/;"	t	struct:boost::python::detail::iterators_impl::apply	access:public
boost::python::detail::keyword	/usr/include/boost/python/args_fwd.hpp	/^  struct keyword$/;"	s	namespace:boost::python::detail
boost::python::detail::keyword::default_value	/usr/include/boost/python/args_fwd.hpp	/^      handle<> default_value;$/;"	m	struct:boost::python::detail::keyword	access:public
boost::python::detail::keyword::keyword	/usr/include/boost/python/args_fwd.hpp	/^      keyword(char const* name_=0)$/;"	f	struct:boost::python::detail::keyword	access:public	signature:(char const* name_=0)
boost::python::detail::keyword::name	/usr/include/boost/python/args_fwd.hpp	/^      char const* name;$/;"	m	struct:boost::python::detail::keyword	access:public
boost::python::detail::keyword_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct keyword_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
boost::python::detail::keyword_range	/usr/include/boost/python/args_fwd.hpp	/^  typedef std::pair<keyword const*, keyword const*> keyword_range;$/;"	t	namespace:boost::python::detail
boost::python::detail::keywords	/usr/include/boost/python/args.hpp	/^  struct keywords : keywords_base<nkeywords>$/;"	s	namespace:boost::python::detail	inherits:keywords_base
boost::python::detail::keywords	/usr/include/boost/python/args.hpp	/^  struct keywords<1> : keywords_base<1>$/;"	s	namespace:boost::python::detail	inherits:keywords_base
boost::python::detail::keywords	/usr/include/boost/python/args_fwd.hpp	/^  struct keywords<0>$/;"	s	namespace:boost::python::detail
boost::python::detail::keywords::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args_fwd.hpp	/^      BOOST_STATIC_CONSTANT(std::size_t, size = 0);$/;"	p	struct:boost::python::detail::keywords	access:public	signature:(std::size_t, size = 0)
boost::python::detail::keywords::keywords	/usr/include/boost/python/args.hpp	/^      explicit keywords(char const *name)$/;"	f	struct:boost::python::detail::keywords	access:public	signature:(char const *name)
boost::python::detail::keywords::operator =	/usr/include/boost/python/args.hpp	/^      python::arg& operator=(T const& value)$/;"	f	struct:boost::python::detail::keywords	access:public	signature:(T const& value)
boost::python::detail::keywords::operator detail::keyword const&	/usr/include/boost/python/args.hpp	/^      operator detail::keyword const&() const$/;"	f	struct:boost::python::detail::keywords	access:public	signature:() const
boost::python::detail::keywords::range	/usr/include/boost/python/args_fwd.hpp	/^      static keyword_range range() { return keyword_range(); }$/;"	f	struct:boost::python::detail::keywords	access:public	signature:()
boost::python::detail::keywords_base	/usr/include/boost/python/args.hpp	/^  struct keywords_base$/;"	s	namespace:boost::python::detail
boost::python::detail::keywords_base::BOOST_STATIC_CONSTANT	/usr/include/boost/python/args.hpp	/^      BOOST_STATIC_CONSTANT(std::size_t, size = nkeywords);$/;"	p	struct:boost::python::detail::keywords_base	access:public	signature:(std::size_t, size = nkeywords)
boost::python::detail::keywords_base::elements	/usr/include/boost/python/args.hpp	/^      keyword elements[nkeywords];$/;"	m	struct:boost::python::detail::keywords_base	access:public
boost::python::detail::keywords_base::operator ,	/usr/include/boost/python/args.hpp	/^      operator,(char const *name) const;$/;"	p	struct:boost::python::detail::keywords_base	access:public	signature:(char const *name) const
boost::python::detail::keywords_base::operator ,	/usr/include/boost/python/args.hpp	/^      operator,(python::arg const &k) const;$/;"	p	struct:boost::python::detail::keywords_base	access:public	signature:(python::arg const &k) const
boost::python::detail::keywords_base::operator ,	/usr/include/boost/python/args.hpp	/^  keywords_base<nkeywords>::operator,(char const *name) const$/;"	f	class:boost::python::detail::keywords_base	signature:(char const *name) const
boost::python::detail::keywords_base::operator ,	/usr/include/boost/python/args.hpp	/^  keywords_base<nkeywords>::operator,(python::arg const &k) const$/;"	f	class:boost::python::detail::keywords_base	signature:(python::arg const &k) const
boost::python::detail::keywords_base::range	/usr/include/boost/python/args.hpp	/^      keyword_range range() const$/;"	f	struct:boost::python::detail::keywords_base	access:public	signature:() const
boost::python::detail::kwds_proxy	/usr/include/boost/python/object_core.hpp	/^class kwds_proxy : public call_proxy $/;"	c	namespace:boost::python::detail	inherits:call_proxy
boost::python::detail::kwds_proxy::kwds_proxy	/usr/include/boost/python/object_core.hpp	/^  kwds_proxy(object o = object()) : call_proxy(o) {} $/;"	f	class:boost::python::detail::kwds_proxy	access:public	signature:(object o = object())
boost::python::detail::list_base	/usr/include/boost/python/list.hpp	/^  struct BOOST_PYTHON_DECL list_base : object$/;"	s	namespace:boost::python::detail	inherits:object
boost::python::detail::list_base::append	/usr/include/boost/python/list.hpp	/^      void append(object_cref); \/\/ append object to end$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref)
boost::python::detail::list_base::call	/usr/include/boost/python/list.hpp	/^      static detail::new_non_null_reference call(object const&);$/;"	p	struct:boost::python::detail::list_base	access:private	signature:(object const&)
boost::python::detail::list_base::count	/usr/include/boost/python/list.hpp	/^      ssize_t count(object_cref value) const; \/\/ return number of occurrences of value$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref value) const
boost::python::detail::list_base::extend	/usr/include/boost/python/list.hpp	/^      void extend(object_cref sequence); \/\/ extend list by appending sequence elements$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref sequence)
boost::python::detail::list_base::index	/usr/include/boost/python/list.hpp	/^      long index(object_cref value) const; \/\/ return index of first occurrence of value$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref value) const
boost::python::detail::list_base::insert	/usr/include/boost/python/list.hpp	/^      void insert(object const& index, object_cref);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object const& index, object_cref)
boost::python::detail::list_base::insert	/usr/include/boost/python/list.hpp	/^      void insert(ssize_t index, object_cref); \/\/ insert object before index$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(ssize_t index, object_cref)
boost::python::detail::list_base::list_base	/usr/include/boost/python/list.hpp	/^      explicit list_base(object_cref sequence); \/\/ new list initialized from sequence's items$/;"	p	struct:boost::python::detail::list_base	access:protected	signature:(object_cref sequence)
boost::python::detail::list_base::list_base	/usr/include/boost/python/list.hpp	/^      list_base(); \/\/ new list$/;"	p	struct:boost::python::detail::list_base	access:protected	signature:()
boost::python::detail::list_base::pop	/usr/include/boost/python/list.hpp	/^      object pop(); \/\/ remove and return item at index (default last)$/;"	p	struct:boost::python::detail::list_base	access:public	signature:()
boost::python::detail::list_base::pop	/usr/include/boost/python/list.hpp	/^      object pop(object const& index);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object const& index)
boost::python::detail::list_base::pop	/usr/include/boost/python/list.hpp	/^      object pop(ssize_t index);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(ssize_t index)
boost::python::detail::list_base::remove	/usr/include/boost/python/list.hpp	/^      void remove(object_cref value); \/\/ remove first occurrence of value$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref value)
boost::python::detail::list_base::reverse	/usr/include/boost/python/list.hpp	/^      void reverse(); \/\/ reverse *IN PLACE*$/;"	p	struct:boost::python::detail::list_base	access:public	signature:()
boost::python::detail::list_base::sort	/usr/include/boost/python/list.hpp	/^      void sort(); \/\/  sort *IN PLACE*; if given, cmpfunc(x, y) -> -1, 0, 1$/;"	p	struct:boost::python::detail::list_base	access:public	signature:()
boost::python::detail::list_base::sort	/usr/include/boost/python/list.hpp	/^      void sort(args_proxy const &args, $/;"	p	struct:boost::python::detail::list_base	access:public	signature:(args_proxy const &args, kwds_proxy const &kwds)
boost::python::detail::list_base::sort	/usr/include/boost/python/list.hpp	/^      void sort(object_cref cmpfunc);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref cmpfunc)
boost::python::detail::long_base	/usr/include/boost/python/long.hpp	/^  struct BOOST_PYTHON_DECL long_base : object$/;"	s	namespace:boost::python::detail	inherits:object
boost::python::detail::long_base::call	/usr/include/boost/python/long.hpp	/^      static detail::new_non_null_reference call(object const&);$/;"	p	struct:boost::python::detail::long_base	access:private	signature:(object const&)
boost::python::detail::long_base::call	/usr/include/boost/python/long.hpp	/^      static detail::new_non_null_reference call(object const&, object const&);$/;"	p	struct:boost::python::detail::long_base	access:private	signature:(object const&, object const&)
boost::python::detail::long_base::long_base	/usr/include/boost/python/long.hpp	/^      explicit long_base(object_cref rhs);$/;"	p	struct:boost::python::detail::long_base	access:protected	signature:(object_cref rhs)
boost::python::detail::long_base::long_base	/usr/include/boost/python/long.hpp	/^      explicit long_base(object_cref rhs, object_cref base);$/;"	p	struct:boost::python::detail::long_base	access:protected	signature:(object_cref rhs, object_cref base)
boost::python::detail::long_base::long_base	/usr/include/boost/python/long.hpp	/^      long_base(); \/\/ new long_$/;"	p	struct:boost::python::detail::long_base	access:protected	signature:()
boost::python::detail::make_constructor_aux	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& )
boost::python::detail::make_constructor_aux	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& , detail::keyword_range const& kw , NumKeywords )
boost::python::detail::make_constructor_dispatch	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_dispatch(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)
boost::python::detail::make_constructor_dispatch	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_dispatch(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)
boost::python::detail::make_function1	/usr/include/boost/python/def.hpp	/^  object make_function1(T fn, ...) { return make_function(fn); }$/;"	f	namespace:boost::python::detail	signature:(T fn, ...)
boost::python::detail::make_function1	/usr/include/boost/python/def.hpp	/^  object make_function1(object const& x, object const*) { return x; }$/;"	f	namespace:boost::python::detail	signature:(object const& x, object const*)
boost::python::detail::make_function_aux	/usr/include/boost/python/make_function.hpp	/^  object make_function_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& )
boost::python::detail::make_function_aux	/usr/include/boost/python/make_function.hpp	/^  object make_function_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& , detail::keyword_range const& kw , NumKeywords )
boost::python::detail::make_function_dispatch	/usr/include/boost/python/make_function.hpp	/^  object make_function_dispatch(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)
boost::python::detail::make_function_dispatch	/usr/include/boost/python/make_function.hpp	/^  object make_function_dispatch(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)
boost::python::detail::make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D C::*pm, Policies const& policies, mpl::true_, int)$/;"	f	namespace:boost::python::detail	signature:(D C::*pm, Policies const& policies, mpl::true_, int)
boost::python::detail::make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D C::*pm, not_specified, mpl::true_, long)$/;"	f	namespace:boost::python::detail	signature:(D C::*pm, not_specified, mpl::true_, long)
boost::python::detail::make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D& d, P& p, mpl::false_, ...)$/;"	f	namespace:boost::python::detail	signature:(D& d, P& p, mpl::false_, ...)
boost::python::detail::make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D& d, P& p, mpl::false_, ...);$/;"	p	namespace:boost::python::detail	signature:(D& d, P& p, mpl::false_, ...)
boost::python::detail::make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D* d, Policies const& policies, mpl::false_, int)$/;"	f	namespace:boost::python::detail	signature:(D* d, Policies const& policies, mpl::false_, int)
boost::python::detail::make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D* d, not_specified, mpl::false_, long)$/;"	f	namespace:boost::python::detail	signature:(D* d, not_specified, mpl::false_, long)
boost::python::detail::make_iterator	/usr/include/boost/python/iterator.hpp	/^  inline object make_iterator($/;"	f	namespace:boost::python::detail	signature:( Accessor1 get_start , Accessor2 get_finish , NextPolicies next_policies , Target&(*)() )
boost::python::detail::make_keyword_range_constructor	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^object make_keyword_range_constructor($/;"	f	namespace:boost::python::detail	signature:( CallPolicies const& policies , detail::keyword_range const& kw , Holder* = 0 , ArgList* = 0, Arity* = 0)
boost::python::detail::make_keyword_range_function	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^object make_keyword_range_function($/;"	f	namespace:boost::python::detail	signature:( F f , Policies const& policies , keyword_range const& kw , Signature const& sig)
boost::python::detail::make_keyword_range_function	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^object make_keyword_range_function($/;"	f	namespace:boost::python::detail	signature:( F f , Policies const& policies , keyword_range const& kw)
boost::python::detail::make_owning_holder	/usr/include/boost/python/to_python_indirect.hpp	/^  struct make_owning_holder$/;"	s	namespace:boost::python::detail
boost::python::detail::make_owning_holder::execute	/usr/include/boost/python/to_python_indirect.hpp	/^      static PyObject* execute(T* p)$/;"	f	struct:boost::python::detail::make_owning_holder	access:public	signature:(T* p)
boost::python::detail::make_raw_function	/usr/include/boost/python/raw_function.hpp	/^  object BOOST_PYTHON_DECL make_raw_function(objects::py_function);$/;"	p	namespace:boost::python::detail	signature:(objects::py_function)
boost::python::detail::make_reference_holder	/usr/include/boost/python/to_python_indirect.hpp	/^  struct make_reference_holder$/;"	s	namespace:boost::python::detail
boost::python::detail::make_reference_holder::execute	/usr/include/boost/python/to_python_indirect.hpp	/^      static PyObject* execute(T* p)$/;"	f	struct:boost::python::detail::make_reference_holder	access:public	signature:(T* p)
boost::python::detail::make_setter	/usr/include/boost/python/data_members.hpp	/^  inline object make_setter(D C::*pm, Policies const& policies, mpl::true_, int)$/;"	f	namespace:boost::python::detail	signature:(D C::*pm, Policies const& policies, mpl::true_, int)
boost::python::detail::make_setter	/usr/include/boost/python/data_members.hpp	/^  inline object make_setter(D& x, Policies const& policies, mpl::false_, ...)$/;"	f	namespace:boost::python::detail	signature:(D& x, Policies const& policies, mpl::false_, ...)
boost::python::detail::make_setter	/usr/include/boost/python/data_members.hpp	/^  inline object make_setter(D* p, Policies const& policies, mpl::false_, int)$/;"	f	namespace:boost::python::detail	signature:(D* p, Policies const& policies, mpl::false_, int)
boost::python::detail::manage_new_object_requires_a_pointer_return_type	/usr/include/boost/python/manage_new_object.hpp	/^  struct manage_new_object_requires_a_pointer_return_type$/;"	s	namespace:boost::python::detail
boost::python::detail::manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(T* p, ...)$/;"	f	namespace:boost::python::detail	signature:(T* p, ...)
boost::python::detail::manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(detail::borrowed<T>* p, long)$/;"	f	namespace:boost::python::detail	signature:(detail::borrowed<T>* p, long)
boost::python::detail::manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(detail::borrowed<null_ok<T> >* p, int)$/;"	f	namespace:boost::python::detail	signature:(detail::borrowed<null_ok<T> >* p, int)
boost::python::detail::manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(null_ok<T>* p, long)$/;"	f	namespace:boost::python::detail	signature:(null_ok<T>* p, long)
boost::python::detail::manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(null_ok<detail::borrowed<T> >* p, int)$/;"	f	namespace:boost::python::detail	signature:(null_ok<detail::borrowed<T> >* p, int)
boost::python::detail::map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^struct map_entry$/;"	s	namespace:boost::python::detail
boost::python::detail::map_entry::key	/usr/include/boost/python/detail/map_entry.hpp	/^    Key key;$/;"	m	struct:boost::python::detail::map_entry	access:public
boost::python::detail::map_entry::map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^    map_entry() {}$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:()
boost::python::detail::map_entry::map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^    map_entry(Key k) : key(k), value() {}$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:(Key k)
boost::python::detail::map_entry::map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^    map_entry(Key k, Value v) : key(k), value(v) {}$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:(Key k, Value v)
boost::python::detail::map_entry::operator <	/usr/include/boost/python/detail/map_entry.hpp	/^    bool operator<(map_entry const& rhs) const$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:(map_entry const& rhs) const
boost::python::detail::map_entry::value	/usr/include/boost/python/detail/map_entry.hpp	/^    Value value;$/;"	m	struct:boost::python::detail::map_entry	access:public
boost::python::detail::member	/usr/include/boost/python/data_members.hpp	/^  struct member$/;"	s	namespace:boost::python::detail
boost::python::detail::member::Class::m_which	/usr/include/boost/python/data_members.hpp	/^      Data Class::*m_which;$/;"	m	class:boost::python::detail::member::Class	access:private
boost::python::detail::member::member	/usr/include/boost/python/data_members.hpp	/^      member(Data Class::*which) : m_which(which) {}$/;"	f	struct:boost::python::detail::member	access:public	signature:(Data Class::*which)
boost::python::detail::member::operator ()	/usr/include/boost/python/data_members.hpp	/^      Data& operator()(Class& c) const$/;"	f	struct:boost::python::detail::member	access:public	signature:(Class& c) const
boost::python::detail::member::operator ()	/usr/include/boost/python/data_members.hpp	/^      void operator()(Class& c, typename value_arg<Data>::type d) const$/;"	f	struct:boost::python::detail::member	access:public	signature:(Class& c, typename value_arg<Data>::type d) const
boost::python::detail::member_function_ptr	/usr/include/boost/python/detail/referent_storage.hpp	/^typedef int (alignment_dummy::*member_function_ptr)();$/;"	t	namespace:boost::python::detail
boost::python::detail::member_ptr	/usr/include/boost/python/detail/referent_storage.hpp	/^typedef int (alignment_dummy::*member_ptr);$/;"	t	namespace:boost::python::detail
boost::python::detail::method_result	/usr/include/boost/python/override.hpp	/^  class method_result$/;"	c	namespace:boost::python::detail
boost::python::detail::method_result::as	/usr/include/boost/python/override.hpp	/^      T as(type<T>* = 0)$/;"	f	class:boost::python::detail::method_result	access:public	signature:(type<T>* = 0)
boost::python::detail::method_result::m_obj	/usr/include/boost/python/override.hpp	/^      mutable handle<> m_obj;$/;"	m	class:boost::python::detail::method_result	access:private
boost::python::detail::method_result::method_result	/usr/include/boost/python/override.hpp	/^      explicit method_result(PyObject* x)$/;"	f	class:boost::python::detail::method_result	access:private	signature:(PyObject* x)
boost::python::detail::method_result::operator T	/usr/include/boost/python/override.hpp	/^      operator T()$/;"	f	class:boost::python::detail::method_result	access:public	signature:()
boost::python::detail::method_result::operator T&	/usr/include/boost/python/override.hpp	/^      operator T&() const$/;"	f	class:boost::python::detail::method_result	access:public	signature:() const
boost::python::detail::method_result::operator T*	/usr/include/boost/python/override.hpp	/^      operator T*()$/;"	f	class:boost::python::detail::method_result	access:public	signature:()
boost::python::detail::method_result::unchecked	/usr/include/boost/python/override.hpp	/^      T unchecked(type<T>* = 0)$/;"	f	class:boost::python::detail::method_result	access:public	signature:(type<T>* = 0)
boost::python::detail::most_derived	/usr/include/boost/python/signature.hpp	/^struct most_derived$/;"	s	namespace:boost::python::detail
boost::python::detail::most_derived::type	/usr/include/boost/python/signature.hpp	/^    >::type type;$/;"	t	struct:boost::python::detail::most_derived	access:public
boost::python::detail::msvc70_aux	/usr/include/boost/python/detail/if_else.hpp	/^namespace msvc70_aux {$/;"	n	namespace:boost::python::detail
boost::python::detail::msvc70_aux::inherit_from	/usr/include/boost/python/detail/if_else.hpp	/^template< bool > struct inherit_from$/;"	s	namespace:boost::python::detail::msvc70_aux
boost::python::detail::msvc70_aux::inherit_from	/usr/include/boost/python/detail/if_else.hpp	/^template<> struct inherit_from<true>$/;"	s	namespace:boost::python::detail::msvc70_aux
boost::python::detail::msvc70_aux::inherit_from::result	/usr/include/boost/python/detail/if_else.hpp	/^    template< typename T > struct result$/;"	s	struct:boost::python::detail::msvc70_aux::inherit_from	access:public
boost::python::detail::msvc70_aux::inherit_from::result::type	/usr/include/boost/python/detail/if_else.hpp	/^        struct type {};$/;"	s	struct:boost::python::detail::msvc70_aux::inherit_from::result	access:public
boost::python::detail::msvc70_aux::inherit_from::result::type	/usr/include/boost/python/detail/if_else.hpp	/^        typedef T type;$/;"	t	struct:boost::python::detail::msvc70_aux::inherit_from::result	access:public
boost::python::detail::msvc70_aux::never_true	/usr/include/boost/python/detail/if_else.hpp	/^struct never_true$/;"	s	namespace:boost::python::detail::msvc70_aux
boost::python::detail::msvc70_aux::never_true::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/if_else.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false);$/;"	p	struct:boost::python::detail::msvc70_aux::never_true	access:public	signature:(bool, value = false)
boost::python::detail::msvc_typeid	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo msvc_typeid(boost::type<T>*)$/;"	f	namespace:boost::python::detail	signature:(boost::type<T>*)
boost::python::detail::msvc_typeid	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo msvc_typeid<void>(boost::type<void>*)$/;"	f	namespace:boost::python::detail	signature:(boost::type<void>*)
boost::python::detail::name_space_def	/usr/include/boost/python/detail/defaults_def.hpp	/^  static void name_space_def($/;"	f	namespace:boost::python::detail	signature:( NameSpaceT& name_space , char const* name , Func f , keyword_range const& kw , CallPolicies const& policies , char const* doc , module* )
boost::python::detail::name_space_def	/usr/include/boost/python/detail/defaults_def.hpp	/^  static void name_space_def($/;"	f	namespace:boost::python::detail	signature:( NameSpaceT& name_space , char const* name , Func f , keyword_range const& kw , CallPolicies const& policies , char const* doc , objects::class_base* )
boost::python::detail::name_space_def	/usr/include/boost/python/detail/defaults_def.hpp	/^  static void name_space_def($/;"	f	namespace:boost::python::detail	signature:( object& name_space , char const* name , Func f , keyword_range const& kw , CallPolicies const& policies , char const* doc , ... )
boost::python::detail::new_non_null_reference	/usr/include/boost/python/detail/raw_pyobject.hpp	/^typedef new_non_null_reference_t* new_non_null_reference;$/;"	t	namespace:boost::python::detail
boost::python::detail::new_reference	/usr/include/boost/python/detail/raw_pyobject.hpp	/^typedef new_reference_t* new_reference;$/;"	t	namespace:boost::python::detail
boost::python::detail::no_back_reference_t	/usr/include/boost/python/back_reference.hpp	/^  typedef char (&no_back_reference_t)[2];$/;"	t	namespace:boost::python::detail
boost::python::detail::no_borrowed_ptr_t	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^typedef char (&no_borrowed_ptr_t)[2];$/;"	t	namespace:boost::python::detail
boost::python::detail::no_convertible	/usr/include/boost/python/detail/convertible.hpp	/^typedef int* no_convertible;$/;"	t	namespace:boost::python::detail
boost::python::detail::no_handle_t	/usr/include/boost/python/handle.hpp	/^  typedef char (&no_handle_t)[2];$/;"	t	namespace:boost::python::detail
boost::python::detail::no_keywords_t	/usr/include/boost/python/args.hpp	/^  typedef char (&no_keywords_t)[2];$/;"	t	namespace:boost::python::detail
boost::python::detail::no_pointer_wrapper_t	/usr/include/boost/python/ptr.hpp	/^  typedef char (&no_pointer_wrapper_t)[2];$/;"	t	namespace:boost::python::detail
boost::python::detail::no_proxy_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct no_proxy_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::no_proxy_helper::base_erase_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_index($/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:( Container& , Index , NoSlice )
boost::python::detail::no_proxy_helper::base_erase_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_indexes(Container& \/*container*\/, Index \/*from*\/, Index \/*to*\/)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(Container& , Index , Index )
boost::python::detail::no_proxy_helper::base_get_item_	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_(back_reference<Container&> const& container, PyObject* i)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(back_reference<Container&> const& container, PyObject* i)
boost::python::detail::no_proxy_helper::base_get_item_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_helper(DataType const& p, mpl::true_)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(DataType const& p, mpl::true_)
boost::python::detail::no_proxy_helper::base_get_item_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_helper(DataType const& x, mpl::false_)$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:(DataType const& x, mpl::false_)
boost::python::detail::no_proxy_helper::base_replace_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_replace_indexes($/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:( Container& , Index , Index , Index )
boost::python::detail::no_proxy_helper::register_container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        register_container_element()$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:()
boost::python::detail::no_slice_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct no_slice_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::no_slice_helper::base_delete_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_delete_slice(Container& \/*container*\/, PySliceObject* \/*slice*\/)$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:(Container& , PySliceObject* )
boost::python::detail::no_slice_helper::base_get_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_slice(Container& \/*container*\/, PySliceObject* \/*slice*\/)$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:(Container& , PySliceObject* )
boost::python::detail::no_slice_helper::base_set_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_set_slice(Container& \/*container*\/, PySliceObject* \/*slice*\/, PyObject* \/*v*\/)$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:(Container& , PySliceObject* , PyObject* )
boost::python::detail::no_slice_helper::slicing_not_suported	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        slicing_not_suported()$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:()
boost::python::detail::none	/usr/include/boost/python/detail/none.hpp	/^inline PyObject* none() { Py_INCREF(Py_None); return Py_None; }$/;"	f	namespace:boost::python::detail	signature:()
boost::python::detail::normalize	/usr/include/boost/python/lvalue_from_pytype.hpp	/^  normalize(T(*)(U), Extractor* = 0)$/;"	f	namespace:boost::python::detail	signature:(T()U), Extractor* = 0)
boost::python::detail::normalized_extractor	/usr/include/boost/python/lvalue_from_pytype.hpp	/^  struct normalized_extractor$/;"	s	namespace:boost::python::detail
boost::python::detail::normalized_extractor::execute	/usr/include/boost/python/lvalue_from_pytype.hpp	/^      static inline void* execute(PyObject* op)$/;"	f	struct:boost::python::detail::normalized_extractor	access:public	signature:(PyObject* op)
boost::python::detail::not_specified	/usr/include/boost/python/detail/not_specified.hpp	/^  struct not_specified {};$/;"	s	namespace:boost::python::detail
boost::python::detail::nullary_function_adaptor	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^struct nullary_function_adaptor$/;"	s	namespace:boost::python::detail
boost::python::detail::nullary_function_adaptor::m_fn	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^    NullaryFunction m_fn;$/;"	m	struct:boost::python::detail::nullary_function_adaptor	access:private
boost::python::detail::nullary_function_adaptor::nullary_function_adaptor	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^    nullary_function_adaptor(NullaryFunction fn)$/;"	f	struct:boost::python::detail::nullary_function_adaptor	access:public	signature:(NullaryFunction fn)
boost::python::detail::nullary_function_adaptor::operator ()	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^    void operator()() const { m_fn(); }$/;"	f	struct:boost::python::detail::nullary_function_adaptor	access:public	signature:() const
boost::python::detail::object_manager_get_pytype	/usr/include/boost/python/to_python_value.hpp	/^struct object_manager_get_pytype$/;"	s	namespace:boost::python::detail
boost::python::detail::object_manager_get_pytype	/usr/include/boost/python/to_python_value.hpp	/^struct object_manager_get_pytype<true>$/;"	s	namespace:boost::python::detail
boost::python::detail::object_manager_get_pytype::get	/usr/include/boost/python/to_python_value.hpp	/^   static PyTypeObject const* get( U const& (*)() =0)$/;"	f	struct:boost::python::detail::object_manager_get_pytype	access:public	signature:( U const& (*)() =0)
boost::python::detail::object_manager_get_pytype::get	/usr/include/boost/python/to_python_value.hpp	/^   static PyTypeObject const* get( U& (*)() =0)$/;"	f	struct:boost::python::detail::object_manager_get_pytype	access:public	signature:( U& (*)() =0)
boost::python::detail::object_manager_to_python_value	/usr/include/boost/python/to_python_value.hpp	/^  struct object_manager_to_python_value$/;"	s	namespace:boost::python::detail
boost::python::detail::object_manager_to_python_value::BOOST_STATIC_CONSTANT	/usr/include/boost/python/to_python_value.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = false);$/;"	p	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(bool, uses_registry = false)
boost::python::detail::object_manager_to_python_value::argument_type	/usr/include/boost/python/to_python_value.hpp	/^      typedef typename value_arg<T>::type argument_type;$/;"	t	struct:boost::python::detail::object_manager_to_python_value	access:public
boost::python::detail::object_manager_to_python_value::get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype() const {$/;"	f	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:() const
boost::python::detail::object_manager_to_python_value::get_pytype_aux	/usr/include/boost/python/to_python_value.hpp	/^      inline static PyTypeObject const* get_pytype_aux(mpl::false_* ) $/;"	f	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(mpl::false_* )
boost::python::detail::object_manager_to_python_value::get_pytype_aux	/usr/include/boost/python/to_python_value.hpp	/^      inline static PyTypeObject const* get_pytype_aux(mpl::true_*) {return converter::object_manager_traits<T>::get_pytype();}$/;"	f	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(mpl::true_*)
boost::python::detail::object_manager_to_python_value::is_t_const	/usr/include/boost/python/to_python_value.hpp	/^      typedef boost::detail::indirect_traits::is_reference_to_const<T> is_t_const;$/;"	t	struct:boost::python::detail::object_manager_to_python_value	access:public
boost::python::detail::object_manager_to_python_value::is_t_handle	/usr/include/boost/python/to_python_value.hpp	/^      typedef boost::mpl::bool_<is_handle<T>::value> is_t_handle;$/;"	t	struct:boost::python::detail::object_manager_to_python_value	access:public
boost::python::detail::object_manager_to_python_value::operator ()	/usr/include/boost/python/to_python_value.hpp	/^      PyObject* operator()(argument_type) const;$/;"	p	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(argument_type) const
boost::python::detail::object_manager_to_python_value::operator ()	/usr/include/boost/python/to_python_value.hpp	/^  inline PyObject* object_manager_to_python_value<T>::operator()(argument_type x) const$/;"	f	class:boost::python::detail::object_manager_to_python_value	signature:(argument_type x) const
boost::python::detail::offset_args	/usr/include/boost/python/make_constructor.hpp	/^  struct offset_args$/;"	s	namespace:boost::python::detail
boost::python::detail::offset_args::base	/usr/include/boost/python/make_constructor.hpp	/^      BaseArgs base;$/;"	m	struct:boost::python::detail::offset_args	access:public
boost::python::detail::offset_args::offset_args	/usr/include/boost/python/make_constructor.hpp	/^      offset_args(BaseArgs base_) : base(base_) {}$/;"	f	struct:boost::python::detail::offset_args	access:public	signature:(BaseArgs base_)
boost::python::detail::op_abs	/usr/include/boost/python/detail/operator_id.hpp	/^    op_abs, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_add	/usr/include/boost/python/detail/operator_id.hpp	/^    op_add, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_and	/usr/include/boost/python/detail/operator_id.hpp	/^    op_and, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_bool	/usr/include/boost/python/detail/operator_id.hpp	/^    op_bool,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_cmp	/usr/include/boost/python/detail/operator_id.hpp	/^    op_cmp,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_complex	/usr/include/boost/python/detail/operator_id.hpp	/^    op_complex,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_div	/usr/include/boost/python/detail/operator_id.hpp	/^    op_div, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_divmod	/usr/include/boost/python/detail/operator_id.hpp	/^    op_divmod,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_eq	/usr/include/boost/python/detail/operator_id.hpp	/^    op_eq,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_float	/usr/include/boost/python/detail/operator_id.hpp	/^    op_float, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_ge	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ge,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_gt	/usr/include/boost/python/detail/operator_id.hpp	/^    op_gt,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_iadd	/usr/include/boost/python/detail/operator_id.hpp	/^    op_iadd,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_iand	/usr/include/boost/python/detail/operator_id.hpp	/^    op_iand,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_idiv	/usr/include/boost/python/detail/operator_id.hpp	/^    op_idiv,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_ilshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ilshift,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_imod	/usr/include/boost/python/detail/operator_id.hpp	/^    op_imod,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_imul	/usr/include/boost/python/detail/operator_id.hpp	/^    op_imul,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_int	/usr/include/boost/python/detail/operator_id.hpp	/^    op_int, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_invert	/usr/include/boost/python/detail/operator_id.hpp	/^    op_invert, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_ior	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ior,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_irshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_irshift,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_isub	/usr/include/boost/python/detail/operator_id.hpp	/^    op_isub,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_ixor	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ixor,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_le	/usr/include/boost/python/detail/operator_id.hpp	/^    op_le,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_long	/usr/include/boost/python/detail/operator_id.hpp	/^    op_long, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_lshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_lshift, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_lt	/usr/include/boost/python/detail/operator_id.hpp	/^    op_lt,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_mod	/usr/include/boost/python/detail/operator_id.hpp	/^    op_mod, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_mul	/usr/include/boost/python/detail/operator_id.hpp	/^    op_mul, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_ne	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ne,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_neg	/usr/include/boost/python/detail/operator_id.hpp	/^    op_neg, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_or	/usr/include/boost/python/detail/operator_id.hpp	/^    op_or, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_pos	/usr/include/boost/python/detail/operator_id.hpp	/^    op_pos, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_pow	/usr/include/boost/python/detail/operator_id.hpp	/^    op_pow, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_repr	/usr/include/boost/python/detail/operator_id.hpp	/^    op_repr$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_rshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_rshift, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_str	/usr/include/boost/python/detail/operator_id.hpp	/^    op_str,$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_sub	/usr/include/boost/python/detail/operator_id.hpp	/^    op_sub, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_truediv	/usr/include/boost/python/detail/operator_id.hpp	/^    ,op_truediv$/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::op_xor	/usr/include/boost/python/detail/operator_id.hpp	/^    op_xor, $/;"	e	enum:boost::python::detail::operator_id
boost::python::detail::opaque_pointee	/usr/include/boost/python/return_opaque_pointer.hpp	/^  static void opaque_pointee(Pointee const volatile*)$/;"	f	namespace:boost::python::detail	signature:(Pointee const volatile*)
boost::python::detail::operator <	/usr/include/boost/python/detail/map_entry.hpp	/^bool operator<(Key const& k, map_entry<Key,Value> const& e)$/;"	f	namespace:boost::python::detail	signature:(Key const& k, map_entry<Key,Value> const& e)
boost::python::detail::operator <	/usr/include/boost/python/detail/map_entry.hpp	/^bool operator<(map_entry<Key,Value> const& e, Key const& k)$/;"	f	namespace:boost::python::detail	signature:(map_entry<Key,Value> const& e, Key const& k)
boost::python::detail::operator <<	/usr/include/boost/python/detail/decorated_type_id.hpp	/^BOOST_PYTHON_DECL std::ostream& operator<<(std::ostream&, decorated_type_info const&);$/;"	p	namespace:boost::python::detail	signature:(std::ostream&, decorated_type_info const&)
boost::python::detail::operator_	/usr/include/boost/python/operators.hpp	/^  struct operator_$/;"	s	namespace:boost::python::detail	inherits:def_visitor
boost::python::detail::operator_1	/usr/include/boost/python/operators.hpp	/^  template <operator_id> struct operator_1$/;"	s	namespace:boost::python::detail
boost::python::detail::operator_1_inner	/usr/include/boost/python/operators.hpp	/^  struct operator_1_inner$/;"	s	namespace:boost::python::detail	inherits:operator_1::,apply
boost::python::detail::operator_::visit	/usr/include/boost/python/operators.hpp	/^      void visit(ClassT& cl) const$/;"	f	struct:boost::python::detail::operator_	access:private	signature:(ClassT& cl) const
boost::python::detail::operator_id	/usr/include/boost/python/detail/operator_id.hpp	/^enum operator_id$/;"	g	namespace:boost::python::detail
boost::python::detail::operator_l	/usr/include/boost/python/operators.hpp	/^  template <operator_id> struct operator_l$/;"	s	namespace:boost::python::detail
boost::python::detail::operator_l_inner	/usr/include/boost/python/operators.hpp	/^  struct operator_l_inner$/;"	s	namespace:boost::python::detail	inherits:operator_l::,apply
boost::python::detail::operator_r	/usr/include/boost/python/operators.hpp	/^  template <operator_id> struct operator_r$/;"	s	namespace:boost::python::detail
boost::python::detail::operator_r_inner	/usr/include/boost/python/operators.hpp	/^  struct operator_r_inner$/;"	s	namespace:boost::python::detail	inherits:operator_r::,apply
boost::python::detail::outer_constructor_signature	/usr/include/boost/python/make_constructor.hpp	/^  struct outer_constructor_signature$/;"	s	namespace:boost::python::detail
boost::python::detail::outer_constructor_signature	/usr/include/boost/python/make_constructor.hpp	/^  struct outer_constructor_signature<int>$/;"	s	namespace:boost::python::detail
boost::python::detail::outer_constructor_signature::inner_args	/usr/include/boost/python/make_constructor.hpp	/^      typedef typename mpl::pop_front<InnerSignature>::type inner_args;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
boost::python::detail::outer_constructor_signature::outer_args	/usr/include/boost/python/make_constructor.hpp	/^      typedef typename mpl::push_front<inner_args,object>::type outer_args;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
boost::python::detail::outer_constructor_signature::type	/usr/include/boost/python/make_constructor.hpp	/^      typedef int type;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
boost::python::detail::outer_constructor_signature::type	/usr/include/boost/python/make_constructor.hpp	/^      typedef typename mpl::push_front<outer_args,void>::type type;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
boost::python::detail::overloads_base	/usr/include/boost/python/detail/defaults_gen.hpp	/^  struct overloads_base$/;"	s	namespace:boost::python::detail
boost::python::detail::overloads_base::detail::keywords	/usr/include/boost/python/detail/defaults_gen.hpp	/^      detail::keyword_range const& keywords() const$/;"	f	class:boost::python::detail::overloads_base::detail	access:public	signature:() const
boost::python::detail::overloads_base::doc_string	/usr/include/boost/python/detail/defaults_gen.hpp	/^      char const* doc_string() const$/;"	f	struct:boost::python::detail::overloads_base	access:public	signature:() const
boost::python::detail::overloads_base::m_doc	/usr/include/boost/python/detail/defaults_gen.hpp	/^      char const* m_doc;$/;"	m	struct:boost::python::detail::overloads_base	access:private
boost::python::detail::overloads_base::m_keywords	/usr/include/boost/python/detail/defaults_gen.hpp	/^      detail::keyword_range m_keywords;$/;"	m	struct:boost::python::detail::overloads_base	access:private
boost::python::detail::overloads_base::overloads_base	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_base(char const* doc_)$/;"	f	struct:boost::python::detail::overloads_base	access:public	signature:(char const* doc_)
boost::python::detail::overloads_base::overloads_base	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_base(char const* doc_, detail::keyword_range const& kw)$/;"	f	struct:boost::python::detail::overloads_base	access:public	signature:(char const* doc_, detail::keyword_range const& kw)
boost::python::detail::overloads_common	/usr/include/boost/python/detail/defaults_gen.hpp	/^  struct overloads_common$/;"	s	namespace:boost::python::detail	inherits:overloads_base
boost::python::detail::overloads_common::call_policies	/usr/include/boost/python/detail/defaults_gen.hpp	/^      call_policies() const$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:() const
boost::python::detail::overloads_common::operator []	/usr/include/boost/python/detail/defaults_gen.hpp	/^      operator[](CallPoliciesT const& policies) const$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:(CallPoliciesT const& policies) const
boost::python::detail::overloads_common::overloads_common	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_common(char const* doc)$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:(char const* doc)
boost::python::detail::overloads_common::overloads_common	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_common(char const* doc, keyword_range const& kw)$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:(char const* doc, keyword_range const& kw)
boost::python::detail::overloads_proxy	/usr/include/boost/python/detail/defaults_gen.hpp	/^  struct overloads_proxy$/;"	s	namespace:boost::python::detail	inherits:overloads_base
boost::python::detail::overloads_proxy::call_policies	/usr/include/boost/python/detail/defaults_gen.hpp	/^      call_policies() const$/;"	f	struct:boost::python::detail::overloads_proxy	access:public	signature:() const
boost::python::detail::overloads_proxy::non_void_return_type	/usr/include/boost/python/detail/defaults_gen.hpp	/^      typedef typename OverloadsT::non_void_return_type   non_void_return_type;$/;"	t	struct:boost::python::detail::overloads_proxy	access:public
boost::python::detail::overloads_proxy::overloads_proxy	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_proxy($/;"	f	struct:boost::python::detail::overloads_proxy	access:public	signature:( CallPoliciesT const& policies_ , char const* doc , keyword_range const& kw )
boost::python::detail::overloads_proxy::policies	/usr/include/boost/python/detail/defaults_gen.hpp	/^      CallPoliciesT policies;$/;"	m	struct:boost::python::detail::overloads_proxy	access:public
boost::python::detail::overloads_proxy::void_return_type	/usr/include/boost/python/detail/defaults_gen.hpp	/^      typedef typename OverloadsT::void_return_type       void_return_type;$/;"	t	struct:boost::python::detail::overloads_proxy	access:public
boost::python::detail::pickle_suite_finalize	/usr/include/boost/python/object/pickle_support.hpp	/^  struct pickle_suite_finalize$/;"	s	namespace:boost::python::detail	inherits:PickleSuiteType,pickle_suite_registration
boost::python::detail::pickle_suite_registration	/usr/include/boost/python/object/pickle_support.hpp	/^  struct pickle_suite_registration$/;"	s	namespace:boost::python::detail
boost::python::detail::pickle_suite_registration::inaccessible	/usr/include/boost/python/object/pickle_support.hpp	/^    typedef pickle_suite::inaccessible inaccessible;$/;"	t	struct:boost::python::detail::pickle_suite_registration	access:public
boost::python::detail::pickle_suite_registration::register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_& cl, inaccessible* (* )(), Rgetstate (*getstate_fn)(Tgetstate), void (*setstate_fn)(Tsetstate, Ttuple), bool getstate_manages_dict)
boost::python::detail::pickle_suite_registration::register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_& cl, tuple (*getinitargs_fn)(Tgetinitargs), Rgetstate (*getstate_fn)(Tgetstate), void (*setstate_fn)(Tsetstate, Ttuple), bool getstate_manages_dict)
boost::python::detail::pickle_suite_registration::register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_& cl, tuple (*getinitargs_fn)(Tgetinitargs), inaccessible* (* )(), inaccessible* (* )(), bool)
boost::python::detail::pickle_suite_registration::register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_&, ...)
boost::python::detail::pointee	/usr/include/boost/python/detail/pointee.hpp	/^struct pointee$/;"	s	namespace:boost::python::detail	inherits:pointee_impl::,apply
boost::python::detail::pointee_impl	/usr/include/boost/python/detail/pointee.hpp	/^struct pointee_impl$/;"	s	namespace:boost::python::detail
boost::python::detail::pointee_impl	/usr/include/boost/python/detail/pointee.hpp	/^struct pointee_impl<false>$/;"	s	namespace:boost::python::detail
boost::python::detail::pointee_impl	/usr/include/boost/python/pointee.hpp	/^  struct pointee_impl$/;"	s	namespace:boost::python::detail
boost::python::detail::pointee_impl	/usr/include/boost/python/pointee.hpp	/^  struct pointee_impl<false>$/;"	s	namespace:boost::python::detail
boost::python::detail::pointee_impl::apply	/usr/include/boost/python/detail/pointee.hpp	/^    template <class T> struct apply : remove_pointer<T> {};$/;"	s	struct:boost::python::detail::pointee_impl	inherits:remove_pointer	access:public
boost::python::detail::pointee_impl::apply	/usr/include/boost/python/detail/pointee.hpp	/^    template <class T> struct apply$/;"	s	struct:boost::python::detail::pointee_impl	access:public
boost::python::detail::pointee_impl::apply	/usr/include/boost/python/pointee.hpp	/^      template <class T> struct apply : remove_pointer<T> {};$/;"	s	struct:boost::python::detail::pointee_impl	inherits:remove_pointer	access:public
boost::python::detail::pointee_impl::apply	/usr/include/boost/python/pointee.hpp	/^      template <class T> struct apply$/;"	s	struct:boost::python::detail::pointee_impl	access:public
boost::python::detail::pointee_impl::apply::type	/usr/include/boost/python/detail/pointee.hpp	/^        typedef typename T::element_type type;$/;"	t	struct:boost::python::detail::pointee_impl::apply	access:public
boost::python::detail::pointee_impl::apply::type	/usr/include/boost/python/pointee.hpp	/^          typedef typename T::element_type type;$/;"	t	struct:boost::python::detail::pointee_impl::apply	access:public
boost::python::detail::pointer_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
boost::python::detail::pointer_unwrapper	/usr/include/boost/python/ptr.hpp	/^  struct pointer_unwrapper$/;"	s	namespace:boost::python::detail
boost::python::detail::pointer_unwrapper	/usr/include/boost/python/ptr.hpp	/^  struct pointer_unwrapper<true>$/;"	s	namespace:boost::python::detail
boost::python::detail::pointer_unwrapper::apply	/usr/include/boost/python/ptr.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::pointer_unwrapper	access:public
boost::python::detail::pointer_unwrapper::apply::type	/usr/include/boost/python/ptr.hpp	/^          typedef T type;$/;"	t	struct:boost::python::detail::pointer_unwrapper::apply	access:public
boost::python::detail::pointer_unwrapper::apply::type	/usr/include/boost/python/ptr.hpp	/^          typedef typename T::type type;$/;"	t	struct:boost::python::detail::pointer_unwrapper::apply	access:public
boost::python::detail::policy_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct policy_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
boost::python::detail::proxy_group	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    class proxy_group$/;"	c	namespace:boost::python::detail
boost::python::detail::proxy_group::add	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        add(PyObject* prox)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(PyObject* prox)
boost::python::detail::proxy_group::check_invariant	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        check_invariant() const$/;"	f	class:boost::python::detail::proxy_group	access:private	signature:() const
boost::python::detail::proxy_group::const_iterator	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename std::vector<PyObject*>::const_iterator const_iterator;$/;"	t	class:boost::python::detail::proxy_group	access:public
boost::python::detail::proxy_group::erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(index_type from, index_type to)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type from, index_type to)
boost::python::detail::proxy_group::erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(index_type i, mpl::false_)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i, mpl::false_)
boost::python::detail::proxy_group::erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(index_type i, mpl::true_)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i, mpl::true_)
boost::python::detail::proxy_group::find	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        find(index_type i)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i)
boost::python::detail::proxy_group::first_proxy	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        first_proxy(index_type i)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i)
boost::python::detail::proxy_group::index_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Proxy::index_type index_type;$/;"	t	class:boost::python::detail::proxy_group	access:public
boost::python::detail::proxy_group::iterator	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename std::vector<PyObject*>::iterator iterator;$/;"	t	class:boost::python::detail::proxy_group	access:public
boost::python::detail::proxy_group::policies_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Proxy::policies_type policies_type;$/;"	t	class:boost::python::detail::proxy_group	access:public
boost::python::detail::proxy_group::proxies	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        std::vector<PyObject*> proxies;$/;"	m	class:boost::python::detail::proxy_group	access:private
boost::python::detail::proxy_group::remove	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        remove(Proxy& proxy)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(Proxy& proxy)
boost::python::detail::proxy_group::replace	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        replace($/;"	f	class:boost::python::detail::proxy_group	access:public	signature:( index_type from, index_type to, typename std::vector<PyObject*>::size_type len)
boost::python::detail::proxy_group::size	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        size() const$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:() const
boost::python::detail::proxy_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct proxy_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::proxy_helper::base_erase_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_index($/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:( Container& container, Index i, NoSlice no_slice)
boost::python::detail::proxy_helper::base_erase_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_erase_indexes($/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:( Container& container, Index from, Index to)
boost::python::detail::proxy_helper::base_get_item_	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_item_(back_reference<Container&> const& container, PyObject* i)$/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:(back_reference<Container&> const& container, PyObject* i)
boost::python::detail::proxy_helper::base_replace_indexes	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_replace_indexes($/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:( Container& container, Index from, Index to, Index n)
boost::python::detail::proxy_helper::register_container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        register_container_element()$/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:()
boost::python::detail::proxy_links	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    class proxy_links$/;"	c	namespace:boost::python::detail
boost::python::detail::proxy_links::add	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        add(PyObject* prox, Container& container)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(PyObject* prox, Container& container)
boost::python::detail::proxy_links::erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(Container& container, index_type from, index_type to)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Container& container, index_type from, index_type to)
boost::python::detail::proxy_links::erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        void erase(Container& container, index_type i, NoSlice no_slice)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Container& container, index_type i, NoSlice no_slice)
boost::python::detail::proxy_links::find	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        find(Container& container, index_type i)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Container& container, index_type i)
boost::python::detail::proxy_links::index_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Proxy::index_type index_type;$/;"	t	class:boost::python::detail::proxy_links	access:public
boost::python::detail::proxy_links::links	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        links_t links;$/;"	m	class:boost::python::detail::proxy_links	access:private
boost::python::detail::proxy_links::links_t	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef std::map<Container*, proxy_group<Proxy> > links_t;$/;"	t	class:boost::python::detail::proxy_links	access:public
boost::python::detail::proxy_links::remove	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        remove(Proxy& proxy)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Proxy& proxy)
boost::python::detail::proxy_links::replace	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        replace($/;"	f	class:boost::python::detail::proxy_links	access:public	signature:( Container& container, index_type from, index_type to, index_type len)
boost::python::detail::pure_virtual_called	/usr/include/boost/python/pure_virtual.hpp	/^  void BOOST_PYTHON_DECL pure_virtual_called();$/;"	p	namespace:boost::python::detail	signature:()
boost::python::detail::pure_virtual_visitor	/usr/include/boost/python/pure_virtual.hpp	/^  struct pure_virtual_visitor$/;"	s	namespace:boost::python::detail	inherits:def_visitor
boost::python::detail::pure_virtual_visitor::m_pmf	/usr/include/boost/python/pure_virtual.hpp	/^      PointerToMemberFunction m_pmf;$/;"	m	struct:boost::python::detail::pure_virtual_visitor	access:private
boost::python::detail::pure_virtual_visitor::pure_virtual_visitor	/usr/include/boost/python/pure_virtual.hpp	/^      pure_virtual_visitor(PointerToMemberFunction pmf)$/;"	f	struct:boost::python::detail::pure_virtual_visitor	access:public	signature:(PointerToMemberFunction pmf)
boost::python::detail::pure_virtual_visitor::visit	/usr/include/boost/python/pure_virtual.hpp	/^      void visit(C_& c, char const* name, Options& options) const$/;"	f	struct:boost::python::detail::pure_virtual_visitor	access:private	signature:(C_& c, char const* name, Options& options) const
boost::python::detail::py_func_sig_info	/usr/include/boost/python/detail/signature.hpp	/^struct py_func_sig_info$/;"	s	namespace:boost::python::detail
boost::python::detail::py_func_sig_info::ret	/usr/include/boost/python/detail/signature.hpp	/^    signature_element const *ret;$/;"	m	struct:boost::python::detail::py_func_sig_info	access:public
boost::python::detail::py_func_sig_info::signature	/usr/include/boost/python/detail/signature.hpp	/^    signature_element const *signature;$/;"	m	struct:boost::python::detail::py_func_sig_info	access:public
boost::python::detail::python_class	/usr/include/boost/python/detail/python_type.hpp	/^template <class T> struct python_class : PyObject$/;"	s	namespace:boost::python::detail	inherits:PyObject
boost::python::detail::python_class::converter	/usr/include/boost/python/detail/python_type.hpp	/^    static void *converter (PyObject *p){$/;"	f	struct:boost::python::detail::python_class	access:public	signature:(PyObject *p)
boost::python::detail::python_class::register_	/usr/include/boost/python/detail/python_type.hpp	/^    static void register_()$/;"	f	struct:boost::python::detail::python_class	access:public	signature:()
boost::python::detail::python_class::this_type	/usr/include/boost/python/detail/python_type.hpp	/^    typedef python_class<T> this_type;$/;"	t	struct:boost::python::detail::python_class	access:public
boost::python::detail::python_class::type	/usr/include/boost/python/detail/python_type.hpp	/^    typedef T type;$/;"	t	struct:boost::python::detail::python_class	access:public
boost::python::detail::raw_dispatcher	/usr/include/boost/python/raw_function.hpp	/^  struct raw_dispatcher$/;"	s	namespace:boost::python::detail
boost::python::detail::raw_dispatcher::f	/usr/include/boost/python/raw_function.hpp	/^      F f;$/;"	m	struct:boost::python::detail::raw_dispatcher	access:private
boost::python::detail::raw_dispatcher::operator ()	/usr/include/boost/python/raw_function.hpp	/^      PyObject* operator()(PyObject* args, PyObject* keywords)$/;"	f	struct:boost::python::detail::raw_dispatcher	access:public	signature:(PyObject* args, PyObject* keywords)
boost::python::detail::raw_dispatcher::raw_dispatcher	/usr/include/boost/python/raw_function.hpp	/^      raw_dispatcher(F f) : f(f) {}$/;"	f	struct:boost::python::detail::raw_dispatcher	access:public	signature:(F f)
boost::python::detail::reference_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
boost::python::detail::reference_existing_object_requires_a_pointer_or_reference_return_type	/usr/include/boost/python/reference_existing_object.hpp	/^  struct reference_existing_object_requires_a_pointer_or_reference_return_type$/;"	s	namespace:boost::python::detail
boost::python::detail::reference_to_pointer_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
boost::python::detail::referent_size	/usr/include/boost/python/detail/referent_storage.hpp	/^  struct referent_size<T&>$/;"	s	namespace:boost::python::detail
boost::python::detail::referent_size	/usr/include/boost/python/detail/referent_storage.hpp	/^  template <class T> struct referent_size$/;"	s	namespace:boost::python::detail
boost::python::detail::referent_size::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/referent_storage.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::detail::referent_size	access:public	signature:( std::size_t, value = sizeof(T))
boost::python::detail::referent_size::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/referent_storage.hpp	/^      BOOST_STATIC_CONSTANT(std::size_t, value = sizeof(f()));$/;"	p	struct:boost::python::detail::referent_size	access:public	signature:(std::size_t, value = sizeof(f()))
boost::python::detail::referent_size::f	/usr/include/boost/python/detail/referent_storage.hpp	/^      static T f();$/;"	p	struct:boost::python::detail::referent_size	access:public	signature:()
boost::python::detail::referent_storage	/usr/include/boost/python/detail/referent_storage.hpp	/^struct referent_storage$/;"	s	namespace:boost::python::detail
boost::python::detail::referent_storage::type	/usr/include/boost/python/detail/referent_storage.hpp	/^    > type;$/;"	t	struct:boost::python::detail::referent_storage	access:public
boost::python::detail::register_exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^BOOST_PYTHON_DECL void register_exception_handler(handler_function const& f);$/;"	p	namespace:boost::python::detail	signature:(handler_function const& f)
boost::python::detail::registry_to_python_value	/usr/include/boost/python/to_python_value.hpp	/^  struct registry_to_python_value$/;"	s	namespace:boost::python::detail
boost::python::detail::registry_to_python_value::BOOST_STATIC_CONSTANT	/usr/include/boost/python/to_python_value.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = true);$/;"	p	struct:boost::python::detail::registry_to_python_value	access:public	signature:(bool, uses_registry = true)
boost::python::detail::registry_to_python_value::argument_type	/usr/include/boost/python/to_python_value.hpp	/^      typedef typename value_arg<T>::type argument_type;$/;"	t	struct:boost::python::detail::registry_to_python_value	access:public
boost::python::detail::registry_to_python_value::get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype() const {return converter::registered<T>::converters.to_python_target_type();}$/;"	f	struct:boost::python::detail::registry_to_python_value	access:public	signature:() const
boost::python::detail::registry_to_python_value::operator ()	/usr/include/boost/python/to_python_value.hpp	/^      PyObject* operator()(argument_type) const;$/;"	p	struct:boost::python::detail::registry_to_python_value	access:public	signature:(argument_type) const
boost::python::detail::registry_to_python_value::operator ()	/usr/include/boost/python/to_python_value.hpp	/^  inline PyObject* registry_to_python_value<T>::operator()(argument_type x) const$/;"	f	class:boost::python::detail::registry_to_python_value	signature:(argument_type x) const
boost::python::detail::replace_front2	/usr/include/boost/python/pure_virtual.hpp	/^  struct replace_front2$/;"	s	namespace:boost::python::detail
boost::python::detail::replace_front2::type	/usr/include/boost/python/pure_virtual.hpp	/^      >::type type;$/;"	t	struct:boost::python::detail::replace_front2	access:public
boost::python::detail::result	/usr/include/boost/python/detail/result.hpp	/^result(X const&, short) { return 0; }$/;"	f	namespace:boost::python::detail	signature:(X const&, short)
boost::python::detail::result_result	/usr/include/boost/python/detail/result.hpp	/^struct result_result$/;"	s	namespace:boost::python::detail
boost::python::detail::result_result::t1	/usr/include/boost/python/detail/result.hpp	/^        >::type t1;$/;"	t	struct:boost::python::detail::result_result	access:public
boost::python::detail::result_result::type	/usr/include/boost/python/detail/result.hpp	/^    typedef typename t1::type* type;$/;"	t	struct:boost::python::detail::result_result	access:public
boost::python::detail::rethrow	/usr/include/boost/python/errors.hpp	/^namespace detail { inline void rethrow() { throw; } }$/;"	f	namespace:boost::python::detail	signature:()
boost::python::detail::return_arg_pos_argument_must_be_positive	/usr/include/boost/python/return_arg.hpp	/^  struct return_arg_pos_argument_must_be_positive$/;"	s	namespace:boost::python::detail
boost::python::detail::return_internal_reference_owner_arg_must_be_greater_than_zero	/usr/include/boost/python/return_internal_reference.hpp	/^  struct return_internal_reference_owner_arg_must_be_greater_than_zero$/;"	s	namespace:boost::python::detail
boost::python::detail::return_none	/usr/include/boost/python/return_arg.hpp	/^  struct return_none$/;"	s	namespace:boost::python::detail
boost::python::detail::return_none::apply	/usr/include/boost/python/return_arg.hpp	/^      template <class T> struct apply$/;"	s	struct:boost::python::detail::return_none	access:public
boost::python::detail::return_none::apply::type	/usr/include/boost/python/return_arg.hpp	/^          struct type$/;"	s	struct:boost::python::detail::return_none::apply	access:public
boost::python::detail::return_none::apply::type::convertible	/usr/include/boost/python/return_arg.hpp	/^              static bool convertible()$/;"	f	struct:boost::python::detail::return_none::apply::type	access:public	signature:()
boost::python::detail::return_none::apply::type::get_pytype	/usr/include/boost/python/return_arg.hpp	/^              PyTypeObject const *get_pytype() const { return converter::expected_pytype_for_arg<T>::get_pytype() ; }$/;"	f	struct:boost::python::detail::return_none::apply::type	access:public	signature:() const
boost::python::detail::return_none::apply::type::operator ()	/usr/include/boost/python/return_arg.hpp	/^              PyObject *operator()( typename value_arg<T>::type ) const$/;"	f	struct:boost::python::detail::return_none::apply::type	access:public	signature:( typename value_arg<T>::type ) const
boost::python::detail::returnable	/usr/include/boost/python/detail/void_return.hpp	/^struct returnable$/;"	s	namespace:boost::python::detail
boost::python::detail::returnable	/usr/include/boost/python/detail/void_return.hpp	/^struct returnable<void>$/;"	s	namespace:boost::python::detail
boost::python::detail::returnable	/usr/include/boost/python/detail/void_return.hpp	/^template <> struct returnable<const void> : returnable<void> {};$/;"	s	namespace:boost::python::detail	inherits:returnable
boost::python::detail::returnable	/usr/include/boost/python/detail/void_return.hpp	/^template <> struct returnable<const volatile void> : returnable<void> {};$/;"	s	namespace:boost::python::detail	inherits:returnable
boost::python::detail::returnable	/usr/include/boost/python/detail/void_return.hpp	/^template <> struct returnable<volatile void> : returnable<void> {};$/;"	s	namespace:boost::python::detail	inherits:returnable
boost::python::detail::returnable::type	/usr/include/boost/python/detail/void_return.hpp	/^    typedef T type;$/;"	t	struct:boost::python::detail::returnable	access:public
boost::python::detail::returnable::type	/usr/include/boost/python/detail/void_return.hpp	/^    typedef void_return type;$/;"	t	struct:boost::python::detail::returnable	access:public
boost::python::detail::scope_setattr_doc	/usr/include/boost/python/detail/scope.hpp	/^void BOOST_PYTHON_DECL scope_setattr_doc(char const* name, object const& obj, char const* doc);$/;"	p	namespace:boost::python::detail	signature:(char const* name, object const& obj, char const* doc)
boost::python::detail::select_bases	/usr/include/boost/python/bases.hpp	/^    struct select_bases$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
boost::python::detail::select_result_converter	/usr/include/boost/python/detail/caller.hpp	/^struct select_result_converter$/;"	s	namespace:boost::python::detail	inherits:mpl::eval_if
boost::python::detail::shared_ptr_to_python_value	/usr/include/boost/python/to_python_value.hpp	/^  struct shared_ptr_to_python_value$/;"	s	namespace:boost::python::detail
boost::python::detail::shared_ptr_to_python_value::BOOST_STATIC_CONSTANT	/usr/include/boost/python/to_python_value.hpp	/^      BOOST_STATIC_CONSTANT(bool, uses_registry = false);$/;"	p	struct:boost::python::detail::shared_ptr_to_python_value	access:public	signature:(bool, uses_registry = false)
boost::python::detail::shared_ptr_to_python_value::argument_type	/usr/include/boost/python/to_python_value.hpp	/^      typedef typename value_arg<T>::type argument_type;$/;"	t	struct:boost::python::detail::shared_ptr_to_python_value	access:public
boost::python::detail::shared_ptr_to_python_value::get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype() const {return get_pytype((boost::type<argument_type>*)0);}$/;"	f	struct:boost::python::detail::shared_ptr_to_python_value	access:public	signature:() const
boost::python::detail::shared_ptr_to_python_value::get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype(boost::type<const shared_ptr<U> &> *) const {return converter::registered<U>::converters.to_python_target_type();}$/;"	f	struct:boost::python::detail::shared_ptr_to_python_value	access:private	signature:(boost::type<const shared_ptr<U> &> *) const
boost::python::detail::shared_ptr_to_python_value::get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype(boost::type<shared_ptr<U> &> *) const {return converter::registered<U>::converters.to_python_target_type();}$/;"	f	struct:boost::python::detail::shared_ptr_to_python_value	access:private	signature:(boost::type<shared_ptr<U> &> *) const
boost::python::detail::shared_ptr_to_python_value::operator ()	/usr/include/boost/python/to_python_value.hpp	/^      PyObject* operator()(argument_type) const;$/;"	p	struct:boost::python::detail::shared_ptr_to_python_value	access:public	signature:(argument_type) const
boost::python::detail::shared_ptr_to_python_value::operator ()	/usr/include/boost/python/to_python_value.hpp	/^  inline PyObject* shared_ptr_to_python_value<T>::operator()(argument_type x) const$/;"	f	class:boost::python::detail::shared_ptr_to_python_value	signature:(argument_type x) const
boost::python::detail::signature	/usr/include/boost/python/detail/signature.hpp	/^struct signature$/;"	s	namespace:boost::python::detail	inherits:signature_base_select::type
boost::python::detail::signature_base_select	/usr/include/boost/python/detail/signature.hpp	/^struct signature_base_select$/;"	s	namespace:boost::python::detail
boost::python::detail::signature_base_select::arity	/usr/include/boost/python/detail/signature.hpp	/^    enum { arity = mpl::size<Sig>::value - 1 };$/;"	e	enum:boost::python::detail::signature_base_select::__anon6
boost::python::detail::signature_base_select::type	/usr/include/boost/python/detail/signature.hpp	/^    typedef typename signature_arity<arity>::template impl<Sig> type;$/;"	t	struct:boost::python::detail::signature_base_select	access:public
boost::python::detail::signature_element	/usr/include/boost/python/detail/signature.hpp	/^struct signature_element$/;"	s	namespace:boost::python::detail
boost::python::detail::signature_element::basename	/usr/include/boost/python/detail/signature.hpp	/^    char const* basename;$/;"	m	struct:boost::python::detail::signature_element	access:public
boost::python::detail::signature_element::lvalue	/usr/include/boost/python/detail/signature.hpp	/^    bool lvalue;$/;"	m	struct:boost::python::detail::signature_element	access:public
boost::python::detail::signature_element::pytype_f	/usr/include/boost/python/detail/signature.hpp	/^    converter::pytype_function pytype_f;$/;"	m	struct:boost::python::detail::signature_element	access:public
boost::python::detail::slice_base	/usr/include/boost/python/slice.hpp	/^  class BOOST_PYTHON_DECL slice_base : public object$/;"	c	namespace:boost::python::detail	inherits:object
boost::python::detail::slice_base::slice_base	/usr/include/boost/python/slice.hpp	/^      explicit slice_base(PyObject*, PyObject*, PyObject*);$/;"	p	class:boost::python::detail::slice_base	access:protected	signature:(PyObject*, PyObject*, PyObject*)
boost::python::detail::slice_base::start	/usr/include/boost/python/slice.hpp	/^      object start() const;$/;"	p	class:boost::python::detail::slice_base	access:public	signature:() const
boost::python::detail::slice_base::step	/usr/include/boost/python/slice.hpp	/^      object step() const;$/;"	p	class:boost::python::detail::slice_base	access:public	signature:() const
boost::python::detail::slice_base::stop	/usr/include/boost/python/slice.hpp	/^      object stop() const;$/;"	p	class:boost::python::detail::slice_base	access:public	signature:() const
boost::python::detail::slice_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct slice_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::slice_helper::base_delete_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_delete_slice(Container& container, PySliceObject* slice)$/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:(Container& container, PySliceObject* slice)
boost::python::detail::slice_helper::base_get_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_slice(Container& container, PySliceObject* slice)$/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:(Container& container, PySliceObject* slice)
boost::python::detail::slice_helper::base_get_slice_data	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_get_slice_data($/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:( Container& container, PySliceObject* slice, Index& from_, Index& to_)
boost::python::detail::slice_helper::base_set_slice	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        base_set_slice(Container& container, PySliceObject* slice, PyObject* v)$/;"	f	struct:boost::python::detail::slice_helper	access:public	signature:(Container& container, PySliceObject* slice, PyObject* v)
boost::python::detail::so_load_function	/usr/include/boost/python/detail/aix_init_module.hpp	/^    typedef PyObject* (*so_load_function)(char*,char*,FILE*);$/;"	t
boost::python::detail::specifies_bases	/usr/include/boost/python/bases.hpp	/^    struct specifies_bases< bases< BOOST_PYTHON_BASE_PARAMS > >$/;"	s	namespace:boost::python::detail	inherits:mpl::true_
boost::python::detail::specifies_bases	/usr/include/boost/python/bases.hpp	/^    template <class T> struct specifies_bases$/;"	s	namespace:boost::python::detail	inherits:mpl::false_
boost::python::detail::specify_a_return_value_policy_to_wrap_functions_returning	/usr/include/boost/python/default_call_policies.hpp	/^  template <class T> struct specify_a_return_value_policy_to_wrap_functions_returning$/;"	s	namespace:boost::python::detail
boost::python::detail::std::typeinfo	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^typedef std::type_info const& typeinfo;$/;"	t	class:boost::python::detail::std
boost::python::detail::str_base	/usr/include/boost/python/str.hpp	/^  struct BOOST_PYTHON_DECL str_base : object$/;"	s	namespace:boost::python::detail	inherits:object
boost::python::detail::str_base::call	/usr/include/boost/python/str.hpp	/^      static new_reference call(object const&);$/;"	p	struct:boost::python::detail::str_base	access:private	signature:(object const&)
boost::python::detail::str_base::capitalize	/usr/include/boost/python/str.hpp	/^      str capitalize() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::center	/usr/include/boost/python/str.hpp	/^      str center(object_cref width) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref width) const
boost::python::detail::str_base::count	/usr/include/boost/python/str.hpp	/^      long count(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
boost::python::detail::str_base::count	/usr/include/boost/python/str.hpp	/^      long count(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
boost::python::detail::str_base::count	/usr/include/boost/python/str.hpp	/^      long count(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
boost::python::detail::str_base::decode	/usr/include/boost/python/str.hpp	/^      object decode() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::decode	/usr/include/boost/python/str.hpp	/^      object decode(object_cref encoding) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding) const
boost::python::detail::str_base::decode	/usr/include/boost/python/str.hpp	/^      object decode(object_cref encoding, object_cref errors) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding, object_cref errors) const
boost::python::detail::str_base::encode	/usr/include/boost/python/str.hpp	/^      object encode() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::encode	/usr/include/boost/python/str.hpp	/^      object encode(object_cref encoding) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding) const
boost::python::detail::str_base::encode	/usr/include/boost/python/str.hpp	/^      object encode(object_cref encoding, object_cref errors) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding, object_cref errors) const
boost::python::detail::str_base::endswith	/usr/include/boost/python/str.hpp	/^      bool endswith(object_cref suffix) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref suffix) const
boost::python::detail::str_base::endswith	/usr/include/boost/python/str.hpp	/^      bool endswith(object_cref suffix, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref suffix, object_cref start) const
boost::python::detail::str_base::endswith	/usr/include/boost/python/str.hpp	/^      bool endswith(object_cref suffix, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref suffix, object_cref start, object_cref end) const
boost::python::detail::str_base::expandtabs	/usr/include/boost/python/str.hpp	/^      str expandtabs() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::expandtabs	/usr/include/boost/python/str.hpp	/^      str expandtabs(object_cref tabsize) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref tabsize) const
boost::python::detail::str_base::find	/usr/include/boost/python/str.hpp	/^      long find(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
boost::python::detail::str_base::find	/usr/include/boost/python/str.hpp	/^      long find(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
boost::python::detail::str_base::find	/usr/include/boost/python/str.hpp	/^      long find(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
boost::python::detail::str_base::index	/usr/include/boost/python/str.hpp	/^      long index(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
boost::python::detail::str_base::index	/usr/include/boost/python/str.hpp	/^      long index(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
boost::python::detail::str_base::index	/usr/include/boost/python/str.hpp	/^      long index(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
boost::python::detail::str_base::isalnum	/usr/include/boost/python/str.hpp	/^      bool isalnum() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::isalpha	/usr/include/boost/python/str.hpp	/^      bool isalpha() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::isdigit	/usr/include/boost/python/str.hpp	/^      bool isdigit() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::islower	/usr/include/boost/python/str.hpp	/^      bool islower() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::isspace	/usr/include/boost/python/str.hpp	/^      bool isspace() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::istitle	/usr/include/boost/python/str.hpp	/^      bool istitle() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::isupper	/usr/include/boost/python/str.hpp	/^      bool isupper() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::join	/usr/include/boost/python/str.hpp	/^      str join(object_cref sequence) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sequence) const
boost::python::detail::str_base::ljust	/usr/include/boost/python/str.hpp	/^      str ljust(object_cref width) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref width) const
boost::python::detail::str_base::lower	/usr/include/boost/python/str.hpp	/^      str lower() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::lstrip	/usr/include/boost/python/str.hpp	/^      str lstrip() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::replace	/usr/include/boost/python/str.hpp	/^      str replace(object_cref old, object_cref new_) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref old, object_cref new_) const
boost::python::detail::str_base::replace	/usr/include/boost/python/str.hpp	/^      str replace(object_cref old, object_cref new_, object_cref maxsplit) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref old, object_cref new_, object_cref maxsplit) const
boost::python::detail::str_base::rfind	/usr/include/boost/python/str.hpp	/^      long rfind(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
boost::python::detail::str_base::rfind	/usr/include/boost/python/str.hpp	/^      long rfind(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
boost::python::detail::str_base::rfind	/usr/include/boost/python/str.hpp	/^      long rfind(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
boost::python::detail::str_base::rindex	/usr/include/boost/python/str.hpp	/^      long rindex(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
boost::python::detail::str_base::rindex	/usr/include/boost/python/str.hpp	/^      long rindex(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
boost::python::detail::str_base::rindex	/usr/include/boost/python/str.hpp	/^      long rindex(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
boost::python::detail::str_base::rjust	/usr/include/boost/python/str.hpp	/^      str rjust(object_cref width) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref width) const
boost::python::detail::str_base::rstrip	/usr/include/boost/python/str.hpp	/^      str rstrip() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::split	/usr/include/boost/python/str.hpp	/^      list split() const; $/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::split	/usr/include/boost/python/str.hpp	/^      list split(object_cref sep) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sep) const
boost::python::detail::str_base::split	/usr/include/boost/python/str.hpp	/^      list split(object_cref sep, object_cref maxsplit) const; $/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sep, object_cref maxsplit) const
boost::python::detail::str_base::splitlines	/usr/include/boost/python/str.hpp	/^      list splitlines() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::splitlines	/usr/include/boost/python/str.hpp	/^      list splitlines(object_cref keepends) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref keepends) const
boost::python::detail::str_base::startswith	/usr/include/boost/python/str.hpp	/^      bool startswith(object_cref prefix) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref prefix) const
boost::python::detail::str_base::startswith	/usr/include/boost/python/str.hpp	/^      bool startswith(object_cref prefix, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref prefix, object_cref start) const
boost::python::detail::str_base::startswith	/usr/include/boost/python/str.hpp	/^      bool startswith(object_cref prefix, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref prefix, object_cref start, object_cref end) const
boost::python::detail::str_base::str_base	/usr/include/boost/python/str.hpp	/^      explicit str_base(object_cref other);$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(object_cref other)
boost::python::detail::str_base::str_base	/usr/include/boost/python/str.hpp	/^      str_base(); \/\/ new str$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:()
boost::python::detail::str_base::str_base	/usr/include/boost/python/str.hpp	/^      str_base(char const* start, char const* finish);$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(char const* start, char const* finish)
boost::python::detail::str_base::str_base	/usr/include/boost/python/str.hpp	/^      str_base(char const* start, std::size_t length);$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(char const* start, std::size_t length)
boost::python::detail::str_base::str_base	/usr/include/boost/python/str.hpp	/^      str_base(const char* s); \/\/ new str$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(const char* s)
boost::python::detail::str_base::strip	/usr/include/boost/python/str.hpp	/^      str strip() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::swapcase	/usr/include/boost/python/str.hpp	/^      str swapcase() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::title	/usr/include/boost/python/str.hpp	/^      str title() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::str_base::translate	/usr/include/boost/python/str.hpp	/^      str translate(object_cref table) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref table) const
boost::python::detail::str_base::translate	/usr/include/boost/python/str.hpp	/^      str translate(object_cref table, object_cref deletechars) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref table, object_cref deletechars) const
boost::python::detail::str_base::upper	/usr/include/boost/python/str.hpp	/^      str upper() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
boost::python::detail::target	/usr/include/boost/python/detail/target.hpp	/^T& (* target(R (T::*)) )() { return 0; }$/;"	f	namespace:boost::python::detail	signature:(R (
boost::python::detail::translate_exception	/usr/include/boost/python/detail/translate_exception.hpp	/^struct translate_exception$/;"	s	namespace:boost::python::detail
boost::python::detail::translate_exception::exception_non_ref	/usr/include/boost/python/detail/translate_exception.hpp	/^    >::type exception_non_ref;$/;"	t	struct:boost::python::detail::translate_exception	access:public
boost::python::detail::translate_exception::operator ()	/usr/include/boost/python/detail/translate_exception.hpp	/^    inline bool operator()($/;"	f	struct:boost::python::detail::translate_exception	access:public	signature:( exception_handler const& handler , function0<void> const& f , typename call_traits<Translate>::param_type translate) const
boost::python::detail::tuple_base	/usr/include/boost/python/tuple.hpp	/^  struct BOOST_PYTHON_DECL tuple_base : object$/;"	s	namespace:boost::python::detail	inherits:object
boost::python::detail::tuple_base::call	/usr/include/boost/python/tuple.hpp	/^      static detail::new_reference call(object const&);$/;"	p	struct:boost::python::detail::tuple_base	access:private	signature:(object const&)
boost::python::detail::tuple_base::tuple_base	/usr/include/boost/python/tuple.hpp	/^      tuple_base();$/;"	p	struct:boost::python::detail::tuple_base	access:protected	signature:()
boost::python::detail::tuple_base::tuple_base	/usr/include/boost/python/tuple.hpp	/^      tuple_base(object_cref sequence);$/;"	p	struct:boost::python::detail::tuple_base	access:protected	signature:(object_cref sequence)
boost::python::detail::tuple_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract_base_select::type
boost::python::detail::tuple_extract_base_select	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract_base_select$/;"	s	namespace:boost::python::detail
boost::python::detail::tuple_extract_base_select::BOOST_STATIC_CONSTANT	/usr/include/boost/python/detail/def_helper.hpp	/^      BOOST_STATIC_CONSTANT(bool, match = match_t::value);$/;"	p	struct:boost::python::detail::tuple_extract_base_select	access:public	signature:(bool, match = match_t::value)
boost::python::detail::tuple_extract_base_select::head_type	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename Tuple::head_type head_type;$/;"	t	struct:boost::python::detail::tuple_extract_base_select	access:public
boost::python::detail::tuple_extract_base_select::match_t	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename mpl::apply1<Predicate, typename add_reference<head_type>::type>::type match_t;$/;"	t	struct:boost::python::detail::tuple_extract_base_select	access:public
boost::python::detail::tuple_extract_base_select::type	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename tuple_extract_impl<match>::template apply<Tuple,Predicate> type;$/;"	t	struct:boost::python::detail::tuple_extract_base_select	access:public
boost::python::detail::tuple_extract_impl	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract_impl$/;"	s	namespace:boost::python::detail
boost::python::detail::tuple_extract_impl	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract_impl<false>$/;"	s	namespace:boost::python::detail
boost::python::detail::tuple_extract_impl::apply	/usr/include/boost/python/detail/def_helper.hpp	/^      struct apply$/;"	s	struct:boost::python::detail::tuple_extract_impl	access:public
boost::python::detail::tuple_extract_impl::apply::extract	/usr/include/boost/python/detail/def_helper.hpp	/^          static result_type extract(Tuple const& x)$/;"	f	struct:boost::python::detail::tuple_extract_impl::apply	access:public	signature:(Tuple const& x)
boost::python::detail::tuple_extract_impl::apply::extract	/usr/include/boost/python/detail/def_helper.hpp	/^          static typename Tuple::head_type extract(Tuple const& x)$/;"	f	struct:boost::python::detail::tuple_extract_impl::apply	access:public	signature:(Tuple const& x)
boost::python::detail::tuple_extract_impl::apply::next	/usr/include/boost/python/detail/def_helper.hpp	/^          typedef tuple_extract<typename Tuple::tail_type, Predicate> next;$/;"	t	struct:boost::python::detail::tuple_extract_impl::apply	access:public
boost::python::detail::tuple_extract_impl::apply::result_type	/usr/include/boost/python/detail/def_helper.hpp	/^          typedef typename Tuple::head_type result_type;$/;"	t	struct:boost::python::detail::tuple_extract_impl::apply	access:public
boost::python::detail::tuple_extract_impl::apply::result_type	/usr/include/boost/python/detail/def_helper.hpp	/^          typedef typename next::result_type result_type;$/;"	t	struct:boost::python::detail::tuple_extract_impl::apply	access:public
boost::python::detail::type_list	/usr/include/boost/python/detail/type_list_impl.hpp	/^struct type_list$/;"	s	namespace:boost::python::detail	inherits:BOOST_PP_CAT,mpl::vector,BOOST_PYTHON_LIST_SIZE
boost::python::detail::type_list	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct type_list$/;"	s	namespace:boost::python::detail	inherits:detail::type_list_impl::type
boost::python::detail::type_list::type	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^        >::type type;$/;"	t	struct:boost::python::detail::type_list	access:public
boost::python::detail::type_list_count_args	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct type_list_count_args$/;"	s	namespace:boost::python::detail
boost::python::detail::type_list_count_args::value	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    enum { value =$/;"	e	enum:boost::python::detail::type_list_count_args::__anon5
boost::python::detail::type_list_impl	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct type_list_impl$/;"	s	namespace:boost::python::detail
boost::python::detail::type_list_impl::arg_num_	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    typedef type_list_count_args< BOOST_PYTHON_LIST_ACTUAL_PARAMS > arg_num_;$/;"	t	struct:boost::python::detail::type_list_impl	access:public
boost::python::detail::type_list_impl::type	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    ::template result_< BOOST_PYTHON_LIST_ACTUAL_PARAMS >::type type;$/;"	t	struct:boost::python::detail::type_list_impl	access:public
boost::python::detail::typeid_nonref	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^static typeinfo typeid_nonref(T const volatile*) { return typeid(T); }$/;"	f	namespace:boost::python::detail	signature:(T const volatile*)
boost::python::detail::typeid_ref	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo typeid_ref(type<T>*, ...)$/;"	f	namespace:boost::python::detail	signature:(type<T>*, ...)
boost::python::detail::typeid_ref	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo typeid_ref(type<T>*, T&(*)(type<T>))$/;"	f	namespace:boost::python::detail	signature:(type<T>*, T&(*)(type<T>))
boost::python::detail::typeid_ref_1	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo typeid_ref_1(T&(*)())$/;"	f	namespace:boost::python::detail	signature:(T&(*)())
boost::python::detail::unary_op	/usr/include/boost/python/operators.hpp	/^  struct unary_op : operator_1<id>$/;"	s	namespace:boost::python::detail	inherits:operator_1
boost::python::detail::unary_op::apply	/usr/include/boost/python/operators.hpp	/^      struct apply : operator_1_inner<id,T>$/;"	s	struct:boost::python::detail::unary_op	inherits:operator_1_inner	access:public
boost::python::detail::unspecialized	/usr/include/boost/python/base_type_traits.hpp	/^  struct unspecialized {};$/;"	s	namespace:boost::python::detail
boost::python::detail::unwind_helper	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::unwind_helper	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper<false>$/;"	s	namespace:boost::python::detail
boost::python::detail::unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<direct_>$/;"	s	namespace:boost::python::detail
boost::python::detail::unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<pointer_>$/;"	s	namespace:boost::python::detail
boost::python::detail::unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<reference_>$/;"	s	namespace:boost::python::detail
boost::python::detail::unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<reference_to_pointer_>$/;"	s	namespace:boost::python::detail
boost::python::detail::unwind_helper2::execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U&(*)(), Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper2	access:public	signature:(U&(*)(), Generator* = 0)
boost::python::detail::unwind_helper2::execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U(*)(), Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper2	access:public	signature:(U()), Generator* = 0)
boost::python::detail::unwind_helper2::execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U*(*)(), Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper2	access:public	signature:(U*(*)(), Generator* = 0)
boost::python::detail::unwind_helper::execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U p, Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper	access:public	signature:(U p, Generator* = 0)
boost::python::detail::unwind_helper::execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U& p, Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper	access:public	signature:(U& p, Generator* = 0)
boost::python::detail::unwind_ptr_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_ptr_type(U* p, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U* p, Generator* = 0)
boost::python::detail::unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(U const& p, Generator* = 0);$/;"	p	namespace:boost::python::detail	signature:(U const& p, Generator* = 0)
boost::python::detail::unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(U const& p, Generator*)$/;"	f	namespace:boost::python::detail	signature:(U const& p, Generator*)
boost::python::detail::unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(boost::type<U>*, Generator*)$/;"	f	namespace:boost::python::detail	signature:(boost::type<U>*, Generator*)
boost::python::detail::unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(boost::type<U>*p = 0, Generator* = 0);$/;"	p	namespace:boost::python::detail	signature:(boost::type<U>*p = 0, Generator* = 0)
boost::python::detail::unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U const volatile* p, const_volatile_, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U const volatile* p, const_volatile_, Generator* = 0)
boost::python::detail::unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U const* p, const_, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U const* p, const_, Generator* = 0)
boost::python::detail::unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U volatile* p, volatile_, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U volatile* p, volatile_, Generator* = 0)
boost::python::detail::unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U* p, cv_unqualified, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U* p, cv_unqualified, Generator* = 0)
boost::python::detail::unwrap_other	/usr/include/boost/python/other.hpp	/^  class unwrap_other$/;"	c	namespace:boost::python::detail
boost::python::detail::unwrap_other	/usr/include/boost/python/other.hpp	/^  class unwrap_other<other<T> >$/;"	c	namespace:boost::python::detail
boost::python::detail::unwrap_other::type	/usr/include/boost/python/other.hpp	/^      typedef T type;$/;"	t	class:boost::python::detail::unwrap_other	access:public
boost::python::detail::unwrap_type_id	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^inline type_info unwrap_type_id(T*, ...)$/;"	f	namespace:boost::python::detail	signature:(T*, ...)
boost::python::detail::unwrap_type_id	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^inline type_info unwrap_type_id(U*, wrapper<T>*)$/;"	f	namespace:boost::python::detail	signature:(U*, wrapper<T>*)
boost::python::detail::unwrap_wrapper	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^unwrap_wrapper(T*)$/;"	f	namespace:boost::python::detail	signature:(T*)
boost::python::detail::unwrap_wrapper_	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^struct unwrap_wrapper_$/;"	s	namespace:boost::python::detail	inherits:mpl::eval_if
boost::python::detail::unwrap_wrapper_helper	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^struct unwrap_wrapper_helper$/;"	s	namespace:boost::python::detail
boost::python::detail::unwrap_wrapper_helper::type	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^    typedef typename T::_wrapper_wrapped_type_ type;$/;"	t	struct:boost::python::detail::unwrap_wrapper_helper	access:public
boost::python::detail::upcast	/usr/include/boost/python/cast.hpp	/^  inline Target* upcast(Source* p, no_convertible, no_convertible, Target*)$/;"	f	namespace:boost::python::detail	signature:(Source* p, no_convertible, no_convertible, Target*)
boost::python::detail::upcast	/usr/include/boost/python/cast.hpp	/^  inline Target* upcast(Source* p, yes_convertible, no_convertible, Target*)$/;"	f	namespace:boost::python::detail	signature:(Source* p, yes_convertible, no_convertible, Target*)
boost::python::detail::upcast_impl	/usr/include/boost/python/cast.hpp	/^  inline Target* upcast_impl(Source* x, Target*)$/;"	f	namespace:boost::python::detail	signature:(Source* x, Target*)
boost::python::detail::upcast_impl	/usr/include/boost/python/cast.hpp	/^  template <class Source, class Target> inline Target* upcast_impl(Source*, Target*);$/;"	p	namespace:boost::python::detail	signature:(Source*, Target*)
boost::python::detail::upcaster	/usr/include/boost/python/cast.hpp	/^  struct upcaster$/;"	s	namespace:boost::python::detail
boost::python::detail::upcaster	/usr/include/boost/python/cast.hpp	/^  struct upcaster<false>$/;"	s	namespace:boost::python::detail
boost::python::detail::upcaster::execute	/usr/include/boost/python/cast.hpp	/^      static inline T* execute(T* x, T*) { return x; }$/;"	f	struct:boost::python::detail::upcaster	access:public	signature:(T* x, T*)
boost::python::detail::upcaster::execute	/usr/include/boost/python/cast.hpp	/^      static inline Target* execute(Source* x, Target*)$/;"	f	struct:boost::python::detail::upcaster	access:public	signature:(Source* x, Target*)
boost::python::detail::value_arg	/usr/include/boost/python/detail/value_arg.hpp	/^struct value_arg$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
boost::python::detail::value_destroyer	/usr/include/boost/python/detail/destroy.hpp	/^struct value_destroyer<$/;"	s	namespace:boost::python::detail
boost::python::detail::value_destroyer	/usr/include/boost/python/detail/destroy.hpp	/^struct value_destroyer<false,true>$/;"	s	namespace:boost::python::detail
boost::python::detail::value_destroyer	/usr/include/boost/python/detail/destroy.hpp	/^struct value_destroyer<true,true>$/;"	s	namespace:boost::python::detail
boost::python::detail::value_destroyer::execute	/usr/include/boost/python/detail/destroy.hpp	/^    static void execute(A*, T const volatile* const first)$/;"	f	struct:boost::python::detail::value_destroyer	access:public	signature:(A*, T const volatile* const first)
boost::python::detail::value_destroyer::execute	/usr/include/boost/python/detail/destroy.hpp	/^    static void execute(T const volatile* p)$/;"	f	struct:boost::python::detail::value_destroyer	access:public	signature:(T const volatile* p)
boost::python::detail::value_destroyer::execute	/usr/include/boost/python/detail/destroy.hpp	/^    static void execute(T const volatile*)$/;"	f	struct:boost::python::detail::value_destroyer	access:public	signature:(T const volatile*)
boost::python::detail::void_ptr_to_reference	/usr/include/boost/python/detail/void_ptr.hpp	/^inline U& void_ptr_to_reference(void const volatile* p, U&(*)())$/;"	f	namespace:boost::python::detail	signature:(void const volatile* p, U&(*)())
boost::python::detail::void_result_to_python	/usr/include/boost/python/detail/caller.hpp	/^typedef int void_result_to_python;$/;"	t	namespace:boost::python::detail
boost::python::detail::void_result_to_python	/usr/include/boost/python/detail/invoke.hpp	/^typedef int void_result_to_python;$/;"	t	namespace:boost::python::detail
boost::python::detail::void_return	/usr/include/boost/python/detail/void_return.hpp	/^struct void_return$/;"	s	namespace:boost::python::detail
boost::python::detail::void_return::operator =	/usr/include/boost/python/detail/void_return.hpp	/^    void operator=(void_return const&);$/;"	p	struct:boost::python::detail::void_return	access:private	signature:(void_return const&)
boost::python::detail::void_return::void_return	/usr/include/boost/python/detail/void_return.hpp	/^    void_return() {}$/;"	f	struct:boost::python::detail::void_return	access:public	signature:()
boost::python::detail::void_type	/usr/include/boost/python/detail/result.hpp	/^struct void_type$/;"	s	namespace:boost::python::detail
boost::python::detail::void_type::type	/usr/include/boost/python/detail/result.hpp	/^    typedef void type;$/;"	t	struct:boost::python::detail::void_type	access:public
boost::python::detail::volatile_	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<false,true> volatile_;$/;"	t	namespace:boost::python::detail
boost::python::detail::wrapper_base	/usr/include/boost/python/detail/wrapper_base.hpp	/^  class BOOST_PYTHON_DECL wrapper_base$/;"	c	namespace:boost::python::detail
boost::python::detail::wrapper_base	/usr/include/boost/python/detail/wrapper_base.hpp	/^  class BOOST_PYTHON_DECL_FORWARD wrapper_base;$/;"	m	namespace:boost::python::detail	typeref:class:boost::python::detail::BOOST_PYTHON_DECL_FORWARD
boost::python::detail::wrapper_base::detach	/usr/include/boost/python/detail/wrapper_base.hpp	/^      void detach();$/;"	p	class:boost::python::detail::wrapper_base	access:private	signature:()
boost::python::detail::wrapper_base::get_override	/usr/include/boost/python/detail/wrapper_base.hpp	/^      override get_override($/;"	p	class:boost::python::detail::wrapper_base	access:protected	signature:( char const* name, PyTypeObject* class_object) const
boost::python::detail::wrapper_base::initialize_wrapper	/usr/include/boost/python/detail/wrapper_base.hpp	/^      friend void initialize_wrapper(PyObject* self, wrapper_base* w);$/;"	p	class:boost::python::detail::wrapper_base	access:friend	signature:(PyObject* self, wrapper_base* w)
boost::python::detail::wrapper_base::m_self	/usr/include/boost/python/detail/wrapper_base.hpp	/^      PyObject* m_self;$/;"	m	class:boost::python::detail::wrapper_base	access:private
boost::python::detail::wrapper_base::wrapper_base	/usr/include/boost/python/detail/wrapper_base.hpp	/^      wrapper_base() : m_self(0) {}$/;"	f	class:boost::python::detail::wrapper_base	access:protected	signature:()
boost::python::detail::wrapper_base::wrapper_base_::get_owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^      friend PyObject* wrapper_base_::get_owner(wrapper_base const volatile& w);$/;"	p	class:boost::python::detail::wrapper_base::wrapper_base_	access:friend	signature:(wrapper_base const volatile& w)
boost::python::detail::wrapper_base_	/usr/include/boost/python/detail/wrapper_base.hpp	/^  namespace wrapper_base_ \/\/ ADL disabler$/;"	n	namespace:boost::python::detail
boost::python::detail::wrapper_base_::get_owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^    inline PyObject* get_owner(wrapper_base const volatile& w)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(wrapper_base const volatile& w)
boost::python::detail::wrapper_base_::get_owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^    inline PyObject* get_owner(wrapper_base const volatile& w);$/;"	p	namespace:boost::python::detail::wrapper_base_	signature:(wrapper_base const volatile& w)
boost::python::detail::wrapper_base_::owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner(T const volatile* x)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(T const volatile* x)
boost::python::detail::wrapper_base_::owner_impl	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner_impl(T const volatile* x, mpl::true_)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(T const volatile* x, mpl::true_)
boost::python::detail::wrapper_base_::owner_impl	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner_impl(T const volatile* x, mpl::true_);$/;"	p	namespace:boost::python::detail::wrapper_base_	signature:(T const volatile* x, mpl::true_)
boost::python::detail::wrapper_base_::owner_impl	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner_impl(void const volatile* \/*x*\/, mpl::false_)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(void const volatile* , mpl::false_)
boost::python::detail::write_type_id	/usr/include/boost/python/class.hpp	/^  struct write_type_id$/;"	s	namespace:boost::python::detail
boost::python::detail::write_type_id::operator ()	/usr/include/boost/python/class.hpp	/^      void operator()(T*) const$/;"	f	struct:boost::python::detail::write_type_id	access:public	signature:(T*) const
boost::python::detail::write_type_id::p	/usr/include/boost/python/class.hpp	/^      type_info** p;$/;"	m	struct:boost::python::detail::write_type_id	access:public
boost::python::detail::write_type_id::write_type_id	/usr/include/boost/python/class.hpp	/^      write_type_id(type_info**p) : p(p) {}$/;"	f	struct:boost::python::detail::write_type_id	access:public	signature:(type_info**p)
boost::python::detail::write_void_ptr	/usr/include/boost/python/detail/void_ptr.hpp	/^inline void write_void_ptr(void const volatile* storage, void* ptr, T*)$/;"	f	namespace:boost::python::detail	signature:(void const volatile* storage, void* ptr, T*)
boost::python::detail::write_void_ptr_reference	/usr/include/boost/python/detail/void_ptr.hpp	/^inline void write_void_ptr_reference(void const volatile* storage, void* ptr, U&(*)())$/;"	f	namespace:boost::python::detail	signature:(void const volatile* storage, void* ptr, U&(*)())
boost::python::detail::yes_back_reference_t	/usr/include/boost/python/back_reference.hpp	/^  typedef char (&yes_back_reference_t)[1];$/;"	t	namespace:boost::python::detail
boost::python::detail::yes_borrowed_ptr_t	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^typedef char (&yes_borrowed_ptr_t)[1];$/;"	t	namespace:boost::python::detail
boost::python::detail::yes_convertible	/usr/include/boost/python/detail/convertible.hpp	/^typedef char* yes_convertible;$/;"	t	namespace:boost::python::detail
boost::python::detail::yes_handle_t	/usr/include/boost/python/handle.hpp	/^  typedef char (&yes_handle_t)[1];$/;"	t	namespace:boost::python::detail
boost::python::detail::yes_keywords_t	/usr/include/boost/python/args.hpp	/^  typedef char (&yes_keywords_t)[1];$/;"	t	namespace:boost::python::detail
boost::python::detail::yes_pointer_wrapper_t	/usr/include/boost/python/ptr.hpp	/^  typedef char (&yes_pointer_wrapper_t)[1];$/;"	t	namespace:boost::python::detail
boost::python::dict	/usr/include/boost/python/dict.hpp	/^class dict : public detail::dict_base$/;"	c	namespace:boost::python	inherits:detail::dict_base
boost::python::dict::base	/usr/include/boost/python/dict.hpp	/^    typedef detail::dict_base base;$/;"	t	class:boost::python::dict	access:private
boost::python::dict::dict	/usr/include/boost/python/dict.hpp	/^    dict() {}   \/\/ new dict$/;"	f	class:boost::python::dict	access:public	signature:()
boost::python::dict::dict	/usr/include/boost/python/dict.hpp	/^    explicit dict(T const& data)$/;"	f	class:boost::python::dict	access:public	signature:(T const& data)
boost::python::dict::get	/usr/include/boost/python/dict.hpp	/^    object get(T const& k) const $/;"	f	class:boost::python::dict	access:public	signature:(T const& k) const
boost::python::dict::get	/usr/include/boost/python/dict.hpp	/^    object get(T1 const& k, T2 const& d) const $/;"	f	class:boost::python::dict	access:public	signature:(T1 const& k, T2 const& d) const
boost::python::dict::has_key	/usr/include/boost/python/dict.hpp	/^    bool has_key(T const& k) const$/;"	f	class:boost::python::dict	access:public	signature:(T const& k) const
boost::python::dict::setdefault	/usr/include/boost/python/dict.hpp	/^    object setdefault(T const& k)$/;"	f	class:boost::python::dict	access:public	signature:(T const& k)
boost::python::dict::setdefault	/usr/include/boost/python/dict.hpp	/^    object setdefault(T1 const& k, T2 const& d)$/;"	f	class:boost::python::dict	access:public	signature:(T1 const& k, T2 const& d)
boost::python::dict::update	/usr/include/boost/python/dict.hpp	/^    void update(T const& E)$/;"	f	class:boost::python::dict	access:public	signature:(T const& E)
boost::python::docstring_options	/usr/include/boost/python/docstring_options.hpp	/^class BOOST_PYTHON_DECL docstring_options : boost::noncopyable$/;"	c	namespace:boost::python	inherits:boost::noncopyable
boost::python::docstring_options::disable_all	/usr/include/boost/python/docstring_options.hpp	/^      disable_all()$/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::disable_cpp_signatures	/usr/include/boost/python/docstring_options.hpp	/^      disable_cpp_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::disable_py_signatures	/usr/include/boost/python/docstring_options.hpp	/^      disable_py_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::disable_signatures	/usr/include/boost/python/docstring_options.hpp	/^      disable_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::disable_user_defined	/usr/include/boost/python/docstring_options.hpp	/^      disable_user_defined() { show_user_defined_ = false; }$/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      docstring_options(bool show_all=true)$/;"	f	class:boost::python::docstring_options	access:public	signature:(bool show_all=true)
boost::python::docstring_options::docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      docstring_options(bool show_user_defined, bool show_py_signatures, bool show_cpp_signatures)$/;"	f	class:boost::python::docstring_options	access:public	signature:(bool show_user_defined, bool show_py_signatures, bool show_cpp_signatures)
boost::python::docstring_options::docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      docstring_options(bool show_user_defined, bool show_signatures)$/;"	f	class:boost::python::docstring_options	access:public	signature:(bool show_user_defined, bool show_signatures)
boost::python::docstring_options::enable_all	/usr/include/boost/python/docstring_options.hpp	/^      enable_all()$/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::enable_cpp_signatures	/usr/include/boost/python/docstring_options.hpp	/^      enable_cpp_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::enable_py_signatures	/usr/include/boost/python/docstring_options.hpp	/^      enable_py_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::enable_signatures	/usr/include/boost/python/docstring_options.hpp	/^      enable_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::enable_user_defined	/usr/include/boost/python/docstring_options.hpp	/^      enable_user_defined() { show_user_defined_ = true; }$/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::docstring_options::previous_show_cpp_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      bool previous_show_cpp_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
boost::python::docstring_options::previous_show_py_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      bool previous_show_py_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
boost::python::docstring_options::previous_show_user_defined_	/usr/include/boost/python/docstring_options.hpp	/^      bool previous_show_user_defined_;$/;"	m	class:boost::python::docstring_options	access:private
boost::python::docstring_options::show_cpp_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      static volatile bool show_cpp_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
boost::python::docstring_options::show_py_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      static volatile bool show_py_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
boost::python::docstring_options::show_user_defined_	/usr/include/boost/python/docstring_options.hpp	/^      static volatile bool show_user_defined_;$/;"	m	class:boost::python::docstring_options	access:private
boost::python::docstring_options::~docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      ~docstring_options()$/;"	f	class:boost::python::docstring_options	access:public	signature:()
boost::python::downcast	/usr/include/boost/python/cast.hpp	/^inline Target* downcast(Source* x, Target* = 0)$/;"	f	namespace:boost::python	signature:(Source* x, Target* = 0)
boost::python::enum_	/usr/include/boost/python/enum.hpp	/^struct enum_ : public objects::enum_base$/;"	s	namespace:boost::python	inherits:objects::enum_base
boost::python::enum_::base	/usr/include/boost/python/enum.hpp	/^    typedef objects::enum_base base;$/;"	t	struct:boost::python::enum_	access:public
boost::python::enum_::construct	/usr/include/boost/python/enum.hpp	/^    static void construct(PyObject* obj, converter::rvalue_from_python_stage1_data* data);$/;"	p	struct:boost::python::enum_	access:private	signature:(PyObject* obj, converter::rvalue_from_python_stage1_data* data)
boost::python::enum_::construct	/usr/include/boost/python/enum.hpp	/^void enum_<T>::construct(PyObject* obj, converter::rvalue_from_python_stage1_data* data)$/;"	f	class:boost::python::enum_	signature:(PyObject* obj, converter::rvalue_from_python_stage1_data* data)
boost::python::enum_::convertible_from_python	/usr/include/boost/python/enum.hpp	/^    static void* convertible_from_python(PyObject* obj);$/;"	p	struct:boost::python::enum_	access:private	signature:(PyObject* obj)
boost::python::enum_::convertible_from_python	/usr/include/boost/python/enum.hpp	/^void* enum_<T>::convertible_from_python(PyObject* obj)$/;"	f	class:boost::python::enum_	signature:(PyObject* obj)
boost::python::enum_::enum_	/usr/include/boost/python/enum.hpp	/^    enum_(char const* name, char const* doc = 0);$/;"	p	struct:boost::python::enum_	access:public	signature:(char const* name, char const* doc = 0)
boost::python::enum_::enum_	/usr/include/boost/python/enum.hpp	/^inline enum_<T>::enum_(char const* name, char const* doc )$/;"	f	class:boost::python::enum_	signature:(char const* name, char const* doc )
boost::python::enum_::export_values	/usr/include/boost/python/enum.hpp	/^    inline enum_<T>& export_values();$/;"	p	struct:boost::python::enum_	access:public	signature:()
boost::python::enum_::export_values	/usr/include/boost/python/enum.hpp	/^inline enum_<T>& enum_<T>::export_values()$/;"	f	class:boost::python::enum_	signature:()
boost::python::enum_::to_python	/usr/include/boost/python/enum.hpp	/^    static PyObject* to_python(void const* x);$/;"	p	struct:boost::python::enum_	access:private	signature:(void const* x)
boost::python::enum_::to_python	/usr/include/boost/python/enum.hpp	/^PyObject* enum_<T>::to_python(void const* x)$/;"	f	class:boost::python::enum_	signature:(void const* x)
boost::python::enum_::value	/usr/include/boost/python/enum.hpp	/^    inline enum_<T>& value(char const* name, T);$/;"	p	struct:boost::python::enum_	access:public	signature:(char const* name, T)
boost::python::enum_::value	/usr/include/boost/python/enum.hpp	/^inline enum_<T>& enum_<T>::value(char const* name, T x)$/;"	f	class:boost::python::enum_	signature:(char const* name, T x)
boost::python::error_already_set	/usr/include/boost/python/errors.hpp	/^struct BOOST_PYTHON_DECL_EXCEPTION error_already_set$/;"	s	namespace:boost::python
boost::python::error_already_set::~error_already_set	/usr/include/boost/python/errors.hpp	/^  virtual ~error_already_set();$/;"	p	struct:boost::python::error_already_set	access:public	signature:()
boost::python::error_messages	/usr/include/boost/python/object/pickle_support.hpp	/^namespace error_messages {$/;"	n	namespace:boost::python
boost::python::error_messages::missing_pickle_suite_function_or_incorrect_signature	/usr/include/boost/python/object/pickle_support.hpp	/^  struct missing_pickle_suite_function_or_incorrect_signature {};$/;"	s	namespace:boost::python::error_messages
boost::python::error_messages::must_be_derived_from_pickle_suite	/usr/include/boost/python/object/pickle_support.hpp	/^  inline void must_be_derived_from_pickle_suite(pickle_suite const&) {}$/;"	f	namespace:boost::python::error_messages	signature:(pickle_suite const&)
boost::python::eval	/usr/include/boost/python/exec.hpp	/^eval(str string, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str string, object global = object(), object local = object())
boost::python::exec	/usr/include/boost/python/exec.hpp	/^exec(str string, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str string, object global = object(), object local = object())
boost::python::exec_file	/usr/include/boost/python/exec.hpp	/^exec_file(str filename, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str filename, object global = object(), object local = object())
boost::python::exec_statement	/usr/include/boost/python/exec.hpp	/^exec_statement(str string, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str string, object global = object(), object local = object())
boost::python::expect_non_null	/usr/include/boost/python/errors.hpp	/^inline T* expect_non_null(T* x)$/;"	f	namespace:boost::python	signature:(T* x)
boost::python::extract	/usr/include/boost/python/extract.hpp	/^struct extract$/;"	s	namespace:boost::python	inherits:converter::select_extract::type
boost::python::extract::base	/usr/include/boost/python/extract.hpp	/^    typedef typename converter::select_extract<T>::type base;$/;"	t	struct:boost::python::extract	access:private
boost::python::extract::extract	/usr/include/boost/python/extract.hpp	/^    extract(PyObject*);$/;"	p	struct:boost::python::extract	access:public	signature:(PyObject*)
boost::python::extract::extract	/usr/include/boost/python/extract.hpp	/^    extract(api::object const&);$/;"	p	struct:boost::python::extract	access:public	signature:(api::object const&)
boost::python::extract::extract	/usr/include/boost/python/extract.hpp	/^inline extract<T>::extract(PyObject* o)$/;"	f	class:boost::python::extract	signature:(PyObject* o)
boost::python::extract::extract	/usr/include/boost/python/extract.hpp	/^inline extract<T>::extract(api::object const& o)$/;"	f	class:boost::python::extract	signature:(api::object const& o)
boost::python::extract::operator result_type	/usr/include/boost/python/extract.hpp	/^    operator result_type() const$/;"	f	struct:boost::python::extract	access:public	signature:() const
boost::python::extract::result_type	/usr/include/boost/python/extract.hpp	/^    typedef typename base::result_type result_type;$/;"	t	struct:boost::python::extract	access:public
boost::python::extract_identity	/usr/include/boost/python/lvalue_from_pytype.hpp	/^struct extract_identity$/;"	s	namespace:boost::python
boost::python::extract_identity::execute	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static InstanceType& execute(InstanceType& c)$/;"	f	struct:boost::python::extract_identity	access:public	signature:(InstanceType& c)
boost::python::extract_member	/usr/include/boost/python/lvalue_from_pytype.hpp	/^struct extract_member$/;"	s	namespace:boost::python
boost::python::extract_member::execute	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static MemberType& execute(InstanceType& c)$/;"	f	struct:boost::python::extract_member	access:public	signature:(InstanceType& c)
boost::python::get_managed_object	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^inline T* get_managed_object(detail::borrowed<T> const volatile* p, tag_t)$/;"	f	namespace:boost::python	signature:(detail::borrowed<T> const volatile* p, tag_t)
boost::python::get_managed_object	/usr/include/boost/python/handle.hpp	/^inline PyObject* get_managed_object(handle<T> const& h, tag_t)$/;"	f	namespace:boost::python	signature:(handle<T> const& h, tag_t)
boost::python::get_managed_object	/usr/include/boost/python/object_core.hpp	/^inline PyObject* get_managed_object(object const& x, tag_t)$/;"	f	namespace:boost::python	signature:(object const& x, tag_t)
boost::python::handle	/usr/include/boost/python/handle.hpp	/^class handle$/;"	c	namespace:boost::python
boost::python::handle::element_type	/usr/include/boost/python/handle.hpp	/^    typedef T element_type;$/;"	t	class:boost::python::handle	access:public
boost::python::handle::get	/usr/include/boost/python/handle.hpp	/^    T* get() const;$/;"	p	class:boost::python::handle	access:public	signature:() const
boost::python::handle::get	/usr/include/boost/python/handle.hpp	/^inline T* handle<T>::get() const$/;"	f	class:boost::python::handle	signature:() const
boost::python::handle::handle	/usr/include/boost/python/handle.hpp	/^    explicit handle(Y* p)$/;"	f	class:boost::python::handle	access:public	signature:(Y* p)
boost::python::handle::handle	/usr/include/boost/python/handle.hpp	/^    handle();$/;"	p	class:boost::python::handle	access:public	signature:()
boost::python::handle::handle	/usr/include/boost/python/handle.hpp	/^    handle(handle const& r)$/;"	f	class:boost::python::handle	access:public	signature:(handle const& r)
boost::python::handle::handle	/usr/include/boost/python/handle.hpp	/^    handle(handle<Y> const& r)$/;"	f	class:boost::python::handle	access:public	signature:(handle<Y> const& r)
boost::python::handle::handle	/usr/include/boost/python/handle.hpp	/^    inline handle(detail::borrowed_reference x)$/;"	f	class:boost::python::handle	access:public	signature:(detail::borrowed_reference x)
boost::python::handle::handle	/usr/include/boost/python/handle.hpp	/^inline handle<T>::handle()$/;"	f	class:boost::python::handle	signature:()
boost::python::handle::m_p	/usr/include/boost/python/handle.hpp	/^    T* m_p;$/;"	m	class:boost::python::handle	access:private
boost::python::handle::operator !	/usr/include/boost/python/handle.hpp	/^    bool operator! () const; \/\/ never throws$/;"	p	class:boost::python::handle	access:public	signature:() const
boost::python::handle::operator !	/usr/include/boost/python/handle.hpp	/^inline bool handle<T>::operator!() const$/;"	f	class:boost::python::handle	signature:() const
boost::python::handle::operator *	/usr/include/boost/python/handle.hpp	/^    T& operator* () const;$/;"	p	class:boost::python::handle	access:public	signature:() const
boost::python::handle::operator *	/usr/include/boost/python/handle.hpp	/^inline T& handle<T>::operator*() const$/;"	f	class:boost::python::handle	signature:() const
boost::python::handle::operator ->	/usr/include/boost/python/handle.hpp	/^    T* operator-> () const;$/;"	p	class:boost::python::handle	access:public	signature:() const
boost::python::handle::operator ->	/usr/include/boost/python/handle.hpp	/^inline T* handle<T>::operator->() const$/;"	f	class:boost::python::handle	signature:() const
boost::python::handle::operator =	/usr/include/boost/python/handle.hpp	/^    handle& operator=(handle const& r)$/;"	f	class:boost::python::handle	access:public	signature:(handle const& r)
boost::python::handle::operator =	/usr/include/boost/python/handle.hpp	/^    handle& operator=(handle<Y> const & r) \/\/ never throws$/;"	f	class:boost::python::handle	access:public	signature:(handle<Y> const & r)
boost::python::handle::operator bool_type	/usr/include/boost/python/handle.hpp	/^    operator bool_type() const \/\/ never throws$/;"	f	class:boost::python::handle	access:public	signature:() const
boost::python::handle::release	/usr/include/boost/python/handle.hpp	/^    T* release();$/;"	p	class:boost::python::handle	access:public	signature:()
boost::python::handle::release	/usr/include/boost/python/handle.hpp	/^inline T* handle<T>::release()$/;"	f	class:boost::python::handle	signature:()
boost::python::handle::reset	/usr/include/boost/python/handle.hpp	/^    void reset();$/;"	p	class:boost::python::handle	access:public	signature:()
boost::python::handle::reset	/usr/include/boost/python/handle.hpp	/^inline void handle<T>::reset()$/;"	f	class:boost::python::handle	signature:()
boost::python::handle::~handle	/usr/include/boost/python/handle.hpp	/^    ~handle();$/;"	p	class:boost::python::handle	access:public	signature:()
boost::python::handle::~handle	/usr/include/boost/python/handle.hpp	/^inline handle<T>::~handle()$/;"	f	class:boost::python::handle	signature:()
boost::python::handle_exception	/usr/include/boost/python/errors.hpp	/^bool handle_exception(T f)$/;"	f	namespace:boost::python	signature:(T f)
boost::python::handle_exception	/usr/include/boost/python/errors.hpp	/^inline void handle_exception()$/;"	f	namespace:boost::python	signature:()
boost::python::handle_exception_impl	/usr/include/boost/python/errors.hpp	/^BOOST_PYTHON_DECL bool handle_exception_impl(function0<void>);$/;"	p	namespace:boost::python	signature:(function0<void>)
boost::python::has_back_reference	/usr/include/boost/python/has_back_reference.hpp	/^struct has_back_reference$/;"	s	namespace:boost::python	inherits:mpl::false_
boost::python::implicitly_convertible	/usr/include/boost/python/implicit.hpp	/^void implicitly_convertible(boost::type<Source>* = 0, boost::type<Target>* = 0)$/;"	f	namespace:boost::python	signature:(boost::type<Source>* = 0, boost::type<Target>* = 0)
boost::python::import	/usr/include/boost/python/import.hpp	/^object BOOST_PYTHON_DECL import(str name);$/;"	p	namespace:boost::python	signature:(str name)
boost::python::incref	/usr/include/boost/python/refcount.hpp	/^inline T* incref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
boost::python::indexing_suite	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^    class indexing_suite$/;"	c	namespace:boost::python	inherits:def_visitor
boost::python::indexing_suite::base_contains	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_contains(Container& container, PyObject* key)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container, PyObject* key)
boost::python::indexing_suite::base_delete_item	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_delete_item(Container& container, PyObject* i)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container, PyObject* i)
boost::python::indexing_suite::base_get_item	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_get_item(back_reference<Container&> container, PyObject* i)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(back_reference<Container&> container, PyObject* i)
boost::python::indexing_suite::base_set_item	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_set_item(Container& container, PyObject* i, PyObject* v)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container, PyObject* i, PyObject* v)
boost::python::indexing_suite::base_size	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        base_size(Container& container)$/;"	f	class:boost::python::indexing_suite	access:private	signature:(Container& container)
boost::python::indexing_suite::container_element_t	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^            container_element_t;$/;"	t	class:boost::python::indexing_suite	access:private
boost::python::indexing_suite::def_iterator	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        def_iterator;$/;"	t	class:boost::python::indexing_suite	access:private
boost::python::indexing_suite::extension_def	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        extension_def(Class& cl)$/;"	f	class:boost::python::indexing_suite	access:public	signature:(Class& cl)
boost::python::indexing_suite::no_proxy	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        no_proxy;$/;"	t	class:boost::python::indexing_suite	access:private
boost::python::indexing_suite::proxy_handler	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        proxy_handler;$/;"	t	class:boost::python::indexing_suite	access:private
boost::python::indexing_suite::return_policy	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        struct return_policy : return_internal_reference<> {};$/;"	s	class:boost::python::indexing_suite	inherits:return_internal_reference	access:private
boost::python::indexing_suite::return_policy	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        typedef return_internal_reference<> return_policy;$/;"	t	class:boost::python::indexing_suite	access:private
boost::python::indexing_suite::slice_handler	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        slice_handler;$/;"	t	class:boost::python::indexing_suite	access:private
boost::python::indexing_suite::visit	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        void visit(Class& cl) const$/;"	f	class:boost::python::indexing_suite	access:public	signature:(Class& cl) const
boost::python::init	/usr/include/boost/python/init.hpp	/^class init : public init_base<init<BOOST_PYTHON_OVERLOAD_ARGS> >$/;"	c	namespace:boost::python	inherits:init_base
boost::python::init::back_is_optional	/usr/include/boost/python/init.hpp	/^    > back_is_optional;$/;"	t	class:boost::python::init	access:public
boost::python::init::base	/usr/include/boost/python/init.hpp	/^    typedef init_base<init<BOOST_PYTHON_OVERLOAD_ARGS> > base;$/;"	t	class:boost::python::init	access:private
boost::python::init::init	/usr/include/boost/python/init.hpp	/^    init(char const* doc_ = 0)$/;"	f	class:boost::python::init	access:public	signature:(char const* doc_ = 0)
boost::python::init::init	/usr/include/boost/python/init.hpp	/^    init(char const* doc_, detail::keywords<N> const& kw)$/;"	f	class:boost::python::init	access:public	signature:(char const* doc_, detail::keywords<N> const& kw)
boost::python::init::init	/usr/include/boost/python/init.hpp	/^    init(detail::keywords<N> const& kw, char const* doc_ = 0)$/;"	f	class:boost::python::init	access:public	signature:(detail::keywords<N> const& kw, char const* doc_ = 0)
boost::python::init::n_arguments	/usr/include/boost/python/init.hpp	/^    typedef mpl::size<signature> n_arguments;$/;"	t	class:boost::python::init	access:public
boost::python::init::n_defaults	/usr/include/boost/python/init.hpp	/^    typedef mpl::size<optional_args> n_defaults;$/;"	t	class:boost::python::init	access:public
boost::python::init::operator []	/usr/include/boost/python/init.hpp	/^    operator[](CallPoliciesT const& policies) const$/;"	f	class:boost::python::init	access:public	signature:(CallPoliciesT const& policies) const
boost::python::init::optional_args	/usr/include/boost/python/init.hpp	/^    >::type optional_args;$/;"	t	class:boost::python::init	access:public
boost::python::init::self_t	/usr/include/boost/python/init.hpp	/^    typedef init<BOOST_PYTHON_OVERLOAD_ARGS> self_t;$/;"	t	class:boost::python::init	access:public
boost::python::init::signature	/usr/include/boost/python/init.hpp	/^    >::type signature;$/;"	t	class:boost::python::init	access:public
boost::python::init::signature_	/usr/include/boost/python/init.hpp	/^    typedef detail::type_list<BOOST_PYTHON_OVERLOAD_ARGS> signature_;$/;"	t	class:boost::python::init	access:public
boost::python::init_base	/usr/include/boost/python/init.hpp	/^struct init_base : def_visitor<DerivedT>$/;"	s	namespace:boost::python	inherits:def_visitor
boost::python::init_base::call_policies	/usr/include/boost/python/init.hpp	/^    static default_call_policies call_policies()$/;"	f	struct:boost::python::init_base	access:public	signature:()
boost::python::init_base::derived	/usr/include/boost/python/init.hpp	/^    DerivedT const& derived() const$/;"	f	struct:boost::python::init_base	access:public	signature:() const
boost::python::init_base::detail::keywords	/usr/include/boost/python/init.hpp	/^    detail::keyword_range const& keywords() const$/;"	f	class:boost::python::init_base::detail	access:public	signature:() const
boost::python::init_base::doc_string	/usr/include/boost/python/init.hpp	/^    char const* doc_string() const$/;"	f	struct:boost::python::init_base	access:public	signature:() const
boost::python::init_base::init_base	/usr/include/boost/python/init.hpp	/^    init_base(char const* doc_)$/;"	f	struct:boost::python::init_base	access:public	signature:(char const* doc_)
boost::python::init_base::init_base	/usr/include/boost/python/init.hpp	/^    init_base(char const* doc_, detail::keyword_range const& keywords_)$/;"	f	struct:boost::python::init_base	access:public	signature:(char const* doc_, detail::keyword_range const& keywords_)
boost::python::init_base::m_doc	/usr/include/boost/python/init.hpp	/^    char const* m_doc;$/;"	m	struct:boost::python::init_base	access:private
boost::python::init_base::m_keywords	/usr/include/boost/python/init.hpp	/^    detail::keyword_range m_keywords;$/;"	m	struct:boost::python::init_base	access:private
boost::python::init_base::visit	/usr/include/boost/python/init.hpp	/^    void visit(classT& cl) const$/;"	f	struct:boost::python::init_base	access:private	signature:(classT& cl) const
boost::python::init_with_call_policies	/usr/include/boost/python/init.hpp	/^class init_with_call_policies$/;"	c	namespace:boost::python	inherits:init_base
boost::python::init_with_call_policies::base	/usr/include/boost/python/init.hpp	/^    typedef init_base<init_with_call_policies<CallPoliciesT, InitT> > base;$/;"	t	class:boost::python::init_with_call_policies	access:private
boost::python::init_with_call_policies::call_policies	/usr/include/boost/python/init.hpp	/^    CallPoliciesT const& call_policies() const$/;"	f	class:boost::python::init_with_call_policies	access:public	signature:() const
boost::python::init_with_call_policies::init_with_call_policies	/usr/include/boost/python/init.hpp	/^    init_with_call_policies($/;"	f	class:boost::python::init_with_call_policies	access:public	signature:( CallPoliciesT const& policies_ , char const* doc_ , detail::keyword_range const& keywords )
boost::python::init_with_call_policies::m_policies	/usr/include/boost/python/init.hpp	/^    CallPoliciesT m_policies;$/;"	m	class:boost::python::init_with_call_policies	access:private
boost::python::init_with_call_policies::n_arguments	/usr/include/boost/python/init.hpp	/^    typedef typename InitT::n_arguments n_arguments;$/;"	t	class:boost::python::init_with_call_policies	access:public
boost::python::init_with_call_policies::n_defaults	/usr/include/boost/python/init.hpp	/^    typedef typename InitT::n_defaults n_defaults;$/;"	t	class:boost::python::init_with_call_policies	access:public
boost::python::init_with_call_policies::signature	/usr/include/boost/python/init.hpp	/^    typedef typename InitT::signature signature;$/;"	t	class:boost::python::init_with_call_policies	access:public
boost::python::instance_holder	/usr/include/boost/python/instance_holder.hpp	/^struct BOOST_PYTHON_DECL instance_holder : private noncopyable$/;"	s	namespace:boost::python	inherits:noncopyable
boost::python::instance_holder	/usr/include/boost/python/object/instance.hpp	/^  struct BOOST_PYTHON_DECL_FORWARD instance_holder;$/;"	m	namespace:boost::python	typeref:struct:boost::python::BOOST_PYTHON_DECL_FORWARD
boost::python::instance_holder::allocate	/usr/include/boost/python/instance_holder.hpp	/^    static void* allocate(PyObject*, std::size_t offset, std::size_t size);$/;"	p	struct:boost::python::instance_holder	access:public	signature:(PyObject*, std::size_t offset, std::size_t size)
boost::python::instance_holder::deallocate	/usr/include/boost/python/instance_holder.hpp	/^    static void deallocate(PyObject*, void* storage) throw();$/;"	p	struct:boost::python::instance_holder	access:public	signature:(PyObject*, void* storage)
boost::python::instance_holder::holds	/usr/include/boost/python/instance_holder.hpp	/^    virtual void* holds(type_info, bool null_ptr_only) = 0;$/;"	p	struct:boost::python::instance_holder	access:public	signature:(type_info, bool null_ptr_only)
boost::python::instance_holder::install	/usr/include/boost/python/instance_holder.hpp	/^    void install(PyObject* inst) throw();$/;"	p	struct:boost::python::instance_holder	access:public	signature:(PyObject* inst)
boost::python::instance_holder::instance_holder	/usr/include/boost/python/instance_holder.hpp	/^    instance_holder();$/;"	p	struct:boost::python::instance_holder	access:public	signature:()
boost::python::instance_holder::m_next	/usr/include/boost/python/instance_holder.hpp	/^    instance_holder* m_next;$/;"	m	struct:boost::python::instance_holder	access:private
boost::python::instance_holder::next	/usr/include/boost/python/instance_holder.hpp	/^    instance_holder* next() const;$/;"	p	struct:boost::python::instance_holder	access:public	signature:() const
boost::python::instance_holder::next	/usr/include/boost/python/instance_holder.hpp	/^inline instance_holder* instance_holder::next() const$/;"	f	class:boost::python::instance_holder	signature:() const
boost::python::instance_holder::~instance_holder	/usr/include/boost/python/instance_holder.hpp	/^    virtual ~instance_holder();$/;"	p	struct:boost::python::instance_holder	access:public	signature:()
boost::python::is_back_reference	/usr/include/boost/python/back_reference.hpp	/^class is_back_reference$/;"	c	namespace:boost::python
boost::python::is_back_reference	/usr/include/boost/python/back_reference.hpp	/^class is_back_reference<back_reference<T> >$/;"	c	namespace:boost::python
boost::python::is_back_reference::BOOST_STATIC_CONSTANT	/usr/include/boost/python/back_reference.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::is_back_reference	access:public	signature:( bool, value = ( sizeof(detail::is_back_reference_test(boost::type<T>())) == sizeof(detail::yes_back_reference_t)))
boost::python::is_back_reference::BOOST_STATIC_CONSTANT	/usr/include/boost/python/back_reference.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	class:boost::python::is_back_reference	access:public	signature:(bool, value = false)
boost::python::is_back_reference::BOOST_STATIC_CONSTANT	/usr/include/boost/python/back_reference.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	class:boost::python::is_back_reference	access:public	signature:(bool, value = true)
boost::python::is_handle	/usr/include/boost/python/handle.hpp	/^class is_handle$/;"	c	namespace:boost::python
boost::python::is_handle	/usr/include/boost/python/handle.hpp	/^class is_handle<handle<T> >$/;"	c	namespace:boost::python
boost::python::is_handle::BOOST_STATIC_CONSTANT	/usr/include/boost/python/handle.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::is_handle	access:public	signature:( bool, value = ( sizeof(detail::is_handle_test(boost::type<T>())) == sizeof(detail::yes_handle_t)))
boost::python::is_handle::BOOST_STATIC_CONSTANT	/usr/include/boost/python/handle.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = false); $/;"	p	class:boost::python::is_handle	access:public	signature:(bool, value = false)
boost::python::is_handle::BOOST_STATIC_CONSTANT	/usr/include/boost/python/handle.hpp	/^    BOOST_STATIC_CONSTANT(bool, value = true);$/;"	p	class:boost::python::is_handle	access:public	signature:(bool, value = true)
boost::python::is_pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^class is_pointer_wrapper$/;"	c	namespace:boost::python
boost::python::is_pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^class is_pointer_wrapper$/;"	c	namespace:boost::python	inherits:mpl::false_
boost::python::is_pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^class is_pointer_wrapper<pointer_wrapper<T> >$/;"	c	namespace:boost::python	inherits:mpl::true_
boost::python::is_pointer_wrapper::BOOST_STATIC_CONSTANT	/usr/include/boost/python/ptr.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	class:boost::python::is_pointer_wrapper	access:public	signature:( bool, value = ( sizeof(detail::is_pointer_wrapper_test(boost::type<T>())) == sizeof(detail::yes_pointer_wrapper_t)))
boost::python::is_pointer_wrapper::type	/usr/include/boost/python/ptr.hpp	/^    typedef mpl::bool_<value> type;$/;"	t	class:boost::python::is_pointer_wrapper	access:public
boost::python::iterator	/usr/include/boost/python/iterator.hpp	/^struct iterator : object$/;"	s	namespace:boost::python	inherits:object
boost::python::iterator::iterator	/usr/include/boost/python/iterator.hpp	/^    iterator()$/;"	f	struct:boost::python::iterator	access:public	signature:()
boost::python::iterators	/usr/include/boost/python/iterator.hpp	/^struct iterators$/;"	s	namespace:boost::python	inherits:detail::iterators_impl::,apply
boost::python::len	/usr/include/boost/python/object.hpp	/^    inline ssize_t len(object const& obj)$/;"	f	namespace:boost::python	signature:(object const& obj)
boost::python::list	/usr/include/boost/python/list.hpp	/^class list : public detail::list_base$/;"	c	namespace:boost::python	inherits:detail::list_base
boost::python::list::append	/usr/include/boost/python/list.hpp	/^    void append(T const& x)$/;"	f	class:boost::python::list	access:public	signature:(T const& x)
boost::python::list::base	/usr/include/boost/python/list.hpp	/^    typedef detail::list_base base;$/;"	t	class:boost::python::list	access:private
boost::python::list::count	/usr/include/boost/python/list.hpp	/^    long count(T const& value) const$/;"	f	class:boost::python::list	access:public	signature:(T const& value) const
boost::python::list::extend	/usr/include/boost/python/list.hpp	/^    void extend(T const& x)$/;"	f	class:boost::python::list	access:public	signature:(T const& x)
boost::python::list::index	/usr/include/boost/python/list.hpp	/^    long index(T const& x) const$/;"	f	class:boost::python::list	access:public	signature:(T const& x) const
boost::python::list::insert	/usr/include/boost/python/list.hpp	/^    void insert(object const& index, T const& x) \/\/ insert object before index$/;"	f	class:boost::python::list	access:public	signature:(object const& index, T const& x)
boost::python::list::insert	/usr/include/boost/python/list.hpp	/^    void insert(ssize_t index, T const& x) \/\/ insert object before index$/;"	f	class:boost::python::list	access:public	signature:(ssize_t index, T const& x)
boost::python::list::list	/usr/include/boost/python/list.hpp	/^    explicit list(T const& sequence)$/;"	f	class:boost::python::list	access:public	signature:(T const& sequence)
boost::python::list::list	/usr/include/boost/python/list.hpp	/^    list() {} \/\/ new list$/;"	f	class:boost::python::list	access:public	signature:()
boost::python::list::pop	/usr/include/boost/python/list.hpp	/^    object pop() { return base::pop(); }$/;"	f	class:boost::python::list	access:public	signature:()
boost::python::list::pop	/usr/include/boost/python/list.hpp	/^    object pop(T const& index)$/;"	f	class:boost::python::list	access:public	signature:(T const& index)
boost::python::list::pop	/usr/include/boost/python/list.hpp	/^    object pop(ssize_t index) { return base::pop(index); }$/;"	f	class:boost::python::list	access:public	signature:(ssize_t index)
boost::python::list::remove	/usr/include/boost/python/list.hpp	/^    void remove(T const& value)$/;"	f	class:boost::python::list	access:public	signature:(T const& value)
boost::python::list::sort	/usr/include/boost/python/list.hpp	/^    void sort() { base::sort(); }$/;"	f	class:boost::python::list	access:public	signature:()
boost::python::list::sort	/usr/include/boost/python/list.hpp	/^    void sort(T const& value)$/;"	f	class:boost::python::list	access:public	signature:(T const& value)
boost::python::long_	/usr/include/boost/python/long.hpp	/^class long_ : public detail::long_base$/;"	c	namespace:boost::python	inherits:detail::long_base
boost::python::long_::base	/usr/include/boost/python/long.hpp	/^    typedef detail::long_base base;$/;"	t	class:boost::python::long_	access:private
boost::python::long_::long_	/usr/include/boost/python/long.hpp	/^    explicit long_(T const& rhs)$/;"	f	class:boost::python::long_	access:public	signature:(T const& rhs)
boost::python::long_::long_	/usr/include/boost/python/long.hpp	/^    explicit long_(T const& rhs, U const& base)$/;"	f	class:boost::python::long_	access:public	signature:(T const& rhs, U const& base)
boost::python::long_::long_	/usr/include/boost/python/long.hpp	/^    long_() {} \/\/ new long_$/;"	f	class:boost::python::long_	access:public	signature:()
boost::python::lvalue_from_pytype	/usr/include/boost/python/lvalue_from_pytype.hpp	/^struct lvalue_from_pytype $/;"	s	namespace:boost::python
boost::python::lvalue_from_pytype::extract	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static void* extract(PyObject* op)$/;"	f	struct:boost::python::lvalue_from_pytype	access:private	signature:(PyObject* op)
boost::python::lvalue_from_pytype::get_pytype	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static PyTypeObject const*get_pytype() { return python_type; }$/;"	f	struct:boost::python::lvalue_from_pytype	access:private	signature:()
boost::python::lvalue_from_pytype::lvalue_from_pytype	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    lvalue_from_pytype()$/;"	f	struct:boost::python::lvalue_from_pytype	access:public	signature:()
boost::python::make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , Keywords const& kw , Signature const& sig )
boost::python::make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , KeywordsOrSignature const& keywords_or_signature)
boost::python::make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor(F f)$/;"	f	namespace:boost::python	signature:(F f)
boost::python::make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor(F f, CallPolicies const& policies)$/;"	f	namespace:boost::python	signature:(F f, CallPolicies const& policies)
boost::python::make_function	/usr/include/boost/python/make_function.hpp	/^object make_function($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , Keywords const& kw , Signature const& sig )
boost::python::make_function	/usr/include/boost/python/make_function.hpp	/^object make_function($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , KeywordsOrSignature const& keywords_or_signature)
boost::python::make_function	/usr/include/boost/python/make_function.hpp	/^object make_function(F f)$/;"	f	namespace:boost::python	signature:(F f)
boost::python::make_function	/usr/include/boost/python/make_function.hpp	/^object make_function(F f, CallPolicies const& policies)$/;"	f	namespace:boost::python	signature:(F f, CallPolicies const& policies)
boost::python::make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D const& d)$/;"	f	namespace:boost::python	signature:(D const& d)
boost::python::make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D const& d, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D const& d, Policies const& policies)
boost::python::make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D& d, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D& d, Policies const& policies)
boost::python::make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D& x)$/;"	f	namespace:boost::python	signature:(D& x)
boost::python::make_instance_reduce_function	/usr/include/boost/python/object/pickle_support.hpp	/^BOOST_PYTHON_DECL object const& make_instance_reduce_function();$/;"	p	namespace:boost::python	signature:()
boost::python::make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D const& x)$/;"	f	namespace:boost::python	signature:(D const& x)
boost::python::make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D const& x, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D const& x, Policies const& policies)
boost::python::make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D& x)$/;"	f	namespace:boost::python	signature:(D& x)
boost::python::make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D& x, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D& x, Policies const& policies)
boost::python::make_tuple	/usr/include/boost/python/tuple.hpp	/^inline tuple make_tuple() { return tuple(); }$/;"	f	namespace:boost::python	signature:()
boost::python::manage_new_object	/usr/include/boost/python/manage_new_object.hpp	/^struct manage_new_object$/;"	s	namespace:boost::python
boost::python::manage_new_object::apply	/usr/include/boost/python/manage_new_object.hpp	/^    struct apply$/;"	s	struct:boost::python::manage_new_object	access:public
boost::python::manage_new_object::apply::type	/usr/include/boost/python/manage_new_object.hpp	/^        >::type type;$/;"	t	struct:boost::python::manage_new_object::apply	access:public
boost::python::map_indexing_suite	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^    class map_indexing_suite$/;"	c	namespace:boost::python	inherits:indexing_suite
boost::python::map_indexing_suite::compare_index	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        compare_index(Container& container, index_type a, index_type b)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type a, index_type b)
boost::python::map_indexing_suite::contains	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        contains(Container& container, key_type const& key)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, key_type const& key)
boost::python::map_indexing_suite::convert_index	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        convert_index(Container& \/*container*\/, PyObject* i_)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& , PyObject* i_)
boost::python::map_indexing_suite::data_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::value_type::second_type data_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
boost::python::map_indexing_suite::delete_item	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        delete_item(Container& container, index_type i)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type i)
boost::python::map_indexing_suite::difference_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::difference_type difference_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
boost::python::map_indexing_suite::extension_def	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        extension_def(Class& cl)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Class& cl)
boost::python::map_indexing_suite::get_data	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        get_data(typename Container::value_type& e)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(typename Container::value_type& e)
boost::python::map_indexing_suite::get_item	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        get_item(Container& container, index_type i_)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type i_)
boost::python::map_indexing_suite::get_key	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        get_key(typename Container::value_type& e)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(typename Container::value_type& e)
boost::python::map_indexing_suite::index_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::key_type index_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
boost::python::map_indexing_suite::key_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::key_type key_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
boost::python::map_indexing_suite::print_elem	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        print_elem(typename Container::value_type const& e)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(typename Container::value_type const& e)
boost::python::map_indexing_suite::set_item	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        set_item(Container& container, index_type i, data_type const& v)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type i, data_type const& v)
boost::python::map_indexing_suite::size	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        size(Container& container)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container)
boost::python::map_indexing_suite::size_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::size_type size_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
boost::python::map_indexing_suite::value_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::value_type value_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
boost::python::no_init	/usr/include/boost/python/class.hpp	/^enum no_init_t { no_init };$/;"	e	enum:boost::python::no_init_t
boost::python::no_init_t	/usr/include/boost/python/class.hpp	/^enum no_init_t { no_init };$/;"	g	namespace:boost::python
boost::python::numeric	/usr/include/boost/python/numeric.hpp	/^namespace boost { namespace python { namespace numeric {$/;"	n	namespace:boost::python
boost::python::numeric::array	/usr/include/boost/python/numeric.hpp	/^class array : public aux::array_base$/;"	c	namespace:boost::python::numeric	inherits:aux::array_base
boost::python::numeric::array::BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS	/usr/include/boost/python/numeric.hpp	/^    BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS(array, base);$/;"	p	class:boost::python::numeric::array	access:public	signature:(array, base)
boost::python::numeric::array::astype	/usr/include/boost/python/numeric.hpp	/^    object astype() { return base::astype(); }$/;"	f	class:boost::python::numeric::array	access:public	signature:()
boost::python::numeric::array::astype	/usr/include/boost/python/numeric.hpp	/^    object astype(Type const& type_)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Type const& type_)
boost::python::numeric::array::base	/usr/include/boost/python/numeric.hpp	/^    typedef aux::array_base base;$/;"	t	class:boost::python::numeric::array	access:private
boost::python::numeric::array::factory	/usr/include/boost/python/numeric.hpp	/^    object factory($/;"	f	class:boost::python::numeric::array	access:public	signature:( Sequence const& sequence , Typecode const& typecode_ , bool copy , bool savespace , Type const& type )
boost::python::numeric::array::factory	/usr/include/boost/python/numeric.hpp	/^    object factory($/;"	f	class:boost::python::numeric::array	access:public	signature:( Sequence const& sequence , Typecode const& typecode_ , bool copy , bool savespace , Type const& type , Shape const& shape )
boost::python::numeric::array::factory	/usr/include/boost/python/numeric.hpp	/^    object factory($/;"	f	class:boost::python::numeric::array	access:public	signature:( Sequence const& sequence , Typecode const& typecode_ , bool copy = true , bool savespace = false )
boost::python::numeric::array::factory	/usr/include/boost/python/numeric.hpp	/^    object factory()$/;"	f	class:boost::python::numeric::array	access:public	signature:()
boost::python::numeric::array::factory	/usr/include/boost/python/numeric.hpp	/^    object factory(Sequence const& sequence)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& sequence)
boost::python::numeric::array::get_module_name	/usr/include/boost/python/numeric.hpp	/^    static BOOST_PYTHON_DECL std::string get_module_name();$/;"	p	class:boost::python::numeric::array	access:public	signature:()
boost::python::numeric::array::new_	/usr/include/boost/python/numeric.hpp	/^    array new_(Type const& type_) const$/;"	f	class:boost::python::numeric::array	access:public	signature:(Type const& type_) const
boost::python::numeric::array::put	/usr/include/boost/python/numeric.hpp	/^    void put(Indices const& indices, Values const& values)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Indices const& indices, Values const& values)
boost::python::numeric::array::resize	/usr/include/boost/python/numeric.hpp	/^    void resize(Sequence const& x)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& x)
boost::python::numeric::array::set_module_and_type	/usr/include/boost/python/numeric.hpp	/^    static BOOST_PYTHON_DECL void set_module_and_type(char const* package_name = 0, char const* type_attribute_name = 0);$/;"	p	class:boost::python::numeric::array	access:public	signature:(char const* package_name = 0, char const* type_attribute_name = 0)
boost::python::numeric::array::setshape	/usr/include/boost/python/numeric.hpp	/^    void setshape(Sequence const& x)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& x)
boost::python::numeric::array::take	/usr/include/boost/python/numeric.hpp	/^    object take(Sequence const& sequence, long axis = 0)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& sequence, long axis = 0)
boost::python::numeric::array::tofile	/usr/include/boost/python/numeric.hpp	/^    void tofile(File const& f) const$/;"	f	class:boost::python::numeric::array	access:public	signature:(File const& f) const
boost::python::numeric::aux	/usr/include/boost/python/numeric.hpp	/^namespace aux$/;"	n	namespace:boost::python::numeric
boost::python::numeric::aux::array_base	/usr/include/boost/python/numeric.hpp	/^  struct BOOST_PYTHON_DECL array_base : object$/;"	s	namespace:boost::python::numeric::aux	inherits:object
boost::python::numeric::aux::array_base::BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS	/usr/include/boost/python/numeric.hpp	/^      BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS(array_base, object);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(array_base, object)
boost::python::numeric::aux::array_base::argmax	/usr/include/boost/python/numeric.hpp	/^      object argmax(long axis=-1);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis=-1)
boost::python::numeric::aux::array_base::argmin	/usr/include/boost/python/numeric.hpp	/^      object argmin(long axis=-1);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis=-1)
boost::python::numeric::aux::array_base::argsort	/usr/include/boost/python/numeric.hpp	/^      object argsort(long axis=-1);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis=-1)
boost::python::numeric::aux::array_base::astype	/usr/include/boost/python/numeric.hpp	/^      object astype(object const& type = object());$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& type = object())
boost::python::numeric::aux::array_base::byteswap	/usr/include/boost/python/numeric.hpp	/^      void byteswap();$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:()
boost::python::numeric::aux::array_base::copy	/usr/include/boost/python/numeric.hpp	/^      object copy() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::diagonal	/usr/include/boost/python/numeric.hpp	/^      object diagonal(long offset = 0, long axis1 = 0, long axis2 = 1) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long offset = 0, long axis1 = 0, long axis2 = 1) const
boost::python::numeric::aux::array_base::factory	/usr/include/boost/python/numeric.hpp	/^      object factory($/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:( object const& sequence = object() , object const& typecode = object() , bool copy = true , bool savespace = false , object type = object() , object shape = object())
boost::python::numeric::aux::array_base::getflat	/usr/include/boost/python/numeric.hpp	/^      object getflat() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::getrank	/usr/include/boost/python/numeric.hpp	/^      long getrank() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::getshape	/usr/include/boost/python/numeric.hpp	/^      object getshape() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::info	/usr/include/boost/python/numeric.hpp	/^      void info() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::is_c_array	/usr/include/boost/python/numeric.hpp	/^      bool is_c_array() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::isaligned	/usr/include/boost/python/numeric.hpp	/^      bool isaligned() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::isbyteswapped	/usr/include/boost/python/numeric.hpp	/^      bool isbyteswapped() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::iscontiguous	/usr/include/boost/python/numeric.hpp	/^      bool iscontiguous() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::itemsize	/usr/include/boost/python/numeric.hpp	/^      long itemsize() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::nelements	/usr/include/boost/python/numeric.hpp	/^      long nelements() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::new_	/usr/include/boost/python/numeric.hpp	/^      array new_(object type) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object type) const
boost::python::numeric::aux::array_base::nonzero	/usr/include/boost/python/numeric.hpp	/^      object nonzero() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::put	/usr/include/boost/python/numeric.hpp	/^      void put(object const& indices, object const& values);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& indices, object const& values)
boost::python::numeric::aux::array_base::ravel	/usr/include/boost/python/numeric.hpp	/^      void ravel();$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:()
boost::python::numeric::aux::array_base::repeat	/usr/include/boost/python/numeric.hpp	/^      object repeat(object const& repeats, long axis=0);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& repeats, long axis=0)
boost::python::numeric::aux::array_base::resize	/usr/include/boost/python/numeric.hpp	/^      void resize(object const& shape);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& shape)
boost::python::numeric::aux::array_base::setflat	/usr/include/boost/python/numeric.hpp	/^      void setflat(object const& flat);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& flat)
boost::python::numeric::aux::array_base::setshape	/usr/include/boost/python/numeric.hpp	/^      void setshape(object const& shape);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& shape)
boost::python::numeric::aux::array_base::sort	/usr/include/boost/python/numeric.hpp	/^      void sort();$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:()
boost::python::numeric::aux::array_base::swapaxes	/usr/include/boost/python/numeric.hpp	/^      void swapaxes(long axis1, long axis2);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis1, long axis2)
boost::python::numeric::aux::array_base::take	/usr/include/boost/python/numeric.hpp	/^      object take(object const& sequence, long axis = 0) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& sequence, long axis = 0) const
boost::python::numeric::aux::array_base::tofile	/usr/include/boost/python/numeric.hpp	/^      void tofile(object const& file) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& file) const
boost::python::numeric::aux::array_base::tostring	/usr/include/boost/python/numeric.hpp	/^      str tostring() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::trace	/usr/include/boost/python/numeric.hpp	/^      object trace(long offset = 0, long axis1 = 0, long axis2 = 1) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long offset = 0, long axis1 = 0, long axis2 = 1) const
boost::python::numeric::aux::array_base::transpose	/usr/include/boost/python/numeric.hpp	/^      void transpose(object const& axes = object());$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& axes = object())
boost::python::numeric::aux::array_base::type	/usr/include/boost/python/numeric.hpp	/^      object type() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::typecode	/usr/include/boost/python/numeric.hpp	/^      char typecode() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_base::view	/usr/include/boost/python/numeric.hpp	/^      object view() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
boost::python::numeric::aux::array_object_manager_traits	/usr/include/boost/python/numeric.hpp	/^  struct BOOST_PYTHON_DECL array_object_manager_traits$/;"	s	namespace:boost::python::numeric::aux
boost::python::numeric::aux::array_object_manager_traits::adopt	/usr/include/boost/python/numeric.hpp	/^      static detail::new_non_null_reference adopt(PyObject* obj);$/;"	p	struct:boost::python::numeric::aux::array_object_manager_traits	access:public	signature:(PyObject* obj)
boost::python::numeric::aux::array_object_manager_traits::check	/usr/include/boost/python/numeric.hpp	/^      static bool check(PyObject* obj);$/;"	p	struct:boost::python::numeric::aux::array_object_manager_traits	access:public	signature:(PyObject* obj)
boost::python::numeric::aux::array_object_manager_traits::get_pytype	/usr/include/boost/python/numeric.hpp	/^      static PyTypeObject const* get_pytype() ;$/;"	p	struct:boost::python::numeric::aux::array_object_manager_traits	access:public	signature:()
boost::python::object::object	/usr/include/boost/python/object_core.hpp	/^inline object::object()$/;"	f	class:boost::python::object	signature:()
boost::python::object::object	/usr/include/boost/python/object_core.hpp	/^inline object::object(detail::borrowed_reference p)$/;"	f	class:boost::python::object	signature:(detail::borrowed_reference p)
boost::python::object::object	/usr/include/boost/python/object_core.hpp	/^inline object::object(detail::new_non_null_reference p)$/;"	f	class:boost::python::object	signature:(detail::new_non_null_reference p)
boost::python::object::object	/usr/include/boost/python/object_core.hpp	/^inline object::object(detail::new_reference p)$/;"	f	class:boost::python::object	signature:(detail::new_reference p)
boost::python::objects	/usr/include/boost/python/detail/defaults_def.hpp	/^namespace objects$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/add_to_namespace.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/class.hpp	/^namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/class_detail.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/class_metadata.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/class_wrapper.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/enum_base.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/find_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/forward.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/function.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/function_doc_signature.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/function_handle.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/function_object.hpp	/^namespace objects$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/inheritance.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/inheritance_query.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/iterator.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/life_support.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/make_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/make_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/make_ptr_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/py_function.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/stl_iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/value_holder.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects	/usr/include/boost/python/object/value_holder_fwd.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
boost::python::objects::add_cast	/usr/include/boost/python/object/inheritance.hpp	/^BOOST_PYTHON_DECL void add_cast($/;"	p	namespace:boost::python::objects	signature:( class_id src_t, class_id dst_t, void* (*cast)(void*), bool is_downcast)
boost::python::objects::add_to_namespace	/usr/include/boost/python/object/add_to_namespace.hpp	/^BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute)
boost::python::objects::add_to_namespace	/usr/include/boost/python/object/add_to_namespace.hpp	/^BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute, char const* doc)
boost::python::objects::add_to_namespace	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute)
boost::python::objects::add_to_namespace	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL void add_to_namespace($/;"	p	namespace:boost::python::objects	signature:( object const& name_space, char const* name, object const& attribute, char const* doc)
boost::python::objects::additional_instance_size	/usr/include/boost/python/object/instance.hpp	/^struct additional_instance_size$/;"	s	namespace:boost::python::objects
boost::python::objects::additional_instance_size::BOOST_STATIC_CONSTANT	/usr/include/boost/python/object/instance.hpp	/^    BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::objects::additional_instance_size	access:public	signature:( std::size_t, value = sizeof(instance_data) - BOOST_PYTHON_OFFSETOF(instance_char,storage))
boost::python::objects::additional_instance_size::instance_char	/usr/include/boost/python/object/instance.hpp	/^    typedef instance<char> instance_char;$/;"	t	struct:boost::python::objects::additional_instance_size	access:public
boost::python::objects::additional_instance_size::instance_data	/usr/include/boost/python/object/instance.hpp	/^    typedef instance<Data> instance_data;$/;"	t	struct:boost::python::objects::additional_instance_size	access:public
boost::python::objects::caller_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^struct caller_py_function_impl : py_function_impl_base$/;"	s	namespace:boost::python::objects	inherits:py_function_impl_base
boost::python::objects::caller_py_function_impl::caller_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^    caller_py_function_impl(Caller const& caller)$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:(Caller const& caller)
boost::python::objects::caller_py_function_impl::m_caller	/usr/include/boost/python/object/py_function.hpp	/^    Caller m_caller;$/;"	m	struct:boost::python::objects::caller_py_function_impl	access:private
boost::python::objects::caller_py_function_impl::min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:() const
boost::python::objects::caller_py_function_impl::operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw)$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:(PyObject* args, PyObject* kw)
boost::python::objects::caller_py_function_impl::signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:() const
boost::python::objects::cast_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct cast_generator$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
boost::python::objects::class_base	/usr/include/boost/python/object/class.hpp	/^struct BOOST_PYTHON_DECL class_base : python::api::object$/;"	s	namespace:boost::python::objects	inherits:python::api::object
boost::python::objects::class_base::add_property	/usr/include/boost/python/object/class.hpp	/^    void add_property($/;"	p	struct:boost::python::objects::class_base	access:protected	signature:( char const* name, object const& fget, char const* docstr)
boost::python::objects::class_base::add_property	/usr/include/boost/python/object/class.hpp	/^    void add_property(char const* name, $/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const& fget, object const& fset, char const* docstr)
boost::python::objects::class_base::add_static_property	/usr/include/boost/python/object/class.hpp	/^    void add_static_property(char const* name, object const& fget);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const& fget)
boost::python::objects::class_base::add_static_property	/usr/include/boost/python/object/class.hpp	/^    void add_static_property(char const* name, object const& fget, object const& fset);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const& fget, object const& fset)
boost::python::objects::class_base::class_base	/usr/include/boost/python/object/class.hpp	/^    class_base($/;"	p	struct:boost::python::objects::class_base	access:public	signature:( char const* name , std::size_t num_types , type_info const*const types , char const* doc = 0 )
boost::python::objects::class_base::def_no_init	/usr/include/boost/python/object/class.hpp	/^    void def_no_init();$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:()
boost::python::objects::class_base::enable_pickling_	/usr/include/boost/python/object/class.hpp	/^    void enable_pickling_(bool getstate_manages_dict);$/;"	p	struct:boost::python::objects::class_base	access:public	signature:(bool getstate_manages_dict)
boost::python::objects::class_base::make_method_static	/usr/include/boost/python/object/class.hpp	/^    void make_method_static(const char *method_name);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(const char *method_name)
boost::python::objects::class_base::set_instance_size	/usr/include/boost/python/object/class.hpp	/^    void set_instance_size(std::size_t bytes);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(std::size_t bytes)
boost::python::objects::class_base::setattr	/usr/include/boost/python/object/class.hpp	/^    void setattr(char const* name, object const&);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const&)
boost::python::objects::class_cref_wrapper	/usr/include/boost/python/object/class_wrapper.hpp	/^struct class_cref_wrapper$/;"	s	namespace:boost::python::objects	inherits:to_python_converter
boost::python::objects::class_cref_wrapper::convert	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyObject* convert(Src const& x)$/;"	f	struct:boost::python::objects::class_cref_wrapper	access:public	signature:(Src const& x)
boost::python::objects::class_cref_wrapper::get_pytype	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyTypeObject const *get_pytype() { return converter::registered_pytype_direct<Src>::get_pytype(); }$/;"	f	struct:boost::python::objects::class_cref_wrapper	access:public	signature:()
boost::python::objects::class_id	/usr/include/boost/python/object/inheritance.hpp	/^typedef type_info class_id;$/;"	t	namespace:boost::python::objects
boost::python::objects::class_metadata	/usr/include/boost/python/object/class_metadata.hpp	/^struct class_metadata$/;"	s	namespace:boost::python::objects
boost::python::objects::class_metadata::bases	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type bases;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metadata::held_type	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type held_type;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metadata::held_type_arg	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type held_type_arg;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metadata::holder	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type holder;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metadata::is_noncopyable	/usr/include/boost/python/object/class_metadata.hpp	/^    > is_noncopyable;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metadata::maybe_register_callback_class	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_callback_class(T2*, mpl::true_)$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, mpl::true_)
boost::python::objects::class_metadata::maybe_register_callback_class	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_callback_class(void*, mpl::false_) {}$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*, mpl::false_)
boost::python::objects::class_metadata::maybe_register_class_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_class_to_python(T2*, mpl::false_)$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, mpl::false_)
boost::python::objects::class_metadata::maybe_register_class_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_class_to_python(void*, mpl::true_) {}$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*, mpl::true_)
boost::python::objects::class_metadata::maybe_register_pointer_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_pointer_to_python(...) {}$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(....)
boost::python::objects::class_metadata::maybe_register_pointer_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_pointer_to_python(T2*, mpl::false_*, mpl::false_*)$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, mpl::false_*, mpl::false_*)
boost::python::objects::class_metadata::maybe_register_pointer_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_pointer_to_python(void*,void*,mpl::true_*) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*,void*,mpl::true_*)
boost::python::objects::class_metadata::register_	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_() \/\/ Register the runtime metadata.$/;"	f	struct:boost::python::objects::class_metadata	access:public	signature:()
boost::python::objects::class_metadata::register_aux	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_aux(python::wrapper<T2>*) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(python::wrapper<T2>*)
boost::python::objects::class_metadata::register_aux	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_aux(void*) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*)
boost::python::objects::class_metadata::register_aux2	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_aux2(T2*, Callback) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, Callback)
boost::python::objects::class_metadata::use_back_reference	/usr/include/boost/python/object/class_metadata.hpp	/^    > use_back_reference;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metadata::use_value_holder	/usr/include/boost/python/object/class_metadata.hpp	/^    typedef is_convertible<held_type*,T*> use_value_holder;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metadata::wrapped	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type wrapped;$/;"	t	struct:boost::python::objects::class_metadata	access:public
boost::python::objects::class_metatype	/usr/include/boost/python/object/class_detail.hpp	/^BOOST_PYTHON_DECL type_handle class_metatype();$/;"	p	namespace:boost::python::objects	signature:()
boost::python::objects::class_type	/usr/include/boost/python/object/class_detail.hpp	/^BOOST_PYTHON_DECL type_handle class_type();$/;"	p	namespace:boost::python::objects	signature:()
boost::python::objects::class_value_wrapper	/usr/include/boost/python/object/class_wrapper.hpp	/^struct class_value_wrapper$/;"	s	namespace:boost::python::objects	inherits:to_python_converter
boost::python::objects::class_value_wrapper::convert	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyObject* convert(Src x)$/;"	f	struct:boost::python::objects::class_value_wrapper	access:public	signature:(Src x)
boost::python::objects::class_value_wrapper::get_pytype	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyTypeObject const *get_pytype() { return MakeInstance::get_pytype(); }$/;"	f	struct:boost::python::objects::class_value_wrapper	access:public	signature:()
boost::python::objects::copy_class_object	/usr/include/boost/python/object/class_metadata.hpp	/^void copy_class_object(type_info const& src, type_info const& dst);$/;"	p	namespace:boost::python::objects	signature:(type_info const& src, type_info const& dst)
boost::python::objects::default_iterator_call_policies	/usr/include/boost/python/object/iterator.hpp	/^typedef return_value_policy<return_by_value> default_iterator_call_policies;$/;"	t	namespace:boost::python::objects
boost::python::objects::detail	/usr/include/boost/python/object/forward.hpp	/^namespace detail$/;"	n	namespace:boost::python::objects
boost::python::objects::detail	/usr/include/boost/python/object/iterator.hpp	/^namespace detail$/;"	n	namespace:boost::python::objects
boost::python::objects::detail::cref_unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct cref_unforwarder$/;"	s	namespace:boost::python::objects::detail
boost::python::objects::detail::cref_unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct cref_unforwarder<true>$/;"	s	namespace:boost::python::objects::detail
boost::python::objects::detail::cref_unforwarder::apply	/usr/include/boost/python/object/forward.hpp	/^      struct apply$/;"	s	struct:boost::python::objects::detail::cref_unforwarder	inherits:python::detail::value_arg	access:public
boost::python::objects::detail::demand_iterator_class	/usr/include/boost/python/object/iterator.hpp	/^  object demand_iterator_class(char const* name, Iterator* = 0, NextPolicies const& policies = NextPolicies())$/;"	f	namespace:boost::python::objects::detail	signature:(char const* name, Iterator* = 0, NextPolicies const& policies = NextPolicies())
boost::python::objects::detail::is_reference_to_value	/usr/include/boost/python/object/forward.hpp	/^  struct is_reference_to_value$/;"	s	namespace:boost::python::objects::detail
boost::python::objects::detail::is_reference_to_value::BOOST_STATIC_CONSTANT	/usr/include/boost/python/object/forward.hpp	/^      BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::objects::detail::is_reference_to_value	access:public	signature:( bool, value = ( sizeof(is_reference_to_value_test(boost::type<T>())) == sizeof(yes_reference_to_value_t)))
boost::python::objects::detail::is_reference_to_value::type	/usr/include/boost/python/object/forward.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::objects::detail::is_reference_to_value	access:public
boost::python::objects::detail::is_reference_to_value_test	/usr/include/boost/python/object/forward.hpp	/^  no_reference_to_value_t is_reference_to_value_test(...);$/;"	p	namespace:boost::python::objects::detail	signature:(....)
boost::python::objects::detail::is_reference_to_value_test	/usr/include/boost/python/object/forward.hpp	/^  yes_reference_to_value_t is_reference_to_value_test(boost::type< reference_to_value<T> >);$/;"	p	namespace:boost::python::objects::detail	signature:(boost::type< reference_to_value<T> >)
boost::python::objects::detail::make_iterator_function	/usr/include/boost/python/object/iterator.hpp	/^  inline object make_iterator_function($/;"	f	namespace:boost::python::objects::detail	signature:( Accessor1 const& get_start , Accessor2 const& get_finish , NextPolicies const& , Iterator const& (*)() , boost::type<Target>* , int )
boost::python::objects::detail::make_iterator_function	/usr/include/boost/python/object/iterator.hpp	/^  inline object make_iterator_function($/;"	f	namespace:boost::python::objects::detail	signature:( Accessor1 const& get_start , Accessor2 const& get_finish , NextPolicies const& next_policies , Iterator& (*)() , boost::type<Target>* , ...)
boost::python::objects::detail::no_reference_to_value_t	/usr/include/boost/python/object/forward.hpp	/^  typedef char (&no_reference_to_value_t)[2];$/;"	t	namespace:boost::python::objects::detail
boost::python::objects::detail::py_iter_	/usr/include/boost/python/object/iterator.hpp	/^  struct py_iter_$/;"	s	namespace:boost::python::objects::detail
boost::python::objects::detail::py_iter_::m_get_finish	/usr/include/boost/python/object/iterator.hpp	/^      Accessor2 m_get_finish;$/;"	m	struct:boost::python::objects::detail::py_iter_	access:private
boost::python::objects::detail::py_iter_::m_get_start	/usr/include/boost/python/object/iterator.hpp	/^      Accessor1 m_get_start;$/;"	m	struct:boost::python::objects::detail::py_iter_	access:private
boost::python::objects::detail::py_iter_::operator ()	/usr/include/boost/python/object/iterator.hpp	/^      operator()(back_reference<Target&> x) const$/;"	f	struct:boost::python::objects::detail::py_iter_	access:public	signature:(back_reference<Target&> x) const
boost::python::objects::detail::py_iter_::py_iter_	/usr/include/boost/python/object/iterator.hpp	/^      py_iter_(Accessor1 const& get_start, Accessor2 const& get_finish)$/;"	f	struct:boost::python::objects::detail::py_iter_	access:public	signature:(Accessor1 const& get_start, Accessor2 const& get_finish)
boost::python::objects::detail::unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct unforwarder$/;"	s	namespace:boost::python::objects::detail
boost::python::objects::detail::unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct unforwarder<true>$/;"	s	namespace:boost::python::objects::detail
boost::python::objects::detail::unforwarder::apply	/usr/include/boost/python/object/forward.hpp	/^      struct apply$/;"	s	struct:boost::python::objects::detail::unforwarder	access:public
boost::python::objects::detail::unforwarder::apply::type	/usr/include/boost/python/object/forward.hpp	/^          typedef typename T::reference type;$/;"	t	struct:boost::python::objects::detail::unforwarder::apply	access:public
boost::python::objects::detail::unforwarder::apply::type	/usr/include/boost/python/object/forward.hpp	/^          typedef typename unwrap_reference<T>::type& type;$/;"	t	struct:boost::python::objects::detail::unforwarder::apply	access:public
boost::python::objects::detail::yes_reference_to_value_t	/usr/include/boost/python/object/forward.hpp	/^  typedef char (&yes_reference_to_value_t)[1];$/;"	t	namespace:boost::python::objects::detail
boost::python::objects::do_unforward	/usr/include/boost/python/object/forward.hpp	/^T const& do_unforward(T const& x, ...)$/;"	f	namespace:boost::python::objects	signature:(T const& x, ...)
boost::python::objects::do_unforward	/usr/include/boost/python/object/forward.hpp	/^do_unforward(reference_to_value<T> const& x, int)$/;"	f	namespace:boost::python::objects	signature:(reference_to_value<T> const& x, int)
boost::python::objects::do_unforward	/usr/include/boost/python/object/forward.hpp	/^do_unforward(reference_wrapper<T> const& x, int)$/;"	f	namespace:boost::python::objects	signature:(reference_wrapper<T> const& x, int)
boost::python::objects::dynamic_cast_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct dynamic_cast_generator$/;"	s	namespace:boost::python::objects
boost::python::objects::dynamic_cast_generator::execute	/usr/include/boost/python/object/inheritance.hpp	/^    static void* execute(void* source)$/;"	f	struct:boost::python::objects::dynamic_cast_generator	access:public	signature:(void* source)
boost::python::objects::dynamic_id_function	/usr/include/boost/python/object/inheritance.hpp	/^typedef dynamic_id_t (*dynamic_id_function)(void*);$/;"	t	namespace:boost::python::objects
boost::python::objects::dynamic_id_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct dynamic_id_generator$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
boost::python::objects::dynamic_id_t	/usr/include/boost/python/object/inheritance.hpp	/^typedef std::pair<void*,class_id> dynamic_id_t;$/;"	t	namespace:boost::python::objects
boost::python::objects::enum_base	/usr/include/boost/python/object/enum_base.hpp	/^struct BOOST_PYTHON_DECL enum_base : python::api::object$/;"	s	namespace:boost::python::objects	inherits:python::api::object
boost::python::objects::enum_base::add_value	/usr/include/boost/python/object/enum_base.hpp	/^    void add_value(char const* name, long value);$/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:(char const* name, long value)
boost::python::objects::enum_base::enum_base	/usr/include/boost/python/object/enum_base.hpp	/^    enum_base($/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:( char const* name , converter::to_python_function_t , converter::convertible_function , converter::constructor_function , type_info , const char *doc = 0 )
boost::python::objects::enum_base::export_values	/usr/include/boost/python/object/enum_base.hpp	/^    void export_values();$/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:()
boost::python::objects::enum_base::to_python	/usr/include/boost/python/object/enum_base.hpp	/^    static PyObject* to_python(PyTypeObject* type, long x);$/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:(PyTypeObject* type, long x)
boost::python::objects::find_dynamic_type	/usr/include/boost/python/object/inheritance_query.hpp	/^BOOST_PYTHON_DECL void* find_dynamic_type(void* p, type_info src, type_info dst);$/;"	p	namespace:boost::python::objects	signature:(void* p, type_info src, type_info dst)
boost::python::objects::find_instance_impl	/usr/include/boost/python/object/find_instance.hpp	/^BOOST_PYTHON_DECL void* find_instance_impl(PyObject*, type_info, bool null_shared_ptr_only = false);$/;"	p	namespace:boost::python::objects	signature:(PyObject*, type_info, bool null_shared_ptr_only = false)
boost::python::objects::find_static_type	/usr/include/boost/python/object/inheritance_query.hpp	/^BOOST_PYTHON_DECL void* find_static_type(void* p, type_info src, type_info dst);$/;"	p	namespace:boost::python::objects	signature:(void* p, type_info src, type_info dst)
boost::python::objects::forward	/usr/include/boost/python/object/forward.hpp	/^struct forward$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
boost::python::objects::full_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^struct full_py_function_impl : py_function_impl_base$/;"	s	namespace:boost::python::objects	inherits:py_function_impl_base
boost::python::objects::full_py_function_impl::full_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^    full_py_function_impl(Caller const& caller, unsigned min_arity, unsigned max_arity)$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:(Caller const& caller, unsigned min_arity, unsigned max_arity)
boost::python::objects::full_py_function_impl::m_caller	/usr/include/boost/python/object/py_function.hpp	/^    Caller m_caller;$/;"	m	struct:boost::python::objects::full_py_function_impl	access:private
boost::python::objects::full_py_function_impl::m_max_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned m_max_arity;$/;"	m	struct:boost::python::objects::full_py_function_impl	access:private
boost::python::objects::full_py_function_impl::m_min_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned m_min_arity;$/;"	m	struct:boost::python::objects::full_py_function_impl	access:private
boost::python::objects::full_py_function_impl::max_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned max_arity() const$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:() const
boost::python::objects::full_py_function_impl::min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:() const
boost::python::objects::full_py_function_impl::operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw)$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:(PyObject* args, PyObject* kw)
boost::python::objects::full_py_function_impl::signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:() const
boost::python::objects::function	/usr/include/boost/python/object/function.hpp	/^struct BOOST_PYTHON_DECL function : PyObject$/;"	s	namespace:boost::python::objects	inherits:PyObject
boost::python::objects::function::add_overload	/usr/include/boost/python/object/function.hpp	/^    void add_overload(handle<function> const&);$/;"	p	struct:boost::python::objects::function	access:private	signature:(handle<function> const&)
boost::python::objects::function::add_to_namespace	/usr/include/boost/python/object/function.hpp	/^    static void add_to_namespace($/;"	p	struct:boost::python::objects::function	access:public	signature:( object const& name_space, char const* name, object const& attribute)
boost::python::objects::function::add_to_namespace	/usr/include/boost/python/object/function.hpp	/^    static void add_to_namespace($/;"	p	struct:boost::python::objects::function	access:public	signature:( object const& name_space, char const* name, object const& attribute, char const* doc)
boost::python::objects::function::argument_error	/usr/include/boost/python/object/function.hpp	/^    void argument_error(PyObject* args, PyObject* keywords) const;$/;"	p	struct:boost::python::objects::function	access:private	signature:(PyObject* args, PyObject* keywords) const
boost::python::objects::function::call	/usr/include/boost/python/object/function.hpp	/^    PyObject* call(PyObject*, PyObject*) const;$/;"	p	struct:boost::python::objects::function	access:public	signature:(PyObject*, PyObject*) const
boost::python::objects::function::doc	/usr/include/boost/python/object/function.hpp	/^    object const& doc() const;$/;"	p	struct:boost::python::objects::function	access:public	signature:() const
boost::python::objects::function::doc	/usr/include/boost/python/object/function.hpp	/^    void doc(object const& x);$/;"	p	struct:boost::python::objects::function	access:public	signature:(object const& x)
boost::python::objects::function::doc	/usr/include/boost/python/object/function.hpp	/^inline object const& function::doc() const$/;"	f	class:boost::python::objects::function	signature:() const
boost::python::objects::function::doc	/usr/include/boost/python/object/function.hpp	/^inline void function::doc(object const& x)$/;"	f	class:boost::python::objects::function	signature:(object const& x)
boost::python::objects::function::function	/usr/include/boost/python/object/function.hpp	/^    function($/;"	p	struct:boost::python::objects::function	access:public	signature:( py_function const& , python::detail::keyword const* names_and_defaults , unsigned num_keywords)
boost::python::objects::function::get_namespace	/usr/include/boost/python/object/function.hpp	/^    object const& get_namespace() const { return m_namespace; }$/;"	f	struct:boost::python::objects::function	access:public	signature:() const
boost::python::objects::function::m_arg_names	/usr/include/boost/python/object/function.hpp	/^    object m_arg_names;$/;"	m	struct:boost::python::objects::function	access:private
boost::python::objects::function::m_doc	/usr/include/boost/python/object/function.hpp	/^    object m_doc;$/;"	m	struct:boost::python::objects::function	access:private
boost::python::objects::function::m_fn	/usr/include/boost/python/object/function.hpp	/^    py_function m_fn;$/;"	m	struct:boost::python::objects::function	access:private
boost::python::objects::function::m_name	/usr/include/boost/python/object/function.hpp	/^    object m_name;$/;"	m	struct:boost::python::objects::function	access:private
boost::python::objects::function::m_namespace	/usr/include/boost/python/object/function.hpp	/^    object m_namespace;$/;"	m	struct:boost::python::objects::function	access:private
boost::python::objects::function::m_nkeyword_values	/usr/include/boost/python/object/function.hpp	/^    unsigned m_nkeyword_values;$/;"	m	struct:boost::python::objects::function	access:private
boost::python::objects::function::m_overloads	/usr/include/boost/python/object/function.hpp	/^    handle<function> m_overloads;$/;"	m	struct:boost::python::objects::function	access:private
boost::python::objects::function::name	/usr/include/boost/python/object/function.hpp	/^    object const& name() const;$/;"	p	struct:boost::python::objects::function	access:public	signature:() const
boost::python::objects::function::name	/usr/include/boost/python/object/function.hpp	/^inline object const& function::name() const$/;"	f	class:boost::python::objects::function	signature:() const
boost::python::objects::function::signature	/usr/include/boost/python/object/function.hpp	/^    object signature(bool show_return_type=false) const;$/;"	p	struct:boost::python::objects::function	access:private	signature:(bool show_return_type=false) const
boost::python::objects::function::signatures	/usr/include/boost/python/object/function.hpp	/^    object signatures(bool show_return_type=false) const;$/;"	p	struct:boost::python::objects::function	access:private	signature:(bool show_return_type=false) const
boost::python::objects::function::~function	/usr/include/boost/python/object/function.hpp	/^    ~function();$/;"	p	struct:boost::python::objects::function	access:public	signature:()
boost::python::objects::function_doc_signature_generator	/usr/include/boost/python/object/function_doc_signature.hpp	/^class function_doc_signature_generator{$/;"	c	namespace:boost::python::objects
boost::python::objects::function_doc_signature_generator::are_seq_overloads	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static bool are_seq_overloads( function const *f1, function const *f2 , bool check_docs);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:( function const *f1, function const *f2 , bool check_docs)
boost::python::objects::function_doc_signature_generator::arity_cmp	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static bool arity_cmp( function const *f1, function const *f2 );$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:( function const *f1, function const *f2 )
boost::python::objects::function_doc_signature_generator::flatten	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static std::vector<function const*> flatten(function const *f);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(function const *f)
boost::python::objects::function_doc_signature_generator::function_doc_signatures	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static list function_doc_signatures( function const * f);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:public	signature:( function const * f)
boost::python::objects::function_doc_signature_generator::parameter_string	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static str parameter_string(py_function const &f, size_t n, object arg_names, bool cpp_types);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(py_function const &f, size_t n, object arg_names, bool cpp_types)
boost::python::objects::function_doc_signature_generator::pretty_signature	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static str pretty_signature(function const *f, size_t n_overloads,  bool cpp_types = false);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(function const *f, size_t n_overloads, bool cpp_types = false)
boost::python::objects::function_doc_signature_generator::py_type_str	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static const  char * py_type_str(const python::detail::signature_element &s);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(const python::detail::signature_element &s)
boost::python::objects::function_doc_signature_generator::raw_function_pretty_signature	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static str raw_function_pretty_signature(function const *f, size_t n_overloads,  bool cpp_types = false);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(function const *f, size_t n_overloads, bool cpp_types = false)
boost::python::objects::function_doc_signature_generator::split_seq_overloads	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static std::vector<function const*> split_seq_overloads( const std::vector<function const *> &funcs, bool split_on_doc_change);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:( const std::vector<function const *> &funcs, bool split_on_doc_change)
boost::python::objects::function_handle	/usr/include/boost/python/object/function_handle.hpp	/^inline handle<> function_handle(F const& f, Signature)$/;"	f	namespace:boost::python::objects	signature:(F const& f, Signature)
boost::python::objects::function_handle_impl	/usr/include/boost/python/object/function_handle.hpp	/^BOOST_PYTHON_DECL handle<> function_handle_impl(py_function const& f);$/;"	p	namespace:boost::python::objects	signature:(py_function const& f)
boost::python::objects::function_object	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL api::object function_object($/;"	p	namespace:boost::python::objects	signature:( py_function const& f , python::detail::keyword_range const&)
boost::python::objects::function_object	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL api::object function_object(py_function const& f);$/;"	p	namespace:boost::python::objects	signature:(py_function const& f)
boost::python::objects::identity_function	/usr/include/boost/python/object/iterator_core.hpp	/^BOOST_PYTHON_DECL object const& identity_function();$/;"	p	namespace:boost::python::objects	signature:()
boost::python::objects::implicit_cast_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct implicit_cast_generator$/;"	s	namespace:boost::python::objects
boost::python::objects::implicit_cast_generator::execute	/usr/include/boost/python/object/inheritance.hpp	/^    static void* execute(void* source)$/;"	f	struct:boost::python::objects::implicit_cast_generator	access:public	signature:(void* source)
boost::python::objects::instance	/usr/include/boost/python/object/instance.hpp	/^struct instance$/;"	s	namespace:boost::python::objects
boost::python::objects::instance::__anon7::align	/usr/include/boost/python/object/instance.hpp	/^        align_t align;$/;"	m	union:boost::python::objects::instance::__anon7	access:public
boost::python::objects::instance::__anon7::bytes	/usr/include/boost/python/object/instance.hpp	/^        char bytes[sizeof(Data)];$/;"	m	union:boost::python::objects::instance::__anon7	access:public
boost::python::objects::instance::align_t	/usr/include/boost/python/object/instance.hpp	/^    >::type align_t;$/;"	t	struct:boost::python::objects::instance	access:public
boost::python::objects::instance::dict	/usr/include/boost/python/object/instance.hpp	/^    PyObject* dict;$/;"	m	struct:boost::python::objects::instance	access:public
boost::python::objects::instance::objects	/usr/include/boost/python/object/instance.hpp	/^    instance_holder* objects;$/;"	m	struct:boost::python::objects::instance	access:public
boost::python::objects::instance::storage	/usr/include/boost/python/object/instance.hpp	/^    } storage;$/;"	m	struct:boost::python::objects::instance	typeref:union:boost::python::objects::instance::__anon7	access:public
boost::python::objects::instance::weakrefs	/usr/include/boost/python/object/instance.hpp	/^    PyObject* weakrefs; $/;"	m	struct:boost::python::objects::instance	access:public
boost::python::objects::iterator_range	/usr/include/boost/python/object/iterator.hpp	/^struct iterator_range$/;"	s	namespace:boost::python::objects
boost::python::objects::iterator_range::iterator_range	/usr/include/boost/python/object/iterator.hpp	/^    iterator_range(object sequence, Iterator start, Iterator finish);$/;"	p	struct:boost::python::objects::iterator_range	access:public	signature:(object sequence, Iterator start, Iterator finish)
boost::python::objects::iterator_range::iterator_range	/usr/include/boost/python/object/iterator.hpp	/^inline iterator_range<NextPolicies,Iterator>::iterator_range($/;"	f	class:boost::python::objects::iterator_range	signature:( object sequence, Iterator start, Iterator finish)
boost::python::objects::iterator_range::m_finish	/usr/include/boost/python/object/iterator.hpp	/^    Iterator m_finish;$/;"	m	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::iterator_range::m_sequence	/usr/include/boost/python/object/iterator.hpp	/^    object m_sequence; \/\/ Keeps the sequence alive while iterating.$/;"	m	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::iterator_range::m_start	/usr/include/boost/python/object/iterator.hpp	/^    Iterator m_start;$/;"	m	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::iterator_range::next	/usr/include/boost/python/object/iterator.hpp	/^    struct next$/;"	s	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::iterator_range::next::garbage	/usr/include/boost/python/object/iterator.hpp	/^        int garbage;$/;"	m	struct:boost::python::objects::iterator_range::next	access:public
boost::python::objects::iterator_range::next::operator ()	/usr/include/boost/python/object/iterator.hpp	/^        operator()(iterator_range<NextPolicies,Iterator>& self)$/;"	f	struct:boost::python::objects::iterator_range::next	access:public	signature:(iterator_range<NextPolicies,Iterator>& self)
boost::python::objects::iterator_range::next::result_type	/usr/include/boost/python/object/iterator.hpp	/^        >::type result_type;$/;"	t	struct:boost::python::objects::iterator_range::next	access:public
boost::python::objects::iterator_range::next_fn	/usr/include/boost/python/object/iterator.hpp	/^    >::type next_fn;$/;"	t	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::iterator_range::next_fn	/usr/include/boost/python/object/iterator.hpp	/^    typedef next next_fn;$/;"	t	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::iterator_range::next_ptr	/usr/include/boost/python/object/iterator.hpp	/^    struct next_ptr$/;"	s	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::iterator_range::next_ptr::operator ()	/usr/include/boost/python/object/iterator.hpp	/^        operator()(iterator_range<NextPolicies,Iterator>& self)$/;"	f	struct:boost::python::objects::iterator_range::next_ptr	access:public	signature:(iterator_range<NextPolicies,Iterator>& self)
boost::python::objects::iterator_range::next_ptr::result_type	/usr/include/boost/python/object/iterator.hpp	/^        typedef Iterator result_type;$/;"	t	struct:boost::python::objects::iterator_range::next_ptr	access:public
boost::python::objects::iterator_range::traits_t	/usr/include/boost/python/object/iterator.hpp	/^    typedef boost::detail::iterator_traits<Iterator> traits_t;$/;"	t	struct:boost::python::objects::iterator_range	access:public
boost::python::objects::make_function_handle	/usr/include/boost/python/object/function_handle.hpp	/^handle<> make_function_handle(F f)$/;"	f	namespace:boost::python::objects	signature:(F f)
boost::python::objects::make_instance	/usr/include/boost/python/object/make_instance.hpp	/^struct make_instance$/;"	s	namespace:boost::python::objects	inherits:make_instance_impl
boost::python::objects::make_instance::construct	/usr/include/boost/python/object/make_instance.hpp	/^    static inline Holder* construct(void* storage, PyObject* instance, reference_wrapper<T const> x)$/;"	f	struct:boost::python::objects::make_instance	access:public	signature:(void* storage, PyObject* instance, reference_wrapper<T const> x)
boost::python::objects::make_instance::get_class_object	/usr/include/boost/python/object/make_instance.hpp	/^    static inline PyTypeObject* get_class_object(U&)$/;"	f	struct:boost::python::objects::make_instance	access:public	signature:(U&)
boost::python::objects::make_instance_impl	/usr/include/boost/python/object/make_instance.hpp	/^struct make_instance_impl$/;"	s	namespace:boost::python::objects
boost::python::objects::make_instance_impl::execute	/usr/include/boost/python/object/make_instance.hpp	/^    static inline PyObject* execute(Arg& x)$/;"	f	struct:boost::python::objects::make_instance_impl	access:public	signature:(Arg& x)
boost::python::objects::make_instance_impl::instance_t	/usr/include/boost/python/object/make_instance.hpp	/^    typedef objects::instance<Holder> instance_t;$/;"	t	struct:boost::python::objects::make_instance_impl	access:public
boost::python::objects::make_iterator_function	/usr/include/boost/python/object/iterator.hpp	/^inline object make_iterator_function($/;"	f	namespace:boost::python::objects	signature:( Accessor1 const& get_start , Accessor2 const& get_finish , NextPolicies const& next_policies , boost::type<Target>* = 0 )
boost::python::objects::make_nurse_and_patient	/usr/include/boost/python/object/life_support.hpp	/^BOOST_PYTHON_DECL PyObject* make_nurse_and_patient(PyObject* nurse, PyObject* patient);$/;"	p	namespace:boost::python::objects	signature:(PyObject* nurse, PyObject* patient)
boost::python::objects::make_ptr_instance	/usr/include/boost/python/object/make_ptr_instance.hpp	/^struct make_ptr_instance$/;"	s	namespace:boost::python::objects	inherits:make_instance_impl
boost::python::objects::make_ptr_instance::construct	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline Holder* construct(void* storage, PyObject*, Arg& x)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:public	signature:(void* storage, PyObject*, Arg& x)
boost::python::objects::make_ptr_instance::get_class_object	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_class_object(Ptr const& x)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:public	signature:(Ptr const& x)
boost::python::objects::make_ptr_instance::get_class_object_impl	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_class_object_impl(U const volatile* p)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:private	signature:(U const volatile* p)
boost::python::objects::make_ptr_instance::get_derived_class_object	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_derived_class_object(mpl::false_, U*)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:private	signature:(mpl::false_, U*)
boost::python::objects::make_ptr_instance::get_derived_class_object	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_derived_class_object(mpl::true_, U const volatile* x)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:private	signature:(mpl::true_, U const volatile* x)
boost::python::objects::make_ptr_instance::get_pytype	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::objects::make_ptr_instance	access:public	signature:()
boost::python::objects::non_polymorphic_id_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct non_polymorphic_id_generator$/;"	s	namespace:boost::python::objects
boost::python::objects::non_polymorphic_id_generator::execute	/usr/include/boost/python/object/inheritance.hpp	/^    static dynamic_id_t execute(void* p_)$/;"	f	struct:boost::python::objects::non_polymorphic_id_generator	access:public	signature:(void* p_)
boost::python::objects::pointer_holder	/usr/include/boost/python/object/pointer_holder.hpp	/^struct pointer_holder : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
boost::python::objects::pointer_holder::holds	/usr/include/boost/python/object/pointer_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::pointer_holder	access:private	signature:(type_info, bool null_ptr_only)
boost::python::objects::pointer_holder::holds	/usr/include/boost/python/object/pointer_holder.hpp	/^void* pointer_holder<Pointer, Value>::holds(type_info dst_t, bool null_ptr_only)$/;"	f	class:boost::python::objects::pointer_holder	signature:(type_info dst_t, bool null_ptr_only)
boost::python::objects::pointer_holder::holds_wrapped	/usr/include/boost/python/object/pointer_holder.hpp	/^    inline void* holds_wrapped(type_info dst_t, wrapper<T>*,T* p)$/;"	f	struct:boost::python::objects::pointer_holder	access:private	signature:(type_info dst_t, wrapper<T>*,T* p)
boost::python::objects::pointer_holder::holds_wrapped	/usr/include/boost/python/object/pointer_holder.hpp	/^    inline void* holds_wrapped(type_info, ...)$/;"	f	struct:boost::python::objects::pointer_holder	access:private	signature:(type_info, ...)
boost::python::objects::pointer_holder::m_p	/usr/include/boost/python/object/pointer_holder.hpp	/^    Pointer m_p;$/;"	m	struct:boost::python::objects::pointer_holder	access:private
boost::python::objects::pointer_holder::pointer_holder	/usr/include/boost/python/object/pointer_holder.hpp	/^    pointer_holder(Pointer);$/;"	p	struct:boost::python::objects::pointer_holder	access:public	signature:(Pointer)
boost::python::objects::pointer_holder::pointer_holder	/usr/include/boost/python/object/pointer_holder.hpp	/^inline pointer_holder<Pointer,Value>::pointer_holder(Pointer p)$/;"	f	class:boost::python::objects::pointer_holder	signature:(Pointer p)
boost::python::objects::pointer_holder::value_type	/usr/include/boost/python/object/pointer_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::pointer_holder	access:public
boost::python::objects::pointer_holder_back_reference	/usr/include/boost/python/object/pointer_holder.hpp	/^struct pointer_holder_back_reference : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
boost::python::objects::pointer_holder_back_reference::held_type	/usr/include/boost/python/object/pointer_holder.hpp	/^    typedef typename python::pointee<Pointer>::type held_type;$/;"	t	struct:boost::python::objects::pointer_holder_back_reference	access:private
boost::python::objects::pointer_holder_back_reference::holds	/usr/include/boost/python/object/pointer_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::pointer_holder_back_reference	access:private	signature:(type_info, bool null_ptr_only)
boost::python::objects::pointer_holder_back_reference::holds	/usr/include/boost/python/object/pointer_holder.hpp	/^void* pointer_holder_back_reference<Pointer, Value>::holds(type_info dst_t, bool null_ptr_only)$/;"	f	class:boost::python::objects::pointer_holder_back_reference	signature:(type_info dst_t, bool null_ptr_only)
boost::python::objects::pointer_holder_back_reference::m_p	/usr/include/boost/python/object/pointer_holder.hpp	/^    Pointer m_p;$/;"	m	struct:boost::python::objects::pointer_holder_back_reference	access:private
boost::python::objects::pointer_holder_back_reference::pointer_holder_back_reference	/usr/include/boost/python/object/pointer_holder.hpp	/^    pointer_holder_back_reference(Pointer);$/;"	p	struct:boost::python::objects::pointer_holder_back_reference	access:public	signature:(Pointer)
boost::python::objects::pointer_holder_back_reference::pointer_holder_back_reference	/usr/include/boost/python/object/pointer_holder.hpp	/^inline pointer_holder_back_reference<Pointer,Value>::pointer_holder_back_reference(Pointer p)$/;"	f	class:boost::python::objects::pointer_holder_back_reference	signature:(Pointer p)
boost::python::objects::pointer_holder_back_reference::value_type	/usr/include/boost/python/object/pointer_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::pointer_holder_back_reference	access:public
boost::python::objects::polymorphic_id_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct polymorphic_id_generator$/;"	s	namespace:boost::python::objects
boost::python::objects::polymorphic_id_generator::execute	/usr/include/boost/python/object/inheritance.hpp	/^    static dynamic_id_t execute(void* p_)$/;"	f	struct:boost::python::objects::polymorphic_id_generator	access:public	signature:(void* p_)
boost::python::objects::py_function	/usr/include/boost/python/object/py_function.hpp	/^struct py_function$/;"	s	namespace:boost::python::objects
boost::python::objects::py_function::m_impl	/usr/include/boost/python/object/py_function.hpp	/^    mutable std::auto_ptr<py_function_impl_base> m_impl;$/;"	m	struct:boost::python::objects::py_function	access:private
boost::python::objects::py_function::max_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned max_arity() const$/;"	f	struct:boost::python::objects::py_function	access:public	signature:() const
boost::python::objects::py_function::min_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned min_arity() const$/;"	f	struct:boost::python::objects::py_function	access:public	signature:() const
boost::python::objects::py_function::operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw) const$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(PyObject* args, PyObject* kw) const
boost::python::objects::py_function::py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(Caller const& caller)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(Caller const& caller)
boost::python::objects::py_function::py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(Caller const& caller, Sig)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(Caller const& caller, Sig)
boost::python::objects::py_function::py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(Caller const& caller, Sig, int min_arity, int max_arity = 0)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(Caller const& caller, Sig, int min_arity, int max_arity = 0)
boost::python::objects::py_function::py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(py_function const& rhs)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(py_function const& rhs)
boost::python::objects::py_function::python::detail::get_return_type	/usr/include/boost/python/object/py_function.hpp	/^    python::detail::signature_element const& get_return_type() const$/;"	f	class:boost::python::objects::py_function::python::detail	access:public	signature:() const
boost::python::objects::py_function::python::detail::signature	/usr/include/boost/python/object/py_function.hpp	/^    python::detail::signature_element const* signature() const$/;"	f	class:boost::python::objects::py_function::python::detail	access:public	signature:() const
boost::python::objects::py_function_impl_base	/usr/include/boost/python/object/py_function.hpp	/^struct BOOST_PYTHON_DECL py_function_impl_base$/;"	s	namespace:boost::python::objects
boost::python::objects::py_function_impl_base::max_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned max_arity() const;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:() const
boost::python::objects::py_function_impl_base::min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const = 0;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:() const
boost::python::objects::py_function_impl_base::operator ()	/usr/include/boost/python/object/py_function.hpp	/^    virtual PyObject* operator()(PyObject*, PyObject*) = 0;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:(PyObject*, PyObject*)
boost::python::objects::py_function_impl_base::signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const = 0;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:() const
boost::python::objects::py_function_impl_base::~py_function_impl_base	/usr/include/boost/python/object/py_function.hpp	/^    virtual ~py_function_impl_base();$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:()
boost::python::objects::reference_to_value	/usr/include/boost/python/object/forward.hpp	/^struct reference_to_value$/;"	s	namespace:boost::python::objects
boost::python::objects::reference_to_value::get	/usr/include/boost/python/object/forward.hpp	/^    reference get() const { return m_value; }$/;"	f	struct:boost::python::objects::reference_to_value	access:public	signature:() const
boost::python::objects::reference_to_value::m_value	/usr/include/boost/python/object/forward.hpp	/^    reference m_value;$/;"	m	struct:boost::python::objects::reference_to_value	access:private
boost::python::objects::reference_to_value::reference	/usr/include/boost/python/object/forward.hpp	/^    typedef typename add_reference<typename add_const<T>::type>::type reference;$/;"	t	struct:boost::python::objects::reference_to_value	access:public
boost::python::objects::reference_to_value::reference_to_value	/usr/include/boost/python/object/forward.hpp	/^    reference_to_value(reference x) : m_value(x) {}$/;"	f	struct:boost::python::objects::reference_to_value	access:public	signature:(reference x)
boost::python::objects::register_base_of	/usr/include/boost/python/object/class_metadata.hpp	/^struct register_base_of$/;"	s	namespace:boost::python::objects
boost::python::objects::register_base_of::operator ()	/usr/include/boost/python/object/class_metadata.hpp	/^    inline void operator()(Base*) const$/;"	f	struct:boost::python::objects::register_base_of	access:public	signature:(Base*) const
boost::python::objects::register_base_of::register_downcast	/usr/include/boost/python/object/class_metadata.hpp	/^    static inline void register_downcast(Base*, mpl::true_)$/;"	f	struct:boost::python::objects::register_base_of	access:private	signature:(Base*, mpl::true_)
boost::python::objects::register_base_of::register_downcast	/usr/include/boost/python/object/class_metadata.hpp	/^    static inline void register_downcast(void*, mpl::false_) {}$/;"	f	struct:boost::python::objects::register_base_of	access:private	signature:(void*, mpl::false_)
boost::python::objects::register_conversion	/usr/include/boost/python/object/inheritance.hpp	/^inline void register_conversion($/;"	f	namespace:boost::python::objects	signature:( bool is_downcast = ::boost::is_base_and_derived<Source,Target>::value , Source* = 0, Target* = 0)
boost::python::objects::register_dynamic_id	/usr/include/boost/python/object/inheritance.hpp	/^void register_dynamic_id(T* = 0)$/;"	f	namespace:boost::python::objects	signature:(T* = 0)
boost::python::objects::register_dynamic_id_aux	/usr/include/boost/python/object/inheritance.hpp	/^BOOST_PYTHON_DECL void register_dynamic_id_aux($/;"	p	namespace:boost::python::objects	signature:( class_id static_id, dynamic_id_function get_dynamic_id)
boost::python::objects::register_shared_ptr_from_python_and_casts	/usr/include/boost/python/object/class_metadata.hpp	/^inline void register_shared_ptr_from_python_and_casts(T*, Bases)$/;"	f	namespace:boost::python::objects	signature:(T*, Bases)
boost::python::objects::registered_class_object	/usr/include/boost/python/object/class_detail.hpp	/^BOOST_PYTHON_DECL type_handle registered_class_object(type_info id);$/;"	p	namespace:boost::python::objects	signature:(type_info id)
boost::python::objects::select_held_type	/usr/include/boost/python/object/class_metadata.hpp	/^struct select_held_type$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
boost::python::objects::signature_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^struct signature_py_function_impl : py_function_impl_base$/;"	s	namespace:boost::python::objects	inherits:py_function_impl_base
boost::python::objects::signature_py_function_impl::m_caller	/usr/include/boost/python/object/py_function.hpp	/^    Caller m_caller;$/;"	m	struct:boost::python::objects::signature_py_function_impl	access:private
boost::python::objects::signature_py_function_impl::min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:() const
boost::python::objects::signature_py_function_impl::operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw)$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:(PyObject* args, PyObject* kw)
boost::python::objects::signature_py_function_impl::signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:() const
boost::python::objects::signature_py_function_impl::signature_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^    signature_py_function_impl(Caller const& caller)$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:(Caller const& caller)
boost::python::objects::stl_input_iterator_impl	/usr/include/boost/python/object/stl_iterator_core.hpp	/^struct BOOST_PYTHON_DECL stl_input_iterator_impl$/;"	s	namespace:boost::python::objects
boost::python::objects::stl_input_iterator_impl::boost::python::current	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    boost::python::handle<> const &current() const;$/;"	p	class:boost::python::objects::stl_input_iterator_impl::boost::python	access:public	signature:() const
boost::python::objects::stl_input_iterator_impl::equal	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    bool equal(stl_input_iterator_impl const &that) const;$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:(stl_input_iterator_impl const &that) const
boost::python::objects::stl_input_iterator_impl::increment	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    void increment();$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:()
boost::python::objects::stl_input_iterator_impl::it_	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    boost::python::object it_;$/;"	m	struct:boost::python::objects::stl_input_iterator_impl	access:private
boost::python::objects::stl_input_iterator_impl::ob_	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    boost::python::handle<> ob_;$/;"	m	struct:boost::python::objects::stl_input_iterator_impl	access:private
boost::python::objects::stl_input_iterator_impl::stl_input_iterator_impl	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    stl_input_iterator_impl();$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:()
boost::python::objects::stl_input_iterator_impl::stl_input_iterator_impl	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    stl_input_iterator_impl(boost::python::object const &ob);$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:(boost::python::object const &ob)
boost::python::objects::stop_iteration_error	/usr/include/boost/python/object/iterator_core.hpp	/^BOOST_PYTHON_DECL void stop_iteration_error();$/;"	p	namespace:boost::python::objects	signature:()
boost::python::objects::unforward	/usr/include/boost/python/object/forward.hpp	/^struct unforward$/;"	s	namespace:boost::python::objects
boost::python::objects::unforward	/usr/include/boost/python/object/forward.hpp	/^struct unforward$/;"	s	namespace:boost::python::objects	inherits:detail::unforwarder::,apply
boost::python::objects::unforward	/usr/include/boost/python/object/forward.hpp	/^struct unforward<reference_to_value<T> >$/;"	s	namespace:boost::python::objects
boost::python::objects::unforward::type	/usr/include/boost/python/object/forward.hpp	/^    typedef T type;$/;"	t	struct:boost::python::objects::unforward	access:public
boost::python::objects::unforward::type	/usr/include/boost/python/object/forward.hpp	/^    typedef typename unwrap_reference<T>::type& type;$/;"	t	struct:boost::python::objects::unforward	access:public
boost::python::objects::unforward_cref	/usr/include/boost/python/object/forward.hpp	/^struct unforward_cref$/;"	s	namespace:boost::python::objects	inherits:detail::cref_unforwarder::,apply
boost::python::objects::unforward_cref	/usr/include/boost/python/object/forward.hpp	/^struct unforward_cref$/;"	s	namespace:boost::python::objects	inherits:python::detail::value_arg
boost::python::objects::unforward_cref	/usr/include/boost/python/object/forward.hpp	/^struct unforward_cref<reference_to_value<T> >$/;"	s	namespace:boost::python::objects	inherits:add_reference
boost::python::objects::value_holder	/usr/include/boost/python/object/value_holder.hpp	/^struct value_holder : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
boost::python::objects::value_holder::held_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Value held_type;$/;"	t	struct:boost::python::objects::value_holder	access:public
boost::python::objects::value_holder::holds	/usr/include/boost/python/object/value_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::value_holder	access:private	signature:(type_info, bool null_ptr_only)
boost::python::objects::value_holder::holds	/usr/include/boost/python/object/value_holder.hpp	/^void* value_holder<Value>::holds(type_info dst_t, bool \/*null_ptr_only*\/)$/;"	f	class:boost::python::objects::value_holder	signature:(type_info dst_t, bool )
boost::python::objects::value_holder::holds_wrapped	/usr/include/boost/python/object/value_holder.hpp	/^    inline void* holds_wrapped(type_info dst_t, wrapper<T>*,T* p)$/;"	f	struct:boost::python::objects::value_holder	access:private	signature:(type_info dst_t, wrapper<T>*,T* p)
boost::python::objects::value_holder::holds_wrapped	/usr/include/boost/python/object/value_holder.hpp	/^    inline void* holds_wrapped(type_info, ...)$/;"	f	struct:boost::python::objects::value_holder	access:private	signature:(type_info, ...)
boost::python::objects::value_holder::m_held	/usr/include/boost/python/object/value_holder.hpp	/^    Value m_held;$/;"	m	struct:boost::python::objects::value_holder	access:private
boost::python::objects::value_holder::value_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::value_holder	access:public
boost::python::objects::value_holder_back_reference	/usr/include/boost/python/object/value_holder.hpp	/^struct value_holder_back_reference : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
boost::python::objects::value_holder_back_reference::held_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Held held_type;$/;"	t	struct:boost::python::objects::value_holder_back_reference	access:public
boost::python::objects::value_holder_back_reference::holds	/usr/include/boost/python/object/value_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::value_holder_back_reference	access:private	signature:(type_info, bool null_ptr_only)
boost::python::objects::value_holder_back_reference::holds	/usr/include/boost/python/object/value_holder.hpp	/^void* value_holder_back_reference<Value,Held>::holds($/;"	f	class:boost::python::objects::value_holder_back_reference	signature:( type_info dst_t, bool )
boost::python::objects::value_holder_back_reference::m_held	/usr/include/boost/python/object/value_holder.hpp	/^    Held m_held;$/;"	m	struct:boost::python::objects::value_holder_back_reference	access:private
boost::python::objects::value_holder_back_reference::value_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::value_holder_back_reference	access:public
boost::python::opaque	/usr/include/boost/python/opaque_pointer_converter.hpp	/^struct opaque$/;"	s	namespace:boost::python
boost::python::opaque::extract	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static void* extract(PyObject* op)$/;"	f	struct:boost::python::opaque	access:private	signature:(PyObject* op)
boost::python::opaque::get_pytype	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static PyTypeObject const *get_pytype(){return  &type_object; }$/;"	f	struct:boost::python::opaque	access:private	signature:()
boost::python::opaque::instance	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static opaque instance;$/;"	m	struct:boost::python::opaque	access:public
boost::python::opaque::instance	/usr/include/boost/python/opaque_pointer_converter.hpp	/^opaque<Pointee> opaque<Pointee>::instance;$/;"	m	class:boost::python::opaque
boost::python::opaque::opaque	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    opaque()$/;"	f	struct:boost::python::opaque	access:public	signature:()
boost::python::opaque::python_instance	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    struct python_instance$/;"	s	struct:boost::python::opaque	access:private
boost::python::opaque::python_instance::x	/usr/include/boost/python/opaque_pointer_converter.hpp	/^        Pointee* x;$/;"	m	struct:boost::python::opaque::python_instance	access:public
boost::python::opaque::register_self	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    void register_self()$/;"	f	struct:boost::python::opaque	access:private	signature:()
boost::python::opaque::type_object	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static PyTypeObject type_object;$/;"	m	struct:boost::python::opaque	access:private
boost::python::opaque::type_object	/usr/include/boost/python/opaque_pointer_converter.hpp	/^PyTypeObject opaque<Pointee>::type_object =$/;"	m	class:boost::python::opaque
boost::python::opaque::wrap	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static PyObject* wrap(void const* px)$/;"	f	struct:boost::python::opaque	access:private	signature:(void const* px)
boost::python::operator <<	/usr/include/boost/python/type_id.hpp	/^BOOST_PYTHON_DECL std::ostream& operator<<(std::ostream&, type_info const&);$/;"	p	namespace:boost::python	signature:(std::ostream&, type_info const&)
boost::python::optional	/usr/include/boost/python/init.hpp	/^struct optional$/;"	s	namespace:boost::python	inherits:detail::type_list
boost::python::other	/usr/include/boost/python/other.hpp	/^template<class T> struct other$/;"	s	namespace:boost::python
boost::python::other::type	/usr/include/boost/python/other.hpp	/^    typedef T type;$/;"	t	struct:boost::python::other	access:public
boost::python::override	/usr/include/boost/python/override.hpp	/^class override : public object$/;"	c	namespace:boost::python	inherits:object
boost::python::override::operator ()	/usr/include/boost/python/override.hpp	/^    operator()() const$/;"	f	class:boost::python::override	access:public	signature:() const
boost::python::override::override	/usr/include/boost/python/override.hpp	/^    override(handle<> x)$/;"	f	class:boost::python::override	access:private	signature:(handle< x)
boost::python::pickle_suite	/usr/include/boost/python/object/pickle_support.hpp	/^struct pickle_suite$/;"	s	namespace:boost::python
boost::python::pickle_suite::getinitargs	/usr/include/boost/python/object/pickle_support.hpp	/^    static inaccessible* getinitargs() { return 0; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
boost::python::pickle_suite::getstate	/usr/include/boost/python/object/pickle_support.hpp	/^    static inaccessible* getstate() { return 0; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
boost::python::pickle_suite::getstate_manages_dict	/usr/include/boost/python/object/pickle_support.hpp	/^    static bool getstate_manages_dict() { return false; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
boost::python::pickle_suite::inaccessible	/usr/include/boost/python/object/pickle_support.hpp	/^    struct inaccessible {};$/;"	s	struct:boost::python::pickle_suite	access:private
boost::python::pickle_suite::setstate	/usr/include/boost/python/object/pickle_support.hpp	/^    static inaccessible* setstate() { return 0; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
boost::python::pointee	/usr/include/boost/python/pointee.hpp	/^struct pointee$/;"	s	namespace:boost::python	inherits:detail::pointee_impl::,apply
boost::python::pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^template<class Ptr> class pointer_wrapper$/;"	c	namespace:boost::python
boost::python::pointer_wrapper::get	/usr/include/boost/python/ptr.hpp	/^    Ptr get() const { return p_; }$/;"	f	class:boost::python::pointer_wrapper	access:public	signature:() const
boost::python::pointer_wrapper::operator Ptr	/usr/include/boost/python/ptr.hpp	/^    operator Ptr() const { return p_; }$/;"	f	class:boost::python::pointer_wrapper	access:public	signature:() const
boost::python::pointer_wrapper::p_	/usr/include/boost/python/ptr.hpp	/^    Ptr p_;$/;"	m	class:boost::python::pointer_wrapper	access:private
boost::python::pointer_wrapper::pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^    explicit pointer_wrapper(Ptr x): p_(x) {}$/;"	f	class:boost::python::pointer_wrapper	access:public	signature:(Ptr x)
boost::python::pointer_wrapper::type	/usr/include/boost/python/ptr.hpp	/^    typedef Ptr type;$/;"	t	class:boost::python::pointer_wrapper	access:public
boost::python::ptr	/usr/include/boost/python/ptr.hpp	/^inline pointer_wrapper<T> ptr(T t)$/;"	f	namespace:boost::python	signature:(T t)
boost::python::pure_virtual	/usr/include/boost/python/pure_virtual.hpp	/^pure_virtual(PointerToMemberFunction pmf)$/;"	f	namespace:boost::python	signature:(PointerToMemberFunction pmf)
boost::python::pytype_check	/usr/include/boost/python/errors.hpp	/^BOOST_PYTHON_DECL PyObject* pytype_check(PyTypeObject* pytype, PyObject* source);$/;"	p	namespace:boost::python	signature:(PyTypeObject* pytype, PyObject* source)
boost::python::range	/usr/include/boost/python/iterator.hpp	/^object range(Accessor1 start, Accessor2 finish)$/;"	f	namespace:boost::python	signature:(Accessor1 start, Accessor2 finish)
boost::python::range	/usr/include/boost/python/iterator.hpp	/^object range(Accessor1 start, Accessor2 finish, NextPolicies* = 0)$/;"	f	namespace:boost::python	signature:(Accessor1 start, Accessor2 finish, NextPolicies* = 0)
boost::python::range	/usr/include/boost/python/iterator.hpp	/^object range(Accessor1 start, Accessor2 finish, NextPolicies* = 0, boost::type<Target>* = 0)$/;"	f	namespace:boost::python	signature:(Accessor1 start, Accessor2 finish, NextPolicies* = 0, boost::type<Target>* = 0)
boost::python::raw_function	/usr/include/boost/python/raw_function.hpp	/^object raw_function(F f, std::size_t min_args = 0)$/;"	f	namespace:boost::python	signature:(F f, std::size_t min_args = 0)
boost::python::reference_existing_object	/usr/include/boost/python/reference_existing_object.hpp	/^struct reference_existing_object$/;"	s	namespace:boost::python
boost::python::reference_existing_object::apply	/usr/include/boost/python/reference_existing_object.hpp	/^    struct apply$/;"	s	struct:boost::python::reference_existing_object	access:public
boost::python::reference_existing_object::apply::BOOST_STATIC_CONSTANT	/usr/include/boost/python/reference_existing_object.hpp	/^        BOOST_STATIC_CONSTANT($/;"	p	struct:boost::python::reference_existing_object::apply	access:public	signature:( bool, ok = is_pointer<T>::value || is_reference<T>::value)
boost::python::reference_existing_object::apply::type	/usr/include/boost/python/reference_existing_object.hpp	/^        >::type type;$/;"	t	struct:boost::python::reference_existing_object::apply	access:public
boost::python::register_exception_translator	/usr/include/boost/python/exception_translator.hpp	/^void register_exception_translator(Translate translate, boost::type<ExceptionType>* = 0)$/;"	f	namespace:boost::python	signature:(Translate translate, boost::type<ExceptionType>* = 0)
boost::python::return_arg	/usr/include/boost/python/return_arg.hpp	/^struct return_arg : Base$/;"	s	namespace:boost::python	inherits:Base
boost::python::return_arg::BOOST_STATIC_CONSTANT	/usr/include/boost/python/return_arg.hpp	/^    BOOST_STATIC_CONSTANT(bool, legal = arg_pos > 0);$/;"	p	struct:boost::python::return_arg	access:private	signature:(bool, legal = arg_pos > 0)
boost::python::return_arg::extract_return_type	/usr/include/boost/python/return_arg.hpp	/^    struct extract_return_type : mpl::at_c<Sig, arg_pos>$/;"	s	struct:boost::python::return_arg	inherits:mpl::at_c	access:public
boost::python::return_arg::postcall	/usr/include/boost/python/return_arg.hpp	/^    static PyObject* postcall(ArgumentPackage const& args, PyObject* result)$/;"	f	struct:boost::python::return_arg	access:public	signature:(ArgumentPackage const& args, PyObject* result)
boost::python::return_arg::result_converter	/usr/include/boost/python/return_arg.hpp	/^    >::type result_converter;$/;"	t	struct:boost::python::return_arg	access:public
boost::python::return_by_value	/usr/include/boost/python/return_by_value.hpp	/^struct return_by_value$/;"	s	namespace:boost::python
boost::python::return_by_value::apply	/usr/include/boost/python/return_by_value.hpp	/^    struct apply$/;"	s	struct:boost::python::return_by_value	access:public
boost::python::return_by_value::apply::type	/usr/include/boost/python/return_by_value.hpp	/^       > type;$/;"	t	struct:boost::python::return_by_value::apply	access:public
boost::python::return_internal_reference	/usr/include/boost/python/return_internal_reference.hpp	/^struct return_internal_reference$/;"	s	namespace:boost::python	inherits:with_custodian_and_ward_postcall
boost::python::return_internal_reference::BOOST_STATIC_CONSTANT	/usr/include/boost/python/return_internal_reference.hpp	/^    BOOST_STATIC_CONSTANT(bool, legal = owner_arg > 0);$/;"	p	struct:boost::python::return_internal_reference	access:private	signature:(bool, legal = owner_arg > 0)
boost::python::return_internal_reference::result_converter	/usr/include/boost/python/return_internal_reference.hpp	/^    >::type result_converter;$/;"	t	struct:boost::python::return_internal_reference	access:public
boost::python::return_opaque_pointer	/usr/include/boost/python/return_opaque_pointer.hpp	/^struct return_opaque_pointer$/;"	s	namespace:boost::python
boost::python::return_opaque_pointer::apply	/usr/include/boost/python/return_opaque_pointer.hpp	/^    struct apply$/;"	s	struct:boost::python::return_opaque_pointer	access:public
boost::python::return_opaque_pointer::apply::BOOST_MPL_ASSERT_MSG	/usr/include/boost/python/return_opaque_pointer.hpp	/^        BOOST_MPL_ASSERT_MSG( is_pointer<R>::value, RETURN_OPAQUE_POINTER_EXPECTS_A_POINTER_TYPE, (R));$/;"	p	struct:boost::python::return_opaque_pointer::apply	access:public	signature:( is_pointer<R>::value, RETURN_OPAQUE_POINTER_EXPECTS_A_POINTER_TYPE, (R))
boost::python::return_opaque_pointer::apply::type	/usr/include/boost/python/return_opaque_pointer.hpp	/^        struct type :  $/;"	s	struct:boost::python::return_opaque_pointer::apply	inherits:boost::python::to_python_value	access:public
boost::python::return_opaque_pointer::apply::type::type	/usr/include/boost/python/return_opaque_pointer.hpp	/^            type() { detail::opaque_pointee(R()); }$/;"	f	struct:boost::python::return_opaque_pointer::apply::type	access:public	signature:()
boost::python::return_self	/usr/include/boost/python/return_arg.hpp	/^struct return_self $/;"	s	namespace:boost::python	inherits:return_arg
boost::python::return_value_policy	/usr/include/boost/python/return_value_policy.hpp	/^struct return_value_policy : BasePolicy_$/;"	s	namespace:boost::python	inherits:BasePolicy_
boost::python::return_value_policy::result_converter	/usr/include/boost/python/return_value_policy.hpp	/^    typedef ResultConverterGenerator result_converter;$/;"	t	struct:boost::python::return_value_policy	access:public
boost::python::scope	/usr/include/boost/python/scope.hpp	/^class scope$/;"	c	namespace:boost::python	inherits:object
boost::python::scope::m_previous_scope	/usr/include/boost/python/scope.hpp	/^    PyObject* m_previous_scope;$/;"	m	class:boost::python::scope	access:private
boost::python::scope::operator =	/usr/include/boost/python/scope.hpp	/^    void operator=(scope const&);$/;"	p	class:boost::python::scope	access:private	signature:(scope const&)
boost::python::scope::scope	/usr/include/boost/python/scope.hpp	/^    inline scope();$/;"	p	class:boost::python::scope	access:public	signature:()
boost::python::scope::scope	/usr/include/boost/python/scope.hpp	/^    inline scope(object const&);$/;"	p	class:boost::python::scope	access:public	signature:(object const&)
boost::python::scope::scope	/usr/include/boost/python/scope.hpp	/^    inline scope(scope const&);$/;"	p	class:boost::python::scope	access:public	signature:(scope const&)
boost::python::scope::scope	/usr/include/boost/python/scope.hpp	/^inline scope::scope()$/;"	f	class:boost::python::scope	signature:()
boost::python::scope::scope	/usr/include/boost/python/scope.hpp	/^inline scope::scope(object const& new_scope)$/;"	f	class:boost::python::scope	signature:(object const& new_scope)
boost::python::scope::scope	/usr/include/boost/python/scope.hpp	/^inline scope::scope(scope const& new_scope)$/;"	f	class:boost::python::scope	signature:(scope const& new_scope)
boost::python::scope::~scope	/usr/include/boost/python/scope.hpp	/^    inline ~scope();$/;"	p	class:boost::python::scope	access:public	signature:()
boost::python::scope::~scope	/usr/include/boost/python/scope.hpp	/^inline scope::~scope()$/;"	f	class:boost::python::scope	signature:()
boost::python::self_ns	/usr/include/boost/python/operators.hpp	/^namespace self_ns$/;"	n	namespace:boost::python
boost::python::self_ns	/usr/include/boost/python/self.hpp	/^namespace self_ns$/;"	n	namespace:boost::python
boost::python::self_ns::pow	/usr/include/boost/python/operators.hpp	/^  pow(L const&, R const&)$/;"	f	namespace:boost::python::self_ns	signature:(L const&, R const&)
boost::python::self_ns::self	/usr/include/boost/python/self.hpp	/^  enum self_t { self };$/;"	e	enum:boost::python::self_ns::self_t
boost::python::self_ns::self_t	/usr/include/boost/python/self.hpp	/^  enum self_t { self };$/;"	g	namespace:boost::python::self_ns
boost::python::slice	/usr/include/boost/python/slice.hpp	/^class slice : public detail::slice_base$/;"	c	namespace:boost::python	inherits:detail::slice_base
boost::python::slice::base	/usr/include/boost/python/slice.hpp	/^    typedef detail::slice_base base;$/;"	t	class:boost::python::slice	access:private
boost::python::slice::get_indices	/usr/include/boost/python/slice.hpp	/^    get_indices( const RandomAccessIterator& begin, $/;"	f	class:boost::python::slice	access:public	signature:( const RandomAccessIterator& begin, const RandomAccessIterator& end) const
boost::python::slice::get_indicies	/usr/include/boost/python/slice.hpp	/^    get_indicies( const RandomAccessIterator& begin, $/;"	f	class:boost::python::slice	access:public	signature:( const RandomAccessIterator& begin, const RandomAccessIterator& end) const
boost::python::slice::range	/usr/include/boost/python/slice.hpp	/^    struct range$/;"	s	class:boost::python::slice	access:public
boost::python::slice::range::start	/usr/include/boost/python/slice.hpp	/^        RandomAccessIterator start;$/;"	m	struct:boost::python::slice::range	access:public
boost::python::slice::range::step	/usr/include/boost/python/slice.hpp	/^        typename iterator_difference<RandomAccessIterator>::type step;$/;"	m	struct:boost::python::slice::range	access:public
boost::python::slice::range::stop	/usr/include/boost/python/slice.hpp	/^        RandomAccessIterator stop;$/;"	m	struct:boost::python::slice::range	access:public
boost::python::slice::slice	/usr/include/boost/python/slice.hpp	/^    slice( Integer1 start, Integer2 stop)$/;"	f	class:boost::python::slice	access:public	signature:( Integer1 start, Integer2 stop)
boost::python::slice::slice	/usr/include/boost/python/slice.hpp	/^    slice( Integer1 start, Integer2 stop, Integer3 stride)$/;"	f	class:boost::python::slice	access:public	signature:( Integer1 start, Integer2 stop, Integer3 stride)
boost::python::slice::slice	/usr/include/boost/python/slice.hpp	/^    slice() : base(0,0,0) {}$/;"	f	class:boost::python::slice	access:public	signature:()
boost::python::ssize_t	/usr/include/boost/python/ssize_t.hpp	/^typedef Py_ssize_t ssize_t;$/;"	t	namespace:boost::python
boost::python::ssize_t_max	/usr/include/boost/python/ssize_t.hpp	/^ssize_t const ssize_t_max = PY_SSIZE_T_MAX;$/;"	m	namespace:boost::python
boost::python::ssize_t_min	/usr/include/boost/python/ssize_t.hpp	/^ssize_t const ssize_t_min = PY_SSIZE_T_MIN;$/;"	m	namespace:boost::python
boost::python::stl_input_iterator	/usr/include/boost/python/stl_iterator.hpp	/^struct stl_input_iterator$/;"	s	namespace:boost::python	inherits:boost::iterator_facade
boost::python::stl_input_iterator::dereference	/usr/include/boost/python/stl_iterator.hpp	/^    ValueT dereference() const$/;"	f	struct:boost::python::stl_input_iterator	access:private	signature:() const
boost::python::stl_input_iterator::equal	/usr/include/boost/python/stl_iterator.hpp	/^    bool equal(stl_input_iterator<ValueT> const &that) const$/;"	f	struct:boost::python::stl_input_iterator	access:private	signature:(stl_input_iterator<ValueT> const &that) const
boost::python::stl_input_iterator::impl_	/usr/include/boost/python/stl_iterator.hpp	/^    objects::stl_input_iterator_impl impl_;$/;"	m	struct:boost::python::stl_input_iterator	access:private
boost::python::stl_input_iterator::increment	/usr/include/boost/python/stl_iterator.hpp	/^    void increment()$/;"	f	struct:boost::python::stl_input_iterator	access:private	signature:()
boost::python::stl_input_iterator::stl_input_iterator	/usr/include/boost/python/stl_iterator.hpp	/^    stl_input_iterator()$/;"	f	struct:boost::python::stl_input_iterator	access:public	signature:()
boost::python::stl_input_iterator::stl_input_iterator	/usr/include/boost/python/stl_iterator.hpp	/^    stl_input_iterator(boost::python::object const &ob)$/;"	f	struct:boost::python::stl_input_iterator	access:public	signature:(boost::python::object const &ob)
boost::python::str	/usr/include/boost/python/str.hpp	/^class str : public detail::str_base$/;"	c	namespace:boost::python	inherits:detail::str_base
boost::python::str::base	/usr/include/boost/python/str.hpp	/^    typedef detail::str_base base;$/;"	t	class:boost::python::str	access:private
boost::python::str::center	/usr/include/boost/python/str.hpp	/^    str center(T const& width) const$/;"	f	class:boost::python::str	access:public	signature:(T const& width) const
boost::python::str::count	/usr/include/boost/python/str.hpp	/^    long count(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
boost::python::str::count	/usr/include/boost/python/str.hpp	/^    long count(T1 const& sub,T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub,T2 const& start) const
boost::python::str::count	/usr/include/boost/python/str.hpp	/^    long count(T1 const& sub,T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub,T2 const& start, T3 const& end) const
boost::python::str::decode	/usr/include/boost/python/str.hpp	/^    object decode() const { return base::decode(); }$/;"	f	class:boost::python::str	access:public	signature:() const
boost::python::str::decode	/usr/include/boost/python/str.hpp	/^    object decode(T const& encoding) const$/;"	f	class:boost::python::str	access:public	signature:(T const& encoding) const
boost::python::str::decode	/usr/include/boost/python/str.hpp	/^    object decode(T1 const& encoding, T2 const& errors) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& encoding, T2 const& errors) const
boost::python::str::encode	/usr/include/boost/python/str.hpp	/^    object encode() const { return base::encode(); }$/;"	f	class:boost::python::str	access:public	signature:() const
boost::python::str::encode	/usr/include/boost/python/str.hpp	/^    object encode(T const& encoding) const$/;"	f	class:boost::python::str	access:public	signature:(T const& encoding) const
boost::python::str::encode	/usr/include/boost/python/str.hpp	/^    object encode(T1 const& encoding, T2 const& errors) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& encoding, T2 const& errors) const
boost::python::str::endswith	/usr/include/boost/python/str.hpp	/^    bool endswith(T const& suffix) const$/;"	f	class:boost::python::str	access:public	signature:(T const& suffix) const
boost::python::str::endswith	/usr/include/boost/python/str.hpp	/^    bool endswith(T1 const& suffix, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& suffix, T2 const& start) const
boost::python::str::endswith	/usr/include/boost/python/str.hpp	/^    bool endswith(T1 const& suffix, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& suffix, T2 const& start, T3 const& end) const
boost::python::str::expandtabs	/usr/include/boost/python/str.hpp	/^    str expandtabs() const { return base::expandtabs(); }$/;"	f	class:boost::python::str	access:public	signature:() const
boost::python::str::expandtabs	/usr/include/boost/python/str.hpp	/^    str expandtabs(T const& tabsize) const$/;"	f	class:boost::python::str	access:public	signature:(T const& tabsize) const
boost::python::str::find	/usr/include/boost/python/str.hpp	/^    long find(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
boost::python::str::find	/usr/include/boost/python/str.hpp	/^    long find(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
boost::python::str::find	/usr/include/boost/python/str.hpp	/^    long find(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
boost::python::str::index	/usr/include/boost/python/str.hpp	/^    long index(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
boost::python::str::index	/usr/include/boost/python/str.hpp	/^    long index(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
boost::python::str::index	/usr/include/boost/python/str.hpp	/^    long index(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
boost::python::str::join	/usr/include/boost/python/str.hpp	/^    str join(T const& sequence) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sequence) const
boost::python::str::ljust	/usr/include/boost/python/str.hpp	/^    str ljust(T const& width) const$/;"	f	class:boost::python::str	access:public	signature:(T const& width) const
boost::python::str::replace	/usr/include/boost/python/str.hpp	/^    str replace(T1 const& old, T2 const& new_) const $/;"	f	class:boost::python::str	access:public	signature:(T1 const& old, T2 const& new_) const
boost::python::str::replace	/usr/include/boost/python/str.hpp	/^    str replace(T1 const& old, T2 const& new_, T3 const& maxsplit) const $/;"	f	class:boost::python::str	access:public	signature:(T1 const& old, T2 const& new_, T3 const& maxsplit) const
boost::python::str::rfind	/usr/include/boost/python/str.hpp	/^    long rfind(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
boost::python::str::rfind	/usr/include/boost/python/str.hpp	/^    long rfind(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
boost::python::str::rfind	/usr/include/boost/python/str.hpp	/^    long rfind(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
boost::python::str::rindex	/usr/include/boost/python/str.hpp	/^    long rindex(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
boost::python::str::rindex	/usr/include/boost/python/str.hpp	/^    long rindex(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
boost::python::str::rindex	/usr/include/boost/python/str.hpp	/^    long rindex(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
boost::python::str::rjust	/usr/include/boost/python/str.hpp	/^    str rjust(T const& width) const$/;"	f	class:boost::python::str	access:public	signature:(T const& width) const
boost::python::str::split	/usr/include/boost/python/str.hpp	/^    list split() const { return base::split(); }$/;"	f	class:boost::python::str	access:public	signature:() const
boost::python::str::split	/usr/include/boost/python/str.hpp	/^    list split(T const& sep) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sep) const
boost::python::str::split	/usr/include/boost/python/str.hpp	/^    list split(T1 const& sep, T2 const& maxsplit) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sep, T2 const& maxsplit) const
boost::python::str::splitlines	/usr/include/boost/python/str.hpp	/^    list splitlines() const { return base::splitlines(); }$/;"	f	class:boost::python::str	access:public	signature:() const
boost::python::str::splitlines	/usr/include/boost/python/str.hpp	/^    list splitlines(T const& keepends) const$/;"	f	class:boost::python::str	access:public	signature:(T const& keepends) const
boost::python::str::startswith	/usr/include/boost/python/str.hpp	/^    bool startswith(T const& prefix) const$/;"	f	class:boost::python::str	access:public	signature:(T const& prefix) const
boost::python::str::startswith	/usr/include/boost/python/str.hpp	/^    bool startswith(T1 const& prefix, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& prefix, T2 const& start) const
boost::python::str::startswith	/usr/include/boost/python/str.hpp	/^    bool startswith(T1 const& prefix, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& prefix, T2 const& start, T3 const& end) const
boost::python::str::str	/usr/include/boost/python/str.hpp	/^    explicit str(T const& other)$/;"	f	class:boost::python::str	access:public	signature:(T const& other)
boost::python::str::str	/usr/include/boost/python/str.hpp	/^    str() {} \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:()
boost::python::str::str	/usr/include/boost/python/str.hpp	/^    str(char const* start, char const* finish) \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:(char const* start, char const* finish)
boost::python::str::str	/usr/include/boost/python/str.hpp	/^    str(char const* start, std::size_t length) \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:(char const* start, std::size_t length)
boost::python::str::str	/usr/include/boost/python/str.hpp	/^    str(const char* s) : base(s) {} \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:(const char* s)
boost::python::str::translate	/usr/include/boost/python/str.hpp	/^    str translate(T const& table) const$/;"	f	class:boost::python::str	access:public	signature:(T const& table) const
boost::python::str::translate	/usr/include/boost/python/str.hpp	/^    str translate(T1 const& table, T2 const& deletechars) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& table, T2 const& deletechars) const
boost::python::tag	/usr/include/boost/python/tag.hpp	/^enum tag_t { tag };$/;"	e	enum:boost::python::tag_t
boost::python::tag_t	/usr/include/boost/python/tag.hpp	/^enum tag_t { tag };$/;"	g	namespace:boost::python
boost::python::throw_error_already_set	/usr/include/boost/python/errors.hpp	/^BOOST_PYTHON_DECL void throw_error_already_set();$/;"	p	namespace:boost::python	signature:()
boost::python::to_python_converter	/usr/include/boost/python/to_python_converter.hpp	/^struct to_python_converter $/;"	s	namespace:boost::python
boost::python::to_python_converter::HasGetPytype	/usr/include/boost/python/to_python_converter.hpp	/^    typedef boost::mpl::bool_<has_get_pytype> HasGetPytype;$/;"	t	struct:boost::python::to_python_converter	access:public
boost::python::to_python_converter::get_pytype_1	/usr/include/boost/python/to_python_converter.hpp	/^    static PyTypeObject const* get_pytype_1(boost::mpl::false_ *)$/;"	f	struct:boost::python::to_python_converter	access:public	signature:(boost::mpl::false_ *)
boost::python::to_python_converter::get_pytype_1	/usr/include/boost/python/to_python_converter.hpp	/^    static PyTypeObject const* get_pytype_1(boost::mpl::true_ *)$/;"	f	struct:boost::python::to_python_converter	access:public	signature:(boost::mpl::true_ *)
boost::python::to_python_converter::get_pytype_impl	/usr/include/boost/python/to_python_converter.hpp	/^    static PyTypeObject const* get_pytype_impl()$/;"	f	struct:boost::python::to_python_converter	access:public	signature:()
boost::python::to_python_converter::to_python_converter	/usr/include/boost/python/to_python_converter.hpp	/^    to_python_converter();$/;"	p	struct:boost::python::to_python_converter	access:public	signature:()
boost::python::to_python_converter::to_python_converter	/usr/include/boost/python/to_python_converter.hpp	/^to_python_converter<T,Conversion, has_get_pytype>::to_python_converter()$/;"	f	class:boost::python::to_python_converter	signature:()
boost::python::to_python_indirect	/usr/include/boost/python/to_python_indirect.hpp	/^struct to_python_indirect$/;"	s	namespace:boost::python
boost::python::to_python_indirect::execute	/usr/include/boost/python/to_python_indirect.hpp	/^    inline PyObject* execute(U const& x, mpl::false_) const$/;"	f	struct:boost::python::to_python_indirect	access:private	signature:(U const& x, mpl::false_) const
boost::python::to_python_indirect::execute	/usr/include/boost/python/to_python_indirect.hpp	/^    inline PyObject* execute(U* ptr, mpl::true_) const$/;"	f	struct:boost::python::to_python_indirect	access:private	signature:(U* ptr, mpl::true_) const
boost::python::to_python_indirect::get_pytype	/usr/include/boost/python/to_python_indirect.hpp	/^    get_pytype()const$/;"	f	struct:boost::python::to_python_indirect	access:public	signature:() const
boost::python::to_python_indirect::operator ()	/usr/include/boost/python/to_python_indirect.hpp	/^    operator()(U const& ref) const$/;"	f	struct:boost::python::to_python_indirect	access:public	signature:(U const& ref) const
boost::python::to_python_value	/usr/include/boost/python/to_python_value.hpp	/^struct to_python_value$/;"	s	namespace:boost::python	inherits:mpl::if_::type
boost::python::tuple	/usr/include/boost/python/tuple.hpp	/^class tuple : public detail::tuple_base$/;"	c	namespace:boost::python	inherits:detail::tuple_base
boost::python::tuple::base	/usr/include/boost/python/tuple.hpp	/^    typedef detail::tuple_base base;$/;"	t	class:boost::python::tuple	access:private
boost::python::tuple::tuple	/usr/include/boost/python/tuple.hpp	/^    explicit tuple(T const& sequence)$/;"	f	class:boost::python::tuple	access:public	signature:(T const& sequence)
boost::python::tuple::tuple	/usr/include/boost/python/tuple.hpp	/^    tuple() {}$/;"	f	class:boost::python::tuple	access:public	signature:()
boost::python::type_handle	/usr/include/boost/python/handle.hpp	/^typedef handle<PyTypeObject> type_handle;$/;"	t	namespace:boost::python
boost::python::type_info	/usr/include/boost/python/type_id.hpp	/^struct type_info : private totally_ordered<type_info>$/;"	s	namespace:boost::python	inherits:totally_ordered
boost::python::type_info::base_id_t	/usr/include/boost/python/type_id.hpp	/^    typedef char const* base_id_t;$/;"	t	struct:boost::python::type_info	access:private
boost::python::type_info::m_base_type	/usr/include/boost/python/type_id.hpp	/^    base_id_t m_base_type;$/;"	m	struct:boost::python::type_info	access:private
boost::python::type_info::name	/usr/include/boost/python/type_id.hpp	/^    char const* name() const;$/;"	p	struct:boost::python::type_info	access:public	signature:() const
boost::python::type_info::name	/usr/include/boost/python/type_id.hpp	/^inline char const* type_info::name() const$/;"	f	class:boost::python::type_info	signature:() const
boost::python::type_info::operator <	/usr/include/boost/python/type_id.hpp	/^    inline bool operator<(type_info const& rhs) const;$/;"	p	struct:boost::python::type_info	access:public	signature:(type_info const& rhs) const
boost::python::type_info::operator <	/usr/include/boost/python/type_id.hpp	/^inline bool type_info::operator<(type_info const& rhs) const$/;"	f	class:boost::python::type_info	signature:(type_info const& rhs) const
boost::python::type_info::operator <<	/usr/include/boost/python/type_id.hpp	/^    friend BOOST_PYTHON_DECL std::ostream& operator<<($/;"	p	struct:boost::python::type_info	access:friend	signature:( std::ostream&, type_info const&)
boost::python::type_info::operator ==	/usr/include/boost/python/type_id.hpp	/^    inline bool operator==(type_info const& rhs) const;$/;"	p	struct:boost::python::type_info	access:public	signature:(type_info const& rhs) const
boost::python::type_info::operator ==	/usr/include/boost/python/type_id.hpp	/^inline bool type_info::operator==(type_info const& rhs) const$/;"	f	class:boost::python::type_info	signature:(type_info const& rhs) const
boost::python::type_info::std::base_id_t	/usr/include/boost/python/type_id.hpp	/^    typedef std::type_info const* base_id_t;$/;"	t	class:boost::python::type_info::std	access:private
boost::python::type_info::type_info	/usr/include/boost/python/type_id.hpp	/^    inline type_info(std::type_info const& = typeid(void));$/;"	p	struct:boost::python::type_info	access:public	signature:(std::type_info const& = typeid(void))
boost::python::type_info::type_info	/usr/include/boost/python/type_id.hpp	/^inline type_info::type_info(std::type_info const& id)$/;"	f	class:boost::python::type_info	signature:(std::type_info const& id)
boost::python::unwrap_pointer	/usr/include/boost/python/ptr.hpp	/^class unwrap_pointer$/;"	c	namespace:boost::python
boost::python::unwrap_pointer	/usr/include/boost/python/ptr.hpp	/^class unwrap_pointer$/;"	c	namespace:boost::python	inherits:detail::pointer_unwrapper::,apply
boost::python::unwrap_pointer	/usr/include/boost/python/ptr.hpp	/^class unwrap_pointer<pointer_wrapper<T> >$/;"	c	namespace:boost::python
boost::python::unwrap_pointer::type	/usr/include/boost/python/ptr.hpp	/^    typedef T type;$/;"	t	class:boost::python::unwrap_pointer	access:public
boost::python::upcast	/usr/include/boost/python/cast.hpp	/^inline Target* upcast(Source* x, Target* = 0)$/;"	f	namespace:boost::python	signature:(Source* x, Target* = 0)
boost::python::vector_indexing_suite	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^    class vector_indexing_suite $/;"	c	namespace:boost::python	inherits:indexing_suite
boost::python::vector_indexing_suite::append	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        append(Container& container, data_type const& v)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, data_type const& v)
boost::python::vector_indexing_suite::base_append	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        base_append(Container& container, object v)$/;"	f	class:boost::python::vector_indexing_suite	access:private	signature:(Container& container, object v)
boost::python::vector_indexing_suite::base_extend	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        base_extend(Container& container, object v)$/;"	f	class:boost::python::vector_indexing_suite	access:private	signature:(Container& container, object v)
boost::python::vector_indexing_suite::compare_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        compare_index(Container& \/*container*\/, index_type a, index_type b)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& , index_type a, index_type b)
boost::python::vector_indexing_suite::contains	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        contains(Container& container, key_type const& key)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, key_type const& key)
boost::python::vector_indexing_suite::convert_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        convert_index(Container& container, PyObject* i_)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, PyObject* i_)
boost::python::vector_indexing_suite::data_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::value_type data_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
boost::python::vector_indexing_suite::delete_item	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        delete_item(Container& container, index_type i)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type i)
boost::python::vector_indexing_suite::delete_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        delete_slice(Container& container, index_type from, index_type to)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to)
boost::python::vector_indexing_suite::difference_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::difference_type difference_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
boost::python::vector_indexing_suite::extend	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        extend(Container& container, Iter first, Iter last)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, Iter first, Iter last)
boost::python::vector_indexing_suite::extension_def	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        extension_def(Class& cl)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Class& cl)
boost::python::vector_indexing_suite::get_item	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_item(Container& container, index_type i)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type i)
boost::python::vector_indexing_suite::get_max_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_max_index(Container& container)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container)
boost::python::vector_indexing_suite::get_min_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_min_index(Container& \/*container*\/)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& )
boost::python::vector_indexing_suite::get_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_slice(Container& container, index_type from, index_type to)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to)
boost::python::vector_indexing_suite::index_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::size_type index_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
boost::python::vector_indexing_suite::key_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::value_type key_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
boost::python::vector_indexing_suite::set_item	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        set_item(Container& container, index_type i, data_type const& v)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type i, data_type const& v)
boost::python::vector_indexing_suite::set_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        set_slice(Container& container, index_type from, $/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to, Iter first, Iter last)
boost::python::vector_indexing_suite::set_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        set_slice(Container& container, index_type from, $/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to, data_type const& v)
boost::python::vector_indexing_suite::size	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        size(Container& container)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container)
boost::python::vector_indexing_suite::size_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::size_type size_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
boost::python::with_custodian_and_ward	/usr/include/boost/python/with_custodian_and_ward.hpp	/^struct with_custodian_and_ward : BasePolicy_$/;"	s	namespace:boost::python	inherits:BasePolicy_
boost::python::with_custodian_and_ward::precall	/usr/include/boost/python/with_custodian_and_ward.hpp	/^    static bool precall(ArgumentPackage const& args_)$/;"	f	struct:boost::python::with_custodian_and_ward	access:public	signature:(ArgumentPackage const& args_)
boost::python::with_custodian_and_ward_postcall	/usr/include/boost/python/with_custodian_and_ward.hpp	/^struct with_custodian_and_ward_postcall : BasePolicy_$/;"	s	namespace:boost::python	inherits:BasePolicy_
boost::python::with_custodian_and_ward_postcall::postcall	/usr/include/boost/python/with_custodian_and_ward.hpp	/^    static PyObject* postcall(ArgumentPackage const& args_, PyObject* result)$/;"	f	struct:boost::python::with_custodian_and_ward_postcall	access:public	signature:(ArgumentPackage const& args_, PyObject* result)
boost::python::wrapper	/usr/include/boost/python/wrapper.hpp	/^class wrapper : public detail::wrapper_base$/;"	c	namespace:boost::python	inherits:detail::wrapper_base
boost::python::wrapper::_wrapper_wrapped_type_	/usr/include/boost/python/wrapper.hpp	/^    typedef T _wrapper_wrapped_type_;$/;"	t	class:boost::python::wrapper	access:public
boost::python::wrapper::get_override	/usr/include/boost/python/wrapper.hpp	/^    override get_override(char const* name) const$/;"	f	class:boost::python::wrapper	access:protected	signature:(char const* name) const
boost::python::xdecref	/usr/include/boost/python/refcount.hpp	/^inline void xdecref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
boost::python::xincref	/usr/include/boost/python/refcount.hpp	/^inline T* xincref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
borrowed	/usr/include/boost/python/borrowed.hpp	/^inline python::detail::borrowed<T>* borrowed(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
borrowed	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^template<class T> class borrowed$/;"	c	namespace:boost::python::detail
borrowed_reference	/usr/include/boost/python/detail/raw_pyobject.hpp	/^typedef borrowed_reference_t* borrowed_reference;$/;"	t	namespace:boost::python::detail
builtin_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  struct builtin_to_python$/;"	s	namespace:boost::python::detail
bytes	/usr/include/boost/python/detail/referent_storage.hpp	/^    char bytes[size];$/;"	m	union:boost::python::detail::aligned_storage	access:public
bytes	/usr/include/boost/python/object/instance.hpp	/^        char bytes[sizeof(Data)];$/;"	m	union:boost::python::objects::instance::__anon7	access:public
byteswap	/usr/include/boost/python/numeric.hpp	/^      void byteswap();$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:()
call	/usr/include/boost/python/converter/object_manager.hpp	/^      static type call();$/;"	p	struct:boost::python::converter::detail::is_object_manager_help	access:public	signature:()
call	/usr/include/boost/python/dict.hpp	/^      static detail::new_reference call(object const&);$/;"	p	struct:boost::python::detail::dict_base	access:private	signature:(object const&)
call	/usr/include/boost/python/list.hpp	/^      static detail::new_non_null_reference call(object const&);$/;"	p	struct:boost::python::detail::list_base	access:private	signature:(object const&)
call	/usr/include/boost/python/long.hpp	/^      static detail::new_non_null_reference call(object const&);$/;"	p	struct:boost::python::detail::long_base	access:private	signature:(object const&)
call	/usr/include/boost/python/long.hpp	/^      static detail::new_non_null_reference call(object const&, object const&);$/;"	p	struct:boost::python::detail::long_base	access:private	signature:(object const&, object const&)
call	/usr/include/boost/python/object/function.hpp	/^    PyObject* call(PyObject*, PyObject*) const;$/;"	p	struct:boost::python::objects::function	access:public	signature:(PyObject*, PyObject*) const
call	/usr/include/boost/python/str.hpp	/^      static new_reference call(object const&);$/;"	p	struct:boost::python::detail::str_base	access:private	signature:(object const&)
call	/usr/include/boost/python/tuple.hpp	/^      static detail::new_reference call(object const&);$/;"	p	struct:boost::python::detail::tuple_base	access:private	signature:(object const&)
call_policies	/usr/include/boost/python/detail/defaults_gen.hpp	/^      call_policies() const$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:() const
call_policies	/usr/include/boost/python/detail/defaults_gen.hpp	/^      call_policies() const$/;"	f	struct:boost::python::detail::overloads_proxy	access:public	signature:() const
call_policies	/usr/include/boost/python/init.hpp	/^    CallPoliciesT const& call_policies() const$/;"	f	class:boost::python::init_with_call_policies	access:public	signature:() const
call_policies	/usr/include/boost/python/init.hpp	/^    static default_call_policies call_policies()$/;"	f	struct:boost::python::init_base	access:public	signature:()
call_proxy	/usr/include/boost/python/object_core.hpp	/^  call_proxy(object target) : m_target(target) {} $/;"	f	class:boost::python::detail::call_proxy	access:public	signature:(object target)
call_proxy	/usr/include/boost/python/object_core.hpp	/^class call_proxy $/;"	c	namespace:boost::python::detail
caller	/usr/include/boost/python/detail/caller.hpp	/^    caller(F f, CallPolicies p) : base(f,p) {}$/;"	f	struct:boost::python::detail::caller	access:public	signature:(F f, CallPolicies p)
caller	/usr/include/boost/python/detail/caller.hpp	/^struct caller$/;"	s	namespace:boost::python::detail	inherits:caller_base_select::type
caller_base_select	/usr/include/boost/python/detail/caller.hpp	/^struct caller_base_select$/;"	s	namespace:boost::python::detail
caller_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^    caller_py_function_impl(Caller const& caller)$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:(Caller const& caller)
caller_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^struct caller_py_function_impl : py_function_impl_base$/;"	s	namespace:boost::python::objects	inherits:py_function_impl_base
cancel	/usr/include/boost/python/detail/decref_guard.hpp	/^    void cancel() { obj = 0; }$/;"	f	struct:boost::python::detail::decref_guard	access:public	signature:()
capitalize	/usr/include/boost/python/str.hpp	/^      str capitalize() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
cast_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct cast_generator$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
center	/usr/include/boost/python/str.hpp	/^      str center(object_cref width) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref width) const
center	/usr/include/boost/python/str.hpp	/^    str center(T const& width) const$/;"	f	class:boost::python::str	access:public	signature:(T const& width) const
chain	/usr/include/boost/python/detail/exception_handler.hpp	/^    static exception_handler* chain;$/;"	m	struct:boost::python::detail::exception_handler	access:public
check	/usr/include/boost/python/converter/pyobject_traits.hpp	/^    static bool check(PyObject*) { return true; }$/;"	f	struct:boost::python::converter::pyobject_traits	access:public	signature:(PyObject*)
check	/usr/include/boost/python/converter/pyobject_type.hpp	/^    static bool check(PyObject* x)$/;"	f	struct:boost::python::converter::pyobject_type	access:public	signature:(PyObject* x)
check	/usr/include/boost/python/detail/convertible.hpp	/^    static inline no_convertible check(...) { return 0; }$/;"	f	struct:boost::python::detail::convertible	access:public	signature:(....)
check	/usr/include/boost/python/detail/convertible.hpp	/^    static inline yes_convertible check(Target) { return 0; }$/;"	f	struct:boost::python::detail::convertible	access:public	signature:(Target)
check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_object_manager	access:public	signature:() const
check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_pointer	access:public	signature:() const
check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_reference	access:public	signature:() const
check	/usr/include/boost/python/extract.hpp	/^      bool check() const;$/;"	p	struct:boost::python::converter::extract_rvalue	access:public	signature:() const
check	/usr/include/boost/python/extract.hpp	/^  extract_rvalue<T>::check() const$/;"	f	class:boost::python::converter::extract_rvalue	signature:() const
check	/usr/include/boost/python/extract.hpp	/^  inline bool extract_object_manager<T>::check() const$/;"	f	class:boost::python::converter::extract_object_manager	signature:() const
check	/usr/include/boost/python/extract.hpp	/^  inline bool extract_pointer<Ptr>::check() const$/;"	f	class:boost::python::converter::extract_pointer	signature:() const
check	/usr/include/boost/python/extract.hpp	/^  inline bool extract_reference<Ref>::check() const$/;"	f	class:boost::python::converter::extract_reference	signature:() const
check	/usr/include/boost/python/numeric.hpp	/^      static bool check(PyObject* obj);$/;"	p	struct:boost::python::numeric::aux::array_object_manager_traits	access:public	signature:(PyObject* obj)
check	/usr/include/boost/python/object_core.hpp	/^      static bool check(PyObject*) { return true; }$/;"	f	struct:boost::python::converter::object_manager_traits	access:public	signature:(PyObject*)
check_invariant	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        check_invariant() const$/;"	f	class:boost::python::detail::proxy_group	access:private	signature:() const
checked_downcast	/usr/include/boost/python/converter/pyobject_traits.hpp	/^    static PyObject* checked_downcast(PyObject* x) { return x; }$/;"	f	struct:boost::python::converter::pyobject_traits	access:public	signature:(PyObject* x)
checked_downcast	/usr/include/boost/python/converter/pyobject_type.hpp	/^    static Object* checked_downcast(PyObject* x)$/;"	f	struct:boost::python::converter::pyobject_type	access:public	signature:(PyObject* x)
checked_downcast_impl	/usr/include/boost/python/converter/pyobject_type.hpp	/^BOOST_PYTHON_DECL PyObject* checked_downcast_impl(PyObject*, PyTypeObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, PyTypeObject*)
class_	/usr/include/boost/python/class.hpp	/^    class_(char const* name, char const* doc = 0);$/;"	p	class:boost::python::class_	access:public	signature:(char const* name, char const* doc = 0)
class_	/usr/include/boost/python/class.hpp	/^    class_(char const* name, char const* doc, no_init_t);$/;"	p	class:boost::python::class_	access:public	signature:(char const* name, char const* doc, no_init_t)
class_	/usr/include/boost/python/class.hpp	/^    class_(char const* name, no_init_t);$/;"	p	class:boost::python::class_	access:public	signature:(char const* name, no_init_t)
class_	/usr/include/boost/python/class.hpp	/^    inline class_(char const* name, char const* doc, init_base<DerivedT> const& i)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, char const* doc, init_base<DerivedT> const& i)
class_	/usr/include/boost/python/class.hpp	/^    inline class_(char const* name, init_base<DerivedT> const& i)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, init_base<DerivedT> const& i)
class_	/usr/include/boost/python/class.hpp	/^class class_ : public objects::class_base$/;"	c	namespace:boost::python	inherits:objects::class_base
class_	/usr/include/boost/python/class.hpp	/^inline class_<W,X1,X2,X3>::class_(char const* name, char const* doc)$/;"	f	class:boost::python::class_	signature:(char const* name, char const* doc)
class_	/usr/include/boost/python/class.hpp	/^inline class_<W,X1,X2,X3>::class_(char const* name, char const* doc, no_init_t)$/;"	f	class:boost::python::class_	signature:(char const* name, char const* doc, no_init_t)
class_	/usr/include/boost/python/class.hpp	/^inline class_<W,X1,X2,X3>::class_(char const* name, no_init_t)$/;"	f	class:boost::python::class_	signature:(char const* name, no_init_t)
class_base	/usr/include/boost/python/object/class.hpp	/^    class_base($/;"	p	struct:boost::python::objects::class_base	access:public	signature:( char const* name , std::size_t num_types , type_info const*const types , char const* doc = 0 )
class_base	/usr/include/boost/python/object/class.hpp	/^struct BOOST_PYTHON_DECL class_base : python::api::object$/;"	s	namespace:boost::python::objects	inherits:python::api::object
class_cref_wrapper	/usr/include/boost/python/object/class_wrapper.hpp	/^struct class_cref_wrapper$/;"	s	namespace:boost::python::objects	inherits:to_python_converter
class_id	/usr/include/boost/python/object/inheritance.hpp	/^typedef type_info class_id;$/;"	t	namespace:boost::python::objects
class_metadata	/usr/include/boost/python/object/class_metadata.hpp	/^struct class_metadata$/;"	s	namespace:boost::python::objects
class_metatype	/usr/include/boost/python/object/class_detail.hpp	/^BOOST_PYTHON_DECL type_handle class_metatype();$/;"	p	namespace:boost::python::objects	signature:()
class_type	/usr/include/boost/python/object/class_detail.hpp	/^BOOST_PYTHON_DECL type_handle class_type();$/;"	p	namespace:boost::python::objects	signature:()
class_value_wrapper	/usr/include/boost/python/object/class_wrapper.hpp	/^struct class_value_wrapper$/;"	s	namespace:boost::python::objects	inherits:to_python_converter
clear	/usr/include/boost/python/dict.hpp	/^      void clear();$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:()
compare_index	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        compare_index(Container& container, index_type a, index_type b)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type a, index_type b)
compare_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        compare_index(Container& \/*container*\/, index_type a, index_type b)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& , index_type a, index_type b)
compare_proxy_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct compare_proxy_index$/;"	s	namespace:boost::python::detail
const_	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<true,false> const_;$/;"	t	namespace:boost::python::detail
const_	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	e	enum:boost::python::detail::decorated_type_info::decoration
const_attribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct const_attribute_policies$/;"	s	namespace:boost::python::api
const_item_policies	/usr/include/boost/python/object_items.hpp	/^struct const_item_policies$/;"	s	namespace:boost::python::api
const_iterator	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename std::vector<PyObject*>::const_iterator const_iterator;$/;"	t	class:boost::python::detail::proxy_group	access:public
const_objattribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct const_objattribute_policies$/;"	s	namespace:boost::python::api
const_object_attribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_attribute_policies> const_object_attribute;$/;"	t	namespace:boost::python::api
const_object_item	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_item_policies> const_object_item;$/;"	t	namespace:boost::python::api
const_object_objattribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_objattribute_policies> const_object_objattribute;$/;"	t	namespace:boost::python::api
const_object_slice	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<const_slice_policies> const_object_slice;$/;"	t	namespace:boost::python::api
const_slice_policies	/usr/include/boost/python/object_slices.hpp	/^struct const_slice_policies$/;"	s	namespace:boost::python::api
const_volatile_	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<true,true> const_volatile_;$/;"	t	namespace:boost::python::detail
construct	/usr/include/boost/python/converter/implicit.hpp	/^    static void construct(PyObject* obj, rvalue_from_python_stage1_data* data)$/;"	f	struct:boost::python::converter::implicit	access:public	signature:(PyObject* obj, rvalue_from_python_stage1_data* data)
construct	/usr/include/boost/python/converter/registrations.hpp	/^    constructor_function construct;$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
construct	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    constructor_function construct;$/;"	m	struct:boost::python::converter::rvalue_from_python_stage1_data	access:public
construct	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^    static void construct(PyObject* source, rvalue_from_python_stage1_data* data)$/;"	f	struct:boost::python::converter::shared_ptr_from_python	access:private	signature:(PyObject* source, rvalue_from_python_stage1_data* data)
construct	/usr/include/boost/python/enum.hpp	/^    static void construct(PyObject* obj, converter::rvalue_from_python_stage1_data* data);$/;"	p	struct:boost::python::enum_	access:private	signature:(PyObject* obj, converter::rvalue_from_python_stage1_data* data)
construct	/usr/include/boost/python/enum.hpp	/^void enum_<T>::construct(PyObject* obj, converter::rvalue_from_python_stage1_data* data)$/;"	f	class:boost::python::enum_	signature:(PyObject* obj, converter::rvalue_from_python_stage1_data* data)
construct	/usr/include/boost/python/object/make_instance.hpp	/^    static inline Holder* construct(void* storage, PyObject* instance, reference_wrapper<T const> x)$/;"	f	struct:boost::python::objects::make_instance	access:public	signature:(void* storage, PyObject* instance, reference_wrapper<T const> x)
construct	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline Holder* construct(void* storage, PyObject*, Arg& x)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:public	signature:(void* storage, PyObject*, Arg& x)
construct_pointee	/usr/include/boost/python/detail/construct.hpp	/^void construct_pointee(void* storage, Arg& x$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg& x , T const volatile* )
construct_referent	/usr/include/boost/python/detail/construct.hpp	/^void construct_referent(void* storage, Arg const& x, T(*tag)() = 0)$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg const& x, T(*tag)() = 0)
construct_referent	/usr/include/boost/python/detail/construct.hpp	/^void construct_referent(void* storage, Arg& x, T(*tag)() = 0)$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg& x, T(*tag)() = 0)
construct_referent_impl	/usr/include/boost/python/detail/construct.hpp	/^void construct_referent_impl(void* storage, Arg& x, T&(*)())$/;"	f	namespace:boost::python::detail	signature:(void* storage, Arg& x, T&(*)())
constructor_function	/usr/include/boost/python/converter/constructor_function.hpp	/^typedef void (*constructor_function)(PyObject* source, rvalue_from_python_stage1_data*);$/;"	t	namespace:boost::python::converter
constructor_policy	/usr/include/boost/python/make_constructor.hpp	/^      constructor_policy(BasePolicy_ base) : BasePolicy_(base) {}$/;"	f	struct:boost::python::detail::constructor_policy	access:public	signature:(BasePolicy_ base)
constructor_policy	/usr/include/boost/python/make_constructor.hpp	/^  struct constructor_policy : BasePolicy_$/;"	s	namespace:boost::python::detail	inherits:BasePolicy_
constructor_result_converter	/usr/include/boost/python/make_constructor.hpp	/^  struct constructor_result_converter$/;"	s	namespace:boost::python::detail
container	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        object container;$/;"	m	class:boost::python::detail::container_element	access:private
container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        container_element(container_element const& ce)$/;"	f	class:boost::python::detail::container_element	access:public	signature:(container_element const& ce)
container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        container_element(object container, Index index)$/;"	f	class:boost::python::detail::container_element	access:public	signature:(object container, Index index)
container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    class container_element$/;"	c	namespace:boost::python::detail
container_element_t	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^            container_element_t;$/;"	t	class:boost::python::indexing_suite	access:private
container_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef Container container_type;$/;"	t	class:boost::python::detail::container_element	access:public
container_utils	/usr/include/boost/python/suite/indexing/container_utils.hpp	/^namespace boost { namespace python { namespace container_utils {$/;"	n	namespace:boost::python
contains	/usr/include/boost/python/object_core.hpp	/^      object contains(T const& key) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& key) const
contains	/usr/include/boost/python/object_core.hpp	/^object api::object_operators<U>::contains(T const& key) const$/;"	f	class:boost::python::api::object_operators	signature:(T const& key) const
contains	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        contains(Container& container, key_type const& key)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, key_type const& key)
contains	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        contains(Container& container, key_type const& key)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, key_type const& key)
context_result_converter	/usr/include/boost/python/converter/context_result_converter.hpp	/^struct context_result_converter {};$/;"	s	namespace:boost::python::converter
convert	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static PyObject* convert(void const* x)$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:(void const* x)
convert	/usr/include/boost/python/converter/registrations.hpp	/^    convertible_function convert;$/;"	m	struct:boost::python::converter::lvalue_from_python_chain	access:public
convert	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyObject* convert(Src const& x)$/;"	f	struct:boost::python::objects::class_cref_wrapper	access:public	signature:(Src const& x)
convert	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyObject* convert(Src x)$/;"	f	struct:boost::python::objects::class_value_wrapper	access:public	signature:(Src x)
convert_function_must_take_value_or_const_reference	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static void convert_function_must_take_value_or_const_reference(U(*)(T const&), long ...) {}$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:(U()T const&), long ...)
convert_function_must_take_value_or_const_reference	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static void convert_function_must_take_value_or_const_reference(U(*)(T), int, T* = 0) {}$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:(U()T), int, T* = 0)
convert_index	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        convert_index(Container& \/*container*\/, PyObject* i_)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& , PyObject* i_)
convert_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        convert_index(Container& container, PyObject* i_)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, PyObject* i_)
convert_result	/usr/include/boost/python/operators.hpp	/^  PyObject* convert_result(T const& x)$/;"	f	namespace:boost::python::detail	signature:(T const& x)
converter	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/arg_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/as_to_python_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/builtin_converters.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/constructor_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/context_result_converter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/convertible_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/implicit.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/pointer_type_id.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/pyobject_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/pyobject_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/pytype_function.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/registered.hpp	/^namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/registered_pointee.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/registrations.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/registry.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/return_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/converter/to_python_function_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost::python
converter	/usr/include/boost/python/detail/python_type.hpp	/^    static void *converter (PyObject *p){$/;"	f	struct:boost::python::detail::python_class	access:public	signature:(PyObject *p)
converter	/usr/include/boost/python/dict.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/extract.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/list.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/long.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/numeric.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/object_core.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/scope.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/slice.hpp	/^namespace converter {$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/str.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter	/usr/include/boost/python/tuple.hpp	/^namespace converter$/;"	n	namespace:boost::python
converter_target_type	/usr/include/boost/python/detail/caller.hpp	/^struct converter_target_type $/;"	s	namespace:boost::python::detail
converter_target_type	/usr/include/boost/python/detail/caller.hpp	/^struct converter_target_type <void_result_to_python >$/;"	s	namespace:boost::python::detail
converters	/usr/include/boost/python/converter/registered.hpp	/^      static registration const& converters;$/;"	m	struct:boost::python::converter::detail::registered_base	access:public
converters	/usr/include/boost/python/converter/registered.hpp	/^  registration const& registered_base<T>::converters = detail::registry_lookup1(type<T>());$/;"	m	class:boost::python::converter::detail::registered_base
converters	/usr/include/boost/python/converter/registered_pointee.hpp	/^      static registration const& converters;$/;"	m	struct:boost::python::converter::detail::registered_pointee_base	access:public
converters	/usr/include/boost/python/converter/registered_pointee.hpp	/^  registration const& registered_pointee_base<T>::converters$/;"	m	class:boost::python::converter::detail::registered_pointee_base
convertible	/usr/include/boost/python/arg_from_python.hpp	/^    bool convertible() const { return true; }$/;"	f	struct:boost::python::arg_from_python	access:public	signature:() const
convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::arg_lvalue_from_python_base	access:public	signature:() const
convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::arg_rvalue_from_python	access:public	signature:() const
convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::pointer_cref_arg_from_python	access:public	signature:() const
convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline bool arg_lvalue_from_python_base::convertible() const$/;"	f	class:boost::python::converter::arg_lvalue_from_python_base	signature:() const
convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline bool arg_rvalue_from_python<T>::convertible() const$/;"	f	class:boost::python::converter::arg_rvalue_from_python	signature:() const
convertible	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline bool pointer_cref_arg_from_python<T>::convertible() const$/;"	f	class:boost::python::converter::pointer_cref_arg_from_python	signature:() const
convertible	/usr/include/boost/python/converter/implicit.hpp	/^    static void* convertible(PyObject* obj)$/;"	f	struct:boost::python::converter::implicit	access:public	signature:(PyObject* obj)
convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:() const
convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    bool convertible() const;$/;"	p	struct:boost::python::converter::object_manager_value_arg_from_python	access:public	signature:() const
convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline bool object_manager_ref_arg_from_python<Ref>::convertible() const$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:() const
convertible	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline bool object_manager_value_arg_from_python<T>::convertible() const$/;"	f	class:boost::python::converter::object_manager_value_arg_from_python	signature:() const
convertible	/usr/include/boost/python/converter/registrations.hpp	/^    convertible_function convertible;$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
convertible	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    void* convertible;$/;"	m	struct:boost::python::converter::rvalue_from_python_stage1_data	access:public
convertible	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^    static void* convertible(PyObject* p)$/;"	f	struct:boost::python::converter::shared_ptr_from_python	access:private	signature:(PyObject* p)
convertible	/usr/include/boost/python/detail/convertible.hpp	/^struct convertible$/;"	s	namespace:boost::python::detail
convertible	/usr/include/boost/python/return_arg.hpp	/^              static bool convertible()$/;"	f	struct:boost::python::detail::return_none::apply::type	access:public	signature:()
convertible_from_python	/usr/include/boost/python/enum.hpp	/^    static void* convertible_from_python(PyObject* obj);$/;"	p	struct:boost::python::enum_	access:private	signature:(PyObject* obj)
convertible_from_python	/usr/include/boost/python/enum.hpp	/^void* enum_<T>::convertible_from_python(PyObject* obj)$/;"	f	class:boost::python::enum_	signature:(PyObject* obj)
convertible_function	/usr/include/boost/python/converter/convertible_function.hpp	/^typedef void* (*convertible_function)(PyObject*);$/;"	t	namespace:boost::python::converter
copy	/usr/include/boost/python/dict.hpp	/^      dict copy();$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:()
copy	/usr/include/boost/python/numeric.hpp	/^      object copy() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
copy_class_object	/usr/include/boost/python/object/class_metadata.hpp	/^void copy_class_object(type_info const& src, type_info const& dst);$/;"	p	namespace:boost::python::objects	signature:(type_info const& src, type_info const& dst)
copy_const_reference	/usr/include/boost/python/copy_const_reference.hpp	/^struct copy_const_reference$/;"	s	namespace:boost::python
copy_const_reference_expects_a_const_reference_return_type	/usr/include/boost/python/copy_const_reference.hpp	/^  struct copy_const_reference_expects_a_const_reference_return_type$/;"	s	namespace:boost::python::detail
copy_ctor_mutates_rhs	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	/^struct copy_ctor_mutates_rhs$/;"	s	namespace:boost::python::detail	inherits:is_auto_ptr
copy_non_const_reference	/usr/include/boost/python/copy_non_const_reference.hpp	/^struct copy_non_const_reference$/;"	s	namespace:boost::python
copy_non_const_reference_expects_a_non_const_reference_return_type	/usr/include/boost/python/copy_non_const_reference.hpp	/^  struct copy_non_const_reference_expects_a_non_const_reference_return_type$/;"	s	namespace:boost::python::detail
count	/usr/include/boost/python/list.hpp	/^      ssize_t count(object_cref value) const; \/\/ return number of occurrences of value$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref value) const
count	/usr/include/boost/python/list.hpp	/^    long count(T const& value) const$/;"	f	class:boost::python::list	access:public	signature:(T const& value) const
count	/usr/include/boost/python/str.hpp	/^      long count(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
count	/usr/include/boost/python/str.hpp	/^      long count(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
count	/usr/include/boost/python/str.hpp	/^      long count(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
count	/usr/include/boost/python/str.hpp	/^    long count(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
count	/usr/include/boost/python/str.hpp	/^    long count(T1 const& sub,T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub,T2 const& start) const
count	/usr/include/boost/python/str.hpp	/^    long count(T1 const& sub,T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub,T2 const& start, T3 const& end) const
create_result_converter	/usr/include/boost/python/detail/caller.hpp	/^inline ResultConverter create_result_converter($/;"	f	namespace:boost::python::detail	signature:( ArgPackage const& , ResultConverter* , ... )
create_result_converter	/usr/include/boost/python/detail/caller.hpp	/^inline ResultConverter create_result_converter($/;"	f	namespace:boost::python::detail	signature:( ArgPackage const& args_ , ResultConverter* , converter::context_result_converter* )
cref_unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct cref_unforwarder$/;"	s	namespace:boost::python::objects::detail
cref_unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct cref_unforwarder<true>$/;"	s	namespace:boost::python::objects::detail
current	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    boost::python::handle<> const &current() const;$/;"	p	class:boost::python::objects::stl_input_iterator_impl::boost::python	access:public	signature:() const
cv_category	/usr/include/boost/python/detail/cv_category.hpp	/^struct cv_category$/;"	s	namespace:boost::python::detail
cv_tag	/usr/include/boost/python/detail/cv_category.hpp	/^struct cv_tag$/;"	s	namespace:boost::python::detail
cv_unqualified	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<false,false> cv_unqualified;$/;"	t	namespace:boost::python::detail
cxxabi_cxa_demangle_is_broken	/usr/include/boost/python/type_id.hpp	/^bool cxxabi_cxa_demangle_is_broken();$/;"	p	namespace:boost::python	signature:()
data_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::value_type::second_type data_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
data_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::value_type data_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
datum	/usr/include/boost/python/data_members.hpp	/^      datum(Data *which) : m_which(which) {}$/;"	f	struct:boost::python::detail::datum	access:public	signature:(Data *which)
datum	/usr/include/boost/python/data_members.hpp	/^  struct datum$/;"	s	namespace:boost::python::detail
dealloc	/usr/include/boost/python/detail/dealloc.hpp	/^        inline void dealloc(PyObject* self)$/;"	f	signature:(PyObject* self)
deallocate	/usr/include/boost/python/instance_holder.hpp	/^    static void deallocate(PyObject*, void* storage) throw();$/;"	p	struct:boost::python::instance_holder	access:public	signature:(PyObject*, void* storage)
decode	/usr/include/boost/python/str.hpp	/^      object decode() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
decode	/usr/include/boost/python/str.hpp	/^      object decode(object_cref encoding) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding) const
decode	/usr/include/boost/python/str.hpp	/^      object decode(object_cref encoding, object_cref errors) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding, object_cref errors) const
decode	/usr/include/boost/python/str.hpp	/^    object decode() const { return base::decode(); }$/;"	f	class:boost::python::str	access:public	signature:() const
decode	/usr/include/boost/python/str.hpp	/^    object decode(T const& encoding) const$/;"	f	class:boost::python::str	access:public	signature:(T const& encoding) const
decode	/usr/include/boost/python/str.hpp	/^    object decode(T1 const& encoding, T2 const& errors) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& encoding, T2 const& errors) const
decorated_type_id	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline decorated_type_info decorated_type_id(boost::type<T>* = 0)$/;"	f	namespace:boost::python::detail	signature:(boost::type<T>* = 0)
decorated_type_info	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    decorated_type_info(type_info, decoration = decoration());$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:(type_info, decoration = decoration())
decorated_type_info	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline decorated_type_info::decorated_type_info(type_info base_t, decoration decoration)$/;"	f	class:boost::python::detail::decorated_type_info	signature:(type_info base_t, decoration decoration)
decorated_type_info	/usr/include/boost/python/detail/decorated_type_id.hpp	/^struct decorated_type_info : totally_ordered<decorated_type_info>$/;"	s	namespace:boost::python::detail	inherits:totally_ordered
decoration	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	g	struct:boost::python::detail::decorated_type_info	access:public
decref	/usr/include/boost/python/refcount.hpp	/^inline void decref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
decref_guard	/usr/include/boost/python/detail/decref_guard.hpp	/^    decref_guard(PyObject* o) : obj(o) {}$/;"	f	struct:boost::python::detail::decref_guard	access:public	signature:(PyObject* o)
decref_guard	/usr/include/boost/python/detail/decref_guard.hpp	/^struct decref_guard$/;"	s	namespace:boost::python::detail
def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, A1 a1, A2 const& a2)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, A1 a1, A2 const& a2)
def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, F f)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, F f)
def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, Fn fn, A1 const& a1, A2 const& a2)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Fn fn, A1 const& a1, A2 const& a2)
def	/usr/include/boost/python/class.hpp	/^    self& def(char const* name, Fn fn, A1 const& a1, A2 const& a2, A3 const& a3)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, Fn fn, A1 const& a1, A2 const& a2, A3 const& a3)
def	/usr/include/boost/python/class.hpp	/^    self& def(def_visitor<Derived> const& visitor)$/;"	f	class:boost::python::class_	access:public	signature:(def_visitor<Derived> const& visitor)
def	/usr/include/boost/python/def.hpp	/^void def(char const* name, Arg1T arg1, Arg2T const& arg2)$/;"	f	namespace:boost::python	signature:(char const* name, Arg1T arg1, Arg2T const& arg2)
def	/usr/include/boost/python/def.hpp	/^void def(char const* name, F f, A1 const& a1, A2 const& a2)$/;"	f	namespace:boost::python	signature:(char const* name, F f, A1 const& a1, A2 const& a2)
def	/usr/include/boost/python/def.hpp	/^void def(char const* name, F f, A1 const& a1, A2 const& a2, A3 const& a3)$/;"	f	namespace:boost::python	signature:(char const* name, F f, A1 const& a1, A2 const& a2, A3 const& a3)
def	/usr/include/boost/python/def.hpp	/^void def(char const* name, Fn fn)$/;"	f	namespace:boost::python	signature:(char const* name, Fn fn)
def	/usr/include/boost/python/detail/defaults_def.hpp	/^      def($/;"	f	struct:boost::python::detail::define_with_defaults_helper	access:public	signature:( char const* name, StubsT stubs, keyword_range const& kw, CallPolicies const& policies, NameSpaceT& name_space, char const* doc)
def	/usr/include/boost/python/detail/defaults_def.hpp	/^      def($/;"	f	struct:boost::python::detail::define_with_defaults_helper	access:public	signature:( char const* name, StubsT stubs, keyword_range kw, CallPolicies const& policies, NameSpaceT& name_space, char const* doc)
def_default	/usr/include/boost/python/class.hpp	/^    inline void def_default($/;"	f	class:boost::python::class_	access:private	signature:( char const* name , Fn , Helper const& helper , mpl::bool_<true>)
def_default	/usr/include/boost/python/class.hpp	/^    inline void def_default(char const*, Fn, Helper const&, mpl::bool_<false>)$/;"	f	class:boost::python::class_	access:private	signature:(char const*, Fn, Helper const&, mpl::bool_<false>)
def_from_helper	/usr/include/boost/python/def.hpp	/^  void def_from_helper($/;"	f	namespace:boost::python::detail	signature:( char const* name, F const& fn, Helper const& helper)
def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1) : m_all(a1,m_nil,m_nil,m_nil) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1)
def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1, T2 const& a2) : m_all(a1,a2,m_nil,m_nil) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1, T2 const& a2)
def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1, T2 const& a2, T3 const& a3) : m_all(a1,a2,a3,m_nil) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1, T2 const& a2, T3 const& a3)
def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^      def_helper(T1 const& a1, T2 const& a2, T3 const& a3, T4 const& a4) : m_all(a1,a2,a3,a4) {}$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:(T1 const& a1, T2 const& a2, T3 const& a3, T4 const& a4)
def_helper	/usr/include/boost/python/detail/def_helper.hpp	/^  struct def_helper$/;"	s	namespace:boost::python::detail
def_impl	/usr/include/boost/python/class.hpp	/^    inline void def_impl($/;"	f	class:boost::python::class_	access:private	signature:( T* , char const* name , Fn fn , Helper const& helper , ... )
def_impl	/usr/include/boost/python/class.hpp	/^    inline void def_impl($/;"	f	class:boost::python::class_	access:private	signature:( T* , char const* name , LeafVisitor , Helper const& helper , def_visitor<Visitor> const* v )
def_init_aux	/usr/include/boost/python/init.hpp	/^  inline void def_init_aux($/;"	f	namespace:boost::python::detail	signature:( ClassT& cl , Signature const& , NArgs , CallPoliciesT const& policies , char const* doc , detail::keyword_range const& keywords_ )
def_iterator	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        def_iterator;$/;"	t	class:boost::python::indexing_suite	access:private
def_maybe_overloads	/usr/include/boost/python/class.hpp	/^    void def_maybe_overloads($/;"	f	class:boost::python::class_	access:private	signature:( char const* name , Fn fn , A1 const& a1 , ...)
def_maybe_overloads	/usr/include/boost/python/class.hpp	/^    void def_maybe_overloads($/;"	f	class:boost::python::class_	access:private	signature:( char const* name , SigT sig , OverloadsT const& overloads , detail::overloads_base const*)
def_maybe_overloads	/usr/include/boost/python/def.hpp	/^  def_maybe_overloads($/;"	f	namespace:boost::python::detail	signature:( char const* name , Fn fn , A1 const& a1 , ...)
def_maybe_overloads	/usr/include/boost/python/def.hpp	/^  void def_maybe_overloads($/;"	f	namespace:boost::python::detail	signature:( char const* name , SigT sig , StubsT const& stubs , detail::overloads_base const*)
def_no_init	/usr/include/boost/python/object/class.hpp	/^    void def_no_init();$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:()
def_pickle	/usr/include/boost/python/class.hpp	/^    self& def_pickle(PickleSuiteType const& x)$/;"	f	class:boost::python::class_	access:public	signature:(PickleSuiteType const& x)
def_readonly	/usr/include/boost/python/class.hpp	/^    self& def_readonly(char const* name, D const& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D const& d, char const* doc=0)
def_readonly	/usr/include/boost/python/class.hpp	/^    self& def_readonly(char const* name, D& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D& d, char const* doc=0)
def_readonly_impl	/usr/include/boost/python/class.hpp	/^    self& def_readonly_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D B::*pm_, char const* doc BOOST_PYTHON_YES_DATA_MEMBER)
def_readonly_impl	/usr/include/boost/python/class.hpp	/^    self& def_readonly_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D& d, char const* BOOST_PYTHON_NO_DATA_MEMBER)
def_readwrite	/usr/include/boost/python/class.hpp	/^    self& def_readwrite(char const* name, D const& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D const& d, char const* doc=0)
def_readwrite	/usr/include/boost/python/class.hpp	/^    self& def_readwrite(char const* name, D& d, char const* doc=0)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, D& d, char const* doc=0)
def_readwrite_impl	/usr/include/boost/python/class.hpp	/^    self& def_readwrite_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D B::*pm_, char const* doc BOOST_PYTHON_YES_DATA_MEMBER)
def_readwrite_impl	/usr/include/boost/python/class.hpp	/^    self& def_readwrite_impl($/;"	f	class:boost::python::class_	access:private	signature:( char const* name, D& d, char const* BOOST_PYTHON_NO_DATA_MEMBER)
def_visitor	/usr/include/boost/python/def_visitor.hpp	/^class def_visitor$/;"	c	namespace:boost::python
def_visitor_access	/usr/include/boost/python/def_visitor.hpp	/^class def_visitor_access$/;"	c	namespace:boost::python
default_call_policies	/usr/include/boost/python/default_call_policies.hpp	/^struct default_call_policies$/;"	s	namespace:boost::python
default_datum_getter_policy	/usr/include/boost/python/data_members.hpp	/^  struct default_datum_getter_policy$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
default_getter_by_ref	/usr/include/boost/python/data_members.hpp	/^  struct default_getter_by_ref$/;"	s	namespace:boost::python::detail	inherits:mpl::and_
default_implementation	/usr/include/boost/python/detail/def_helper.hpp	/^      default_implementation_t default_implementation() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
default_implementation_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct default_implementation_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
default_implementation_t	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename default_implementation_extract<all_t>::result_type default_implementation_t;$/;"	t	struct:boost::python::detail::def_helper	access:private
default_iterator_call_policies	/usr/include/boost/python/object/iterator.hpp	/^typedef return_value_policy<return_by_value> default_iterator_call_policies;$/;"	t	namespace:boost::python::objects
default_member_getter_policy	/usr/include/boost/python/data_members.hpp	/^  struct default_member_getter_policy$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
default_object_manager_traits	/usr/include/boost/python/converter/object_manager.hpp	/^struct default_object_manager_traits$/;"	s	namespace:boost::python::converter
default_result_converter	/usr/include/boost/python/default_call_policies.hpp	/^struct default_result_converter$/;"	s	namespace:boost::python
default_value	/usr/include/boost/python/args_fwd.hpp	/^      handle<> default_value;$/;"	m	struct:boost::python::detail::keyword	access:public
define_class_init_helper	/usr/include/boost/python/init.hpp	/^  struct define_class_init_helper$/;"	s	namespace:boost::python::detail
define_class_init_helper	/usr/include/boost/python/init.hpp	/^  struct define_class_init_helper<0> {$/;"	s	namespace:boost::python::detail
define_stub_function	/usr/include/boost/python/detail/defaults_def.hpp	/^  struct define_stub_function {};$/;"	s	namespace:boost::python::detail
define_with_defaults	/usr/include/boost/python/detail/defaults_def.hpp	/^  define_with_defaults($/;"	f	namespace:boost::python::detail	signature:( char const* name, OverloadsT const& overloads, NameSpaceT& name_space, SigT const&)
define_with_defaults	/usr/include/boost/python/detail/overloads_fwd.hpp	/^inline void define_with_defaults(char const* name, OverloadsT const&, NameSpaceT&, SigT const&);$/;"	p	namespace:boost::python::detail	signature:(char const* name, OverloadsT const&, NameSpaceT&, SigT const&)
define_with_defaults_helper	/usr/include/boost/python/detail/defaults_def.hpp	/^  struct define_with_defaults_helper {$/;"	s	namespace:boost::python::detail
define_with_defaults_helper	/usr/include/boost/python/detail/defaults_def.hpp	/^  struct define_with_defaults_helper<0> {$/;"	s	namespace:boost::python::detail
del	/usr/include/boost/python/object_attributes.hpp	/^    static void del(object const&target, char const* key);$/;"	p	struct:boost::python::api::attribute_policies	access:public	signature:(object const&target, char const* key)
del	/usr/include/boost/python/object_attributes.hpp	/^    static void del(object const&target, object const& key);$/;"	p	struct:boost::python::api::objattribute_policies	access:public	signature:(object const&target, object const& key)
del	/usr/include/boost/python/object_attributes.hpp	/^inline void attribute_policies::del($/;"	f	class:boost::python::api::attribute_policies	signature:( object const& target , char const* key)
del	/usr/include/boost/python/object_attributes.hpp	/^inline void objattribute_policies::del($/;"	f	class:boost::python::api::objattribute_policies	signature:( object const& target , object const& key)
del	/usr/include/boost/python/object_items.hpp	/^    static void del(object const& target, object const& key);$/;"	p	struct:boost::python::api::item_policies	access:public	signature:(object const& target, object const& key)
del	/usr/include/boost/python/object_items.hpp	/^inline void item_policies::del($/;"	f	class:boost::python::api::item_policies	signature:( object const& target , object const& key)
del	/usr/include/boost/python/object_slices.hpp	/^    static void del(object const& target, key_type const& key);$/;"	p	struct:boost::python::api::slice_policies	access:public	signature:(object const& target, key_type const& key)
del	/usr/include/boost/python/object_slices.hpp	/^inline void slice_policies::del($/;"	f	class:boost::python::api::slice_policies	signature:( object const& target , key_type const& key)
del	/usr/include/boost/python/proxy.hpp	/^    void del() const;$/;"	p	class:boost::python::api::proxy	access:public	signature:() const
del	/usr/include/boost/python/proxy.hpp	/^inline void del(proxy<T> const& x)$/;"	f	namespace:boost::python::api	signature:(proxy<T> const& x)
del	/usr/include/boost/python/proxy.hpp	/^inline void proxy<Policies>::del() const$/;"	f	class:boost::python::api::proxy	signature:() const
delattr	/usr/include/boost/python/object_protocol.hpp	/^void delattr(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
delattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delattr(object const& target, char const* key);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key)
delattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delattr(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
delete_item	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        delete_item(Container& container, index_type i)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type i)
delete_item	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        delete_item(Container& container, index_type i)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type i)
delete_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        delete_slice(Container& container, index_type from, index_type to)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to)
delitem	/usr/include/boost/python/object_protocol.hpp	/^void delitem(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
delitem	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delitem(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
delslice	/usr/include/boost/python/object_protocol.hpp	/^void delslice(object const& target, Begin const& begin, End const& end)$/;"	f	namespace:boost::python::api	signature:(object const& target, Begin const& begin, End const& end)
delslice	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void delslice(object const& target, handle<> const& begin, handle<> const& end);$/;"	p	namespace:boost::python::api	signature:(object const& target, handle<> const& begin, handle<> const& end)
demand_iterator_class	/usr/include/boost/python/object/iterator.hpp	/^  object demand_iterator_class(char const* name, Iterator* = 0, NextPolicies const& policies = NextPolicies())$/;"	f	namespace:boost::python::objects::detail	signature:(char const* name, Iterator* = 0, NextPolicies const& policies = NextPolicies())
dependent	/usr/include/boost/python/detail/dependent.hpp	/^struct dependent$/;"	s	namespace:boost::python::detail
deref	/usr/include/boost/python/args.hpp	/^      typedef typename remove_reference<T>::type deref;$/;"	t	struct:boost::python::detail::is_reference_to_keywords	access:public
dereference	/usr/include/boost/python/stl_iterator.hpp	/^    ValueT dereference() const$/;"	f	struct:boost::python::stl_input_iterator	access:private	signature:() const
derived	/usr/include/boost/python/init.hpp	/^    DerivedT const& derived() const$/;"	f	struct:boost::python::init_base	access:public	signature:() const
derived_visitor	/usr/include/boost/python/def_visitor.hpp	/^    DerivedVisitor const& derived_visitor() const$/;"	f	class:boost::python::def_visitor	access:protected	signature:() const
destroy_referent	/usr/include/boost/python/detail/destroy.hpp	/^inline void destroy_referent(void* p, T(*)() = 0)$/;"	f	namespace:boost::python::detail	signature:(void* p, T(*)() = 0)
destroy_referent_impl	/usr/include/boost/python/detail/destroy.hpp	/^inline void destroy_referent_impl(void* p, T& (*)())$/;"	f	namespace:boost::python::detail	signature:(void* p, T& (*)())
detach	/usr/include/boost/python/detail/wrapper_base.hpp	/^      void detach();$/;"	p	class:boost::python::detail::wrapper_base	access:private	signature:()
detach	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        detach()$/;"	f	class:boost::python::detail::container_element	access:public	signature:()
detail	/usr/include/boost/python/args.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/args_fwd.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/back_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/base_type_traits.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/bases.hpp	/^  namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/cast.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/class.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/arg_to_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/builtin_converters.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/object_manager.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/pointer_type_id.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/pytype_function.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/registered.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/registered_pointee.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/converter/return_from_python.hpp	/^namespace detail$/;"	n	namespace:boost::python::converter
detail	/usr/include/boost/python/copy_const_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/copy_non_const_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/data_members.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/def.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/default_call_policies.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/aix_init_module.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/caller.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/construct.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/convertible.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/cv_category.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/dealloc.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/decorated_type_id.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/decref_guard.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/def_helper.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/def_helper_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/defaults_def.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/defaults_gen.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/dependent.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/destroy.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/enable_if.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/exception_handler.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/force_instantiate.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/if_else.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/invoke.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/is_auto_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/is_wrapper.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/map_entry.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/none.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/not_specified.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/operator_id.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/overloads_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/pointee.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/python_type.hpp	/^namespace boost {namespace python {namespace detail{$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/raw_pyobject.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/referent_storage.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/result.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/scope.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/signature.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/string_literal.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/target.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/translate_exception.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/type_list_impl.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/unwind_type.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/value_arg.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/value_is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/void_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/void_return.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/detail/wrapper_base.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/dict.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/errors.hpp	/^namespace detail { inline void rethrow() { throw; } }$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/handle.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/init.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/iterator.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/list.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/long.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/lvalue_from_pytype.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/make_constructor.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/make_function.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/manage_new_object.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/module_init.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/object/forward.hpp	/^namespace detail$/;"	n	namespace:boost::python::objects
detail	/usr/include/boost/python/object/iterator.hpp	/^namespace detail$/;"	n	namespace:boost::python::objects
detail	/usr/include/boost/python/object/pickle_support.hpp	/^namespace detail { struct pickle_suite_registration; }$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/object/pickle_support.hpp	/^namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/object_core.hpp	/^namespace detail $/;"	n	namespace:boost::python
detail	/usr/include/boost/python/object_core.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/operators.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/other.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/override.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/pointee.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/ptr.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/pure_virtual.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/raw_function.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/reference_existing_object.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/return_arg.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/return_internal_reference.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/return_opaque_pointer.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/scope.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/signature.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/slice.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/str.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^    namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^    namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/to_python_indirect.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/to_python_value.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/tuple.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/type_id.hpp	/^namespace detail$/;"	n	namespace:boost::python
detail	/usr/include/boost/python/with_custodian_and_ward.hpp	/^namespace detail$/;"	n	namespace:boost::python
diagonal	/usr/include/boost/python/numeric.hpp	/^      object diagonal(long offset = 0, long axis1 = 0, long axis2 = 1) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long offset = 0, long axis1 = 0, long axis2 = 1) const
dict	/usr/include/boost/python/dict.hpp	/^    dict() {}   \/\/ new dict$/;"	f	class:boost::python::dict	access:public	signature:()
dict	/usr/include/boost/python/dict.hpp	/^    explicit dict(T const& data)$/;"	f	class:boost::python::dict	access:public	signature:(T const& data)
dict	/usr/include/boost/python/dict.hpp	/^class dict : public detail::dict_base$/;"	c	namespace:boost::python	inherits:detail::dict_base
dict	/usr/include/boost/python/object/instance.hpp	/^    PyObject* dict;$/;"	m	struct:boost::python::objects::instance	access:public
dict_base	/usr/include/boost/python/dict.hpp	/^      dict_base();   \/\/ new dict$/;"	p	struct:boost::python::detail::dict_base	access:protected	signature:()
dict_base	/usr/include/boost/python/dict.hpp	/^      explicit dict_base(object_cref data);$/;"	p	struct:boost::python::detail::dict_base	access:protected	signature:(object_cref data)
dict_base	/usr/include/boost/python/dict.hpp	/^  struct BOOST_PYTHON_DECL dict_base : object$/;"	s	namespace:boost::python::detail	inherits:object
difference_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::difference_type difference_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
difference_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::difference_type difference_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
direct_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
disable_all	/usr/include/boost/python/docstring_options.hpp	/^      disable_all()$/;"	f	class:boost::python::docstring_options	access:public	signature:()
disable_cpp_signatures	/usr/include/boost/python/docstring_options.hpp	/^      disable_cpp_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
disable_if_arg	/usr/include/boost/python/detail/enable_if.hpp	/^struct disable_if_arg$/;"	s	namespace:boost::python::detail
disable_if_ret	/usr/include/boost/python/detail/enable_if.hpp	/^struct disable_if_ret$/;"	s	namespace:boost::python::detail
disable_py_signatures	/usr/include/boost/python/docstring_options.hpp	/^      disable_py_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
disable_signatures	/usr/include/boost/python/docstring_options.hpp	/^      disable_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
disable_user_defined	/usr/include/boost/python/docstring_options.hpp	/^      disable_user_defined() { show_user_defined_ = false; }$/;"	f	class:boost::python::docstring_options	access:public	signature:()
dispatch	/usr/include/boost/python/make_constructor.hpp	/^      void dispatch(Ptr x, mpl::false_) const$/;"	f	struct:boost::python::detail::install_holder	access:private	signature:(Ptr x, mpl::false_) const
dispatch	/usr/include/boost/python/make_constructor.hpp	/^      void dispatch(U* x, mpl::true_) const$/;"	f	struct:boost::python::detail::install_holder	access:private	signature:(U* x, mpl::true_) const
do_arg_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_arg_to_python(PyObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*)
do_return_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_return_to_python(PyObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*)
do_return_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_return_to_python(char const*);$/;"	p	namespace:boost::python::converter	signature:(char const*)
do_return_to_python	/usr/include/boost/python/converter/builtin_converters.hpp	/^  BOOST_PYTHON_DECL PyObject* do_return_to_python(char);$/;"	p	namespace:boost::python::converter	signature:(char)
do_unforward	/usr/include/boost/python/object/forward.hpp	/^T const& do_unforward(T const& x, ...)$/;"	f	namespace:boost::python::objects	signature:(T const& x, ...)
do_unforward	/usr/include/boost/python/object/forward.hpp	/^do_unforward(reference_to_value<T> const& x, int)$/;"	f	namespace:boost::python::objects	signature:(reference_to_value<T> const& x, int)
do_unforward	/usr/include/boost/python/object/forward.hpp	/^do_unforward(reference_wrapper<T> const& x, int)$/;"	f	namespace:boost::python::objects	signature:(reference_wrapper<T> const& x, int)
do_unforward_cref	/usr/include/boost/python/object_core.hpp	/^  char const (& do_unforward_cref(char const(&x)[N]) )[N]$/;"	f	namespace:boost::python::api	signature:(char const(&x)[N])
do_unforward_cref	/usr/include/boost/python/object_core.hpp	/^  typename objects::unforward_cref<T>::type do_unforward_cref(T const& x)$/;"	f	namespace:boost::python::api	signature:(T const& x)
doc	/usr/include/boost/python/detail/def_helper.hpp	/^      char const* doc() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
doc	/usr/include/boost/python/object/function.hpp	/^    object const& doc() const;$/;"	p	struct:boost::python::objects::function	access:public	signature:() const
doc	/usr/include/boost/python/object/function.hpp	/^    void doc(object const& x);$/;"	p	struct:boost::python::objects::function	access:public	signature:(object const& x)
doc	/usr/include/boost/python/object/function.hpp	/^inline object const& function::doc() const$/;"	f	class:boost::python::objects::function	signature:() const
doc	/usr/include/boost/python/object/function.hpp	/^inline void function::doc(object const& x)$/;"	f	class:boost::python::objects::function	signature:(object const& x)
doc_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct doc_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
doc_string	/usr/include/boost/python/detail/defaults_gen.hpp	/^      char const* doc_string() const$/;"	f	struct:boost::python::detail::overloads_base	access:public	signature:() const
doc_string	/usr/include/boost/python/init.hpp	/^    char const* doc_string() const$/;"	f	struct:boost::python::init_base	access:public	signature:() const
docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      docstring_options(bool show_all=true)$/;"	f	class:boost::python::docstring_options	access:public	signature:(bool show_all=true)
docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      docstring_options(bool show_user_defined, bool show_py_signatures, bool show_cpp_signatures)$/;"	f	class:boost::python::docstring_options	access:public	signature:(bool show_user_defined, bool show_py_signatures, bool show_cpp_signatures)
docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      docstring_options(bool show_user_defined, bool show_signatures)$/;"	f	class:boost::python::docstring_options	access:public	signature:(bool show_user_defined, bool show_signatures)
docstring_options	/usr/include/boost/python/docstring_options.hpp	/^class BOOST_PYTHON_DECL docstring_options : boost::noncopyable$/;"	c	namespace:boost::python	inherits:boost::noncopyable
downcast	/usr/include/boost/python/cast.hpp	/^  inline Target* downcast(Source* p, no_convertible, boost::type<Target>* = 0)$/;"	f	namespace:boost::python::detail	signature:(Source* p, no_convertible, boost::type<Target>* = 0)
downcast	/usr/include/boost/python/cast.hpp	/^  inline Target* downcast(Source* p, yes_convertible)$/;"	f	namespace:boost::python::detail	signature:(Source* p, yes_convertible)
downcast	/usr/include/boost/python/cast.hpp	/^inline Target* downcast(Source* x, Target* = 0)$/;"	f	namespace:boost::python	signature:(Source* x, Target* = 0)
drop1	/usr/include/boost/python/init.hpp	/^  struct drop1$/;"	s	namespace:boost::python::detail	inherits:mpl::iterator_range
dynamic_cast_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct dynamic_cast_generator$/;"	s	namespace:boost::python::objects
dynamic_id_function	/usr/include/boost/python/object/inheritance.hpp	/^typedef dynamic_id_t (*dynamic_id_function)(void*);$/;"	t	namespace:boost::python::objects
dynamic_id_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct dynamic_id_generator$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
dynamic_id_t	/usr/include/boost/python/object/inheritance.hpp	/^typedef std::pair<void*,class_id> dynamic_id_t;$/;"	t	namespace:boost::python::objects
element_type	/usr/include/boost/python/handle.hpp	/^    typedef T element_type;$/;"	t	class:boost::python::handle	access:public
element_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Policies::data_type element_type;$/;"	t	class:boost::python::detail::container_element	access:public
elements	/usr/include/boost/python/args.hpp	/^      keyword elements[nkeywords];$/;"	m	struct:boost::python::detail::keywords_base	access:public
elif	/usr/include/boost/python/detail/if_else.hpp	/^    struct elif : elif_selected<T>$/;"	s	struct:boost::python::detail::if_selected	inherits:elif_selected	access:public
elif	/usr/include/boost/python/detail/if_else.hpp	/^    template <bool b> struct elif : if_<b>$/;"	s	struct:boost::python::detail::if_unselected	inherits:if_	access:public
elif_selected	/usr/include/boost/python/detail/if_else.hpp	/^struct elif_selected$/;"	s	namespace:boost::python::detail
else_	/usr/include/boost/python/detail/if_else.hpp	/^    struct else_$/;"	s	struct:boost::python::detail::if_selected	access:public
else_	/usr/include/boost/python/detail/if_else.hpp	/^    struct else_$/;"	s	struct:boost::python::detail::if_unselected	access:public
enable_all	/usr/include/boost/python/docstring_options.hpp	/^      enable_all()$/;"	f	class:boost::python::docstring_options	access:public	signature:()
enable_binary	/usr/include/boost/python/object_operators.hpp	/^struct enable_binary$/;"	s	namespace:boost::python::api	inherits:boost::iterators::enable_if
enable_cpp_signatures	/usr/include/boost/python/docstring_options.hpp	/^      enable_cpp_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
enable_if_arg	/usr/include/boost/python/detail/enable_if.hpp	/^struct enable_if_arg$/;"	s	namespace:boost::python::detail
enable_if_ret	/usr/include/boost/python/detail/enable_if.hpp	/^struct enable_if_ret$/;"	s	namespace:boost::python::detail
enable_pickling	/usr/include/boost/python/class.hpp	/^    self& enable_pickling()$/;"	f	class:boost::python::class_	access:public	signature:()
enable_pickling_	/usr/include/boost/python/object/class.hpp	/^    void enable_pickling_(bool getstate_manages_dict);$/;"	p	struct:boost::python::objects::class_base	access:public	signature:(bool getstate_manages_dict)
enable_py_signatures	/usr/include/boost/python/docstring_options.hpp	/^      enable_py_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
enable_signatures	/usr/include/boost/python/docstring_options.hpp	/^      enable_signatures() $/;"	f	class:boost::python::docstring_options	access:public	signature:()
enable_user_defined	/usr/include/boost/python/docstring_options.hpp	/^      enable_user_defined() { show_user_defined_ = true; }$/;"	f	class:boost::python::docstring_options	access:public	signature:()
encode	/usr/include/boost/python/str.hpp	/^      object encode() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
encode	/usr/include/boost/python/str.hpp	/^      object encode(object_cref encoding) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding) const
encode	/usr/include/boost/python/str.hpp	/^      object encode(object_cref encoding, object_cref errors) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref encoding, object_cref errors) const
encode	/usr/include/boost/python/str.hpp	/^    object encode() const { return base::encode(); }$/;"	f	class:boost::python::str	access:public	signature:() const
encode	/usr/include/boost/python/str.hpp	/^    object encode(T const& encoding) const$/;"	f	class:boost::python::str	access:public	signature:(T const& encoding) const
encode	/usr/include/boost/python/str.hpp	/^    object encode(T1 const& encoding, T2 const& errors) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& encoding, T2 const& errors) const
end	/usr/include/boost/python/iterator.hpp	/^          static iterator end(T& x) { return x.end(); }$/;"	f	struct:boost::python::detail::iterators_impl::apply	access:public	signature:(T& x)
endswith	/usr/include/boost/python/str.hpp	/^      bool endswith(object_cref suffix) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref suffix) const
endswith	/usr/include/boost/python/str.hpp	/^      bool endswith(object_cref suffix, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref suffix, object_cref start) const
endswith	/usr/include/boost/python/str.hpp	/^      bool endswith(object_cref suffix, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref suffix, object_cref start, object_cref end) const
endswith	/usr/include/boost/python/str.hpp	/^    bool endswith(T const& suffix) const$/;"	f	class:boost::python::str	access:public	signature:(T const& suffix) const
endswith	/usr/include/boost/python/str.hpp	/^    bool endswith(T1 const& suffix, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& suffix, T2 const& start) const
endswith	/usr/include/boost/python/str.hpp	/^    bool endswith(T1 const& suffix, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& suffix, T2 const& start, T3 const& end) const
enum_	/usr/include/boost/python/enum.hpp	/^    enum_(char const* name, char const* doc = 0);$/;"	p	struct:boost::python::enum_	access:public	signature:(char const* name, char const* doc = 0)
enum_	/usr/include/boost/python/enum.hpp	/^inline enum_<T>::enum_(char const* name, char const* doc )$/;"	f	class:boost::python::enum_	signature:(char const* name, char const* doc )
enum_	/usr/include/boost/python/enum.hpp	/^struct enum_ : public objects::enum_base$/;"	s	namespace:boost::python	inherits:objects::enum_base
enum_base	/usr/include/boost/python/object/enum_base.hpp	/^    enum_base($/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:( char const* name , converter::to_python_function_t , converter::convertible_function , converter::constructor_function , type_info , const char *doc = 0 )
enum_base	/usr/include/boost/python/object/enum_base.hpp	/^struct BOOST_PYTHON_DECL enum_base : python::api::object$/;"	s	namespace:boost::python::objects	inherits:python::api::object
equal	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    bool equal(stl_input_iterator_impl const &that) const;$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:(stl_input_iterator_impl const &that) const
equal	/usr/include/boost/python/stl_iterator.hpp	/^    bool equal(stl_input_iterator<ValueT> const &that) const$/;"	f	struct:boost::python::stl_input_iterator	access:private	signature:(stl_input_iterator<ValueT> const &that) const
erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(Container& container, index_type from, index_type to)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Container& container, index_type from, index_type to)
erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(index_type from, index_type to)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type from, index_type to)
erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(index_type i, mpl::false_)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i, mpl::false_)
erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        erase(index_type i, mpl::true_)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i, mpl::true_)
erase	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        void erase(Container& container, index_type i, NoSlice no_slice)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Container& container, index_type i, NoSlice no_slice)
error	/usr/include/boost/python/args_fwd.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
error	/usr/include/boost/python/class.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
error	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static void error(...) {}$/;"	f	struct:boost::python::converter::detail::reject_raw_object_helper	access:public	signature:(....)
error	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static void error(Convertibility)$/;"	f	struct:boost::python::converter::detail::reject_raw_object_helper	access:public	signature:(Convertibility)
error	/usr/include/boost/python/def.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
error	/usr/include/boost/python/init.hpp	/^  namespace error$/;"	n	namespace:boost::python::detail
error_already_set	/usr/include/boost/python/errors.hpp	/^struct BOOST_PYTHON_DECL_EXCEPTION error_already_set$/;"	s	namespace:boost::python
error_messages	/usr/include/boost/python/object/pickle_support.hpp	/^namespace error_messages {$/;"	n	namespace:boost::python
eval	/usr/include/boost/python/exec.hpp	/^eval(str string, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str string, object global = object(), object local = object())
exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^    explicit exception_handler(handler_function const& impl);$/;"	p	struct:boost::python::detail::exception_handler	access:public	signature:(handler_function const& impl)
exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^struct BOOST_PYTHON_DECL exception_handler$/;"	s	namespace:boost::python::detail
exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^struct BOOST_PYTHON_DECL_FORWARD exception_handler;$/;"	m	namespace:boost::python::detail	typeref:struct:boost::python::detail::BOOST_PYTHON_DECL_FORWARD
exception_non_ref	/usr/include/boost/python/detail/translate_exception.hpp	/^    >::type exception_non_ref;$/;"	t	struct:boost::python::detail::translate_exception	access:public
exec	/usr/include/boost/python/exec.hpp	/^exec(str string, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str string, object global = object(), object local = object())
exec_file	/usr/include/boost/python/exec.hpp	/^exec_file(str filename, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str filename, object global = object(), object local = object())
exec_statement	/usr/include/boost/python/exec.hpp	/^exec_statement(str string, object global = object(), object local = object());$/;"	p	namespace:boost::python	signature:(str string, object global = object(), object local = object())
execute	/usr/include/boost/python/cast.hpp	/^      static inline T* execute(T* x, T*) { return x; }$/;"	f	struct:boost::python::detail::upcaster	access:public	signature:(T* x, T*)
execute	/usr/include/boost/python/cast.hpp	/^      static inline Target* execute(Source* x, Target*)$/;"	f	struct:boost::python::detail::upcaster	access:public	signature:(Source* x, Target*)
execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T* const volatile&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T* const volatile&(*)() = 0)
execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*&(*)() = 0)
execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*(*)() = 0)
execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*const&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*const&(*)() = 0)
execute	/usr/include/boost/python/converter/pointer_type_id.hpp	/^      static inline type_info execute(T*volatile&(*)() = 0)$/;"	f	struct:boost::python::converter::detail::pointer_typeid_select	access:public	signature:(T*volatile&(*)() = 0)
execute	/usr/include/boost/python/converter/pytype_function.hpp	/^    static result_type execute(U* ){$/;"	f	struct:boost::python::converter::detail::unwind_type_id_helper	access:public	signature:(U* )
execute	/usr/include/boost/python/detail/destroy.hpp	/^    static void execute(A*, T const volatile* const first)$/;"	f	struct:boost::python::detail::value_destroyer	access:public	signature:(A*, T const volatile* const first)
execute	/usr/include/boost/python/detail/destroy.hpp	/^    static void execute(T const volatile* p)$/;"	f	struct:boost::python::detail::value_destroyer	access:public	signature:(T const volatile* p)
execute	/usr/include/boost/python/detail/destroy.hpp	/^    static void execute(T const volatile*)$/;"	f	struct:boost::python::detail::value_destroyer	access:public	signature:(T const volatile*)
execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U p, Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper	access:public	signature:(U p, Generator* = 0)
execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U& p, Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper	access:public	signature:(U& p, Generator* = 0)
execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U&(*)(), Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper2	access:public	signature:(U&(*)(), Generator* = 0)
execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U(*)(), Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper2	access:public	signature:(U()), Generator* = 0)
execute	/usr/include/boost/python/detail/unwind_type.hpp	/^    execute(U*(*)(), Generator* = 0)$/;"	f	struct:boost::python::detail::unwind_helper2	access:public	signature:(U*(*)(), Generator* = 0)
execute	/usr/include/boost/python/lvalue_from_pytype.hpp	/^      static inline void* execute(PyObject* op)$/;"	f	struct:boost::python::detail::normalized_extractor	access:public	signature:(PyObject* op)
execute	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static InstanceType& execute(InstanceType& c)$/;"	f	struct:boost::python::extract_identity	access:public	signature:(InstanceType& c)
execute	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static MemberType& execute(InstanceType& c)$/;"	f	struct:boost::python::extract_member	access:public	signature:(InstanceType& c)
execute	/usr/include/boost/python/object/inheritance.hpp	/^    static dynamic_id_t execute(void* p_)$/;"	f	struct:boost::python::objects::non_polymorphic_id_generator	access:public	signature:(void* p_)
execute	/usr/include/boost/python/object/inheritance.hpp	/^    static dynamic_id_t execute(void* p_)$/;"	f	struct:boost::python::objects::polymorphic_id_generator	access:public	signature:(void* p_)
execute	/usr/include/boost/python/object/inheritance.hpp	/^    static void* execute(void* source)$/;"	f	struct:boost::python::objects::dynamic_cast_generator	access:public	signature:(void* source)
execute	/usr/include/boost/python/object/inheritance.hpp	/^    static void* execute(void* source)$/;"	f	struct:boost::python::objects::implicit_cast_generator	access:public	signature:(void* source)
execute	/usr/include/boost/python/object/make_instance.hpp	/^    static inline PyObject* execute(Arg& x)$/;"	f	struct:boost::python::objects::make_instance_impl	access:public	signature:(Arg& x)
execute	/usr/include/boost/python/to_python_indirect.hpp	/^      static PyObject* execute(T* p)$/;"	f	struct:boost::python::detail::make_owning_holder	access:public	signature:(T* p)
execute	/usr/include/boost/python/to_python_indirect.hpp	/^      static PyObject* execute(T* p)$/;"	f	struct:boost::python::detail::make_reference_holder	access:public	signature:(T* p)
execute	/usr/include/boost/python/to_python_indirect.hpp	/^    inline PyObject* execute(U const& x, mpl::false_) const$/;"	f	struct:boost::python::to_python_indirect	access:private	signature:(U const& x, mpl::false_) const
execute	/usr/include/boost/python/to_python_indirect.hpp	/^    inline PyObject* execute(U* ptr, mpl::true_) const$/;"	f	struct:boost::python::to_python_indirect	access:private	signature:(U* ptr, mpl::true_) const
execute	/usr/include/boost/python/with_custodian_and_ward.hpp	/^      static PyObject* execute(ArgumentPackage const& args, PyObject* = 0)$/;"	f	struct:boost::python::detail::get_prev	access:public	signature:(ArgumentPackage const& args, PyObject* = 0)
execute	/usr/include/boost/python/with_custodian_and_ward.hpp	/^      static PyObject* execute(ArgumentPackage const&, PyObject* zeroth)$/;"	f	struct:boost::python::detail::get_prev	access:public	signature:(ArgumentPackage const&, PyObject* zeroth)
expandtabs	/usr/include/boost/python/str.hpp	/^      str expandtabs() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
expandtabs	/usr/include/boost/python/str.hpp	/^      str expandtabs(object_cref tabsize) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref tabsize) const
expandtabs	/usr/include/boost/python/str.hpp	/^    str expandtabs() const { return base::expandtabs(); }$/;"	f	class:boost::python::str	access:public	signature:() const
expandtabs	/usr/include/boost/python/str.hpp	/^    str expandtabs(T const& tabsize) const$/;"	f	class:boost::python::str	access:public	signature:(T const& tabsize) const
expect_non_null	/usr/include/boost/python/errors.hpp	/^inline T* expect_non_null(T* x)$/;"	f	namespace:boost::python	signature:(T* x)
expected_from_python_type	/usr/include/boost/python/converter/pytype_function.hpp	/^struct expected_from_python_type : expected_pytype_for_arg<T>{};$/;"	s	namespace:boost::python::converter	inherits:expected_pytype_for_arg
expected_from_python_type	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* expected_from_python_type() const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:() const
expected_from_python_type_direct	/usr/include/boost/python/converter/pytype_function.hpp	/^struct expected_from_python_type_direct$/;"	s	namespace:boost::python::converter
expected_pytype	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* (*expected_pytype)();$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
expected_pytype_for_arg	/usr/include/boost/python/converter/pytype_function.hpp	/^struct expected_pytype_for_arg$/;"	s	namespace:boost::python::converter
export_values	/usr/include/boost/python/enum.hpp	/^    inline enum_<T>& export_values();$/;"	p	struct:boost::python::enum_	access:public	signature:()
export_values	/usr/include/boost/python/enum.hpp	/^inline enum_<T>& enum_<T>::export_values()$/;"	f	class:boost::python::enum_	signature:()
export_values	/usr/include/boost/python/object/enum_base.hpp	/^    void export_values();$/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:()
extend	/usr/include/boost/python/list.hpp	/^      void extend(object_cref sequence); \/\/ extend list by appending sequence elements$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref sequence)
extend	/usr/include/boost/python/list.hpp	/^    void extend(T const& x)$/;"	f	class:boost::python::list	access:public	signature:(T const& x)
extend	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        extend(Container& container, Iter first, Iter last)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, Iter first, Iter last)
extend_container	/usr/include/boost/python/suite/indexing/container_utils.hpp	/^    extend_container(Container& container, object l)$/;"	f	namespace:boost::python::container_utils	signature:(Container& container, object l)
extension_def	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        extension_def(Class& cl)$/;"	f	class:boost::python::indexing_suite	access:public	signature:(Class& cl)
extension_def	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        extension_def(Class& cl)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Class& cl)
extension_def	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        extension_def(Class& cl)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Class& cl)
extract	/usr/include/boost/python/detail/def_helper.hpp	/^          static result_type extract(Tuple const& x)$/;"	f	struct:boost::python::detail::tuple_extract_impl::apply	access:public	signature:(Tuple const& x)
extract	/usr/include/boost/python/detail/def_helper.hpp	/^          static typename Tuple::head_type extract(Tuple const& x)$/;"	f	struct:boost::python::detail::tuple_extract_impl::apply	access:public	signature:(Tuple const& x)
extract	/usr/include/boost/python/extract.hpp	/^    extract(PyObject*);$/;"	p	struct:boost::python::extract	access:public	signature:(PyObject*)
extract	/usr/include/boost/python/extract.hpp	/^    extract(api::object const&);$/;"	p	struct:boost::python::extract	access:public	signature:(api::object const&)
extract	/usr/include/boost/python/extract.hpp	/^inline extract<T>::extract(PyObject* o)$/;"	f	class:boost::python::extract	signature:(PyObject* o)
extract	/usr/include/boost/python/extract.hpp	/^inline extract<T>::extract(api::object const& o)$/;"	f	class:boost::python::extract	signature:(api::object const& o)
extract	/usr/include/boost/python/extract.hpp	/^struct extract$/;"	s	namespace:boost::python	inherits:converter::select_extract::type
extract	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static void* extract(PyObject* op)$/;"	f	struct:boost::python::lvalue_from_pytype	access:private	signature:(PyObject* op)
extract	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static void* extract(PyObject* op)$/;"	f	struct:boost::python::opaque	access:private	signature:(PyObject* op)
extract_identity	/usr/include/boost/python/lvalue_from_pytype.hpp	/^struct extract_identity$/;"	s	namespace:boost::python
extract_member	/usr/include/boost/python/lvalue_from_pytype.hpp	/^struct extract_member$/;"	s	namespace:boost::python
extract_object_manager	/usr/include/boost/python/extract.hpp	/^      extract_object_manager(PyObject*);$/;"	p	struct:boost::python::converter::extract_object_manager	access:public	signature:(PyObject*)
extract_object_manager	/usr/include/boost/python/extract.hpp	/^  inline extract_object_manager<T>::extract_object_manager(PyObject* obj)$/;"	f	class:boost::python::converter::extract_object_manager	signature:(PyObject* obj)
extract_object_manager	/usr/include/boost/python/extract.hpp	/^  struct extract_object_manager$/;"	s	namespace:boost::python::converter
extract_pointer	/usr/include/boost/python/extract.hpp	/^      extract_pointer(PyObject*);$/;"	p	struct:boost::python::converter::extract_pointer	access:public	signature:(PyObject*)
extract_pointer	/usr/include/boost/python/extract.hpp	/^  inline extract_pointer<Ptr>::extract_pointer(PyObject* obj)$/;"	f	class:boost::python::converter::extract_pointer	signature:(PyObject* obj)
extract_pointer	/usr/include/boost/python/extract.hpp	/^  struct extract_pointer$/;"	s	namespace:boost::python::converter
extract_reference	/usr/include/boost/python/extract.hpp	/^      extract_reference(PyObject*);$/;"	p	struct:boost::python::converter::extract_reference	access:public	signature:(PyObject*)
extract_reference	/usr/include/boost/python/extract.hpp	/^  inline extract_reference<Ref>::extract_reference(PyObject* obj)$/;"	f	class:boost::python::converter::extract_reference	signature:(PyObject* obj)
extract_reference	/usr/include/boost/python/extract.hpp	/^  struct extract_reference$/;"	s	namespace:boost::python::converter
extract_return_type	/usr/include/boost/python/default_call_policies.hpp	/^    struct extract_return_type : mpl::front<Sig>$/;"	s	struct:boost::python::default_call_policies	inherits:mpl::front	access:public
extract_return_type	/usr/include/boost/python/return_arg.hpp	/^    struct extract_return_type : mpl::at_c<Sig, arg_pos>$/;"	s	struct:boost::python::return_arg	inherits:mpl::at_c	access:public
extract_rvalue	/usr/include/boost/python/extract.hpp	/^      extract_rvalue(PyObject*);$/;"	p	struct:boost::python::converter::extract_rvalue	access:public	signature:(PyObject*)
extract_rvalue	/usr/include/boost/python/extract.hpp	/^  inline extract_rvalue<T>::extract_rvalue(PyObject* x)$/;"	f	class:boost::python::converter::extract_rvalue	signature:(PyObject* x)
extract_rvalue	/usr/include/boost/python/extract.hpp	/^  struct extract_rvalue : private noncopyable$/;"	s	namespace:boost::python::converter	inherits:noncopyable
extractor_type_id	/usr/include/boost/python/lvalue_from_pytype.hpp	/^  inline type_info extractor_type_id(T&(*)(U))$/;"	f	namespace:boost::python::detail	signature:(T&(*)(U))
f	/usr/include/boost/python/detail/referent_storage.hpp	/^      static T f();$/;"	p	struct:boost::python::detail::referent_size	access:public	signature:()
f	/usr/include/boost/python/init.hpp	/^        static boost::type_traits::no_type f(...);$/;"	p	struct:boost::python::detail::is_optional	access:private	signature:(....)
f	/usr/include/boost/python/init.hpp	/^        static boost::type_traits::yes_type f(optional<BOOST_PYTHON_OVERLOAD_ARGS>);$/;"	p	struct:boost::python::detail::is_optional	access:private	signature:(optional<BOOST_PYTHON_OVERLOAD_ARGS>)
f	/usr/include/boost/python/raw_function.hpp	/^      F f;$/;"	m	struct:boost::python::detail::raw_dispatcher	access:private
factory	/usr/include/boost/python/numeric.hpp	/^      object factory($/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:( object const& sequence = object() , object const& typecode = object() , bool copy = true , bool savespace = false , object type = object() , object shape = object())
factory	/usr/include/boost/python/numeric.hpp	/^    object factory($/;"	f	class:boost::python::numeric::array	access:public	signature:( Sequence const& sequence , Typecode const& typecode_ , bool copy , bool savespace , Type const& type )
factory	/usr/include/boost/python/numeric.hpp	/^    object factory($/;"	f	class:boost::python::numeric::array	access:public	signature:( Sequence const& sequence , Typecode const& typecode_ , bool copy , bool savespace , Type const& type , Shape const& shape )
factory	/usr/include/boost/python/numeric.hpp	/^    object factory($/;"	f	class:boost::python::numeric::array	access:public	signature:( Sequence const& sequence , Typecode const& typecode_ , bool copy = true , bool savespace = false )
factory	/usr/include/boost/python/numeric.hpp	/^    object factory()$/;"	f	class:boost::python::numeric::array	access:public	signature:()
factory	/usr/include/boost/python/numeric.hpp	/^    object factory(Sequence const& sequence)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& sequence)
failed	/usr/include/boost/python/class.hpp	/^    template <class C> struct assertion_ok { typedef C failed; };$/;"	t	struct:boost::python::detail::error::assertion_ok	access:public
final_map_derived_policies	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        class final_map_derived_policies$/;"	c	namespace:boost::python::detail	inherits:map_indexing_suite
final_vector_derived_policies	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        class final_vector_derived_policies $/;"	c	namespace:boost::python::detail	inherits:vector_indexing_suite
find	/usr/include/boost/python/str.hpp	/^      long find(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
find	/usr/include/boost/python/str.hpp	/^      long find(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
find	/usr/include/boost/python/str.hpp	/^      long find(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
find	/usr/include/boost/python/str.hpp	/^    long find(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
find	/usr/include/boost/python/str.hpp	/^    long find(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
find	/usr/include/boost/python/str.hpp	/^    long find(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
find	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        find(Container& container, index_type i)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Container& container, index_type i)
find	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        find(index_type i)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i)
find_dynamic_type	/usr/include/boost/python/object/inheritance_query.hpp	/^BOOST_PYTHON_DECL void* find_dynamic_type(void* p, type_info src, type_info dst);$/;"	p	namespace:boost::python::objects	signature:(void* p, type_info src, type_info dst)
find_instance_impl	/usr/include/boost/python/object/find_instance.hpp	/^BOOST_PYTHON_DECL void* find_instance_impl(PyObject*, type_info, bool null_shared_ptr_only = false);$/;"	p	namespace:boost::python::objects	signature:(PyObject*, type_info, bool null_shared_ptr_only = false)
find_static_type	/usr/include/boost/python/object/inheritance_query.hpp	/^BOOST_PYTHON_DECL void* find_static_type(void* p, type_info src, type_info dst);$/;"	p	namespace:boost::python::objects	signature:(void* p, type_info src, type_info dst)
first_proxy	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        first_proxy(index_type i)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(index_type i)
flatten	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static std::vector<function const*> flatten(function const *f);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(function const *f)
force_instantiate	/usr/include/boost/python/detail/force_instantiate.hpp	/^inline void force_instantiate(T const&) {}$/;"	f	namespace:boost::python::detail	signature:(T const&)
forward	/usr/include/boost/python/object/forward.hpp	/^struct forward$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
full_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^    full_py_function_impl(Caller const& caller, unsigned min_arity, unsigned max_arity)$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:(Caller const& caller, unsigned min_arity, unsigned max_arity)
full_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^struct full_py_function_impl : py_function_impl_base$/;"	s	namespace:boost::python::objects	inherits:py_function_impl_base
function	/usr/include/boost/python/object/function.hpp	/^    function($/;"	p	struct:boost::python::objects::function	access:public	signature:( py_function const& , python::detail::keyword const* names_and_defaults , unsigned num_keywords)
function	/usr/include/boost/python/object/function.hpp	/^struct BOOST_PYTHON_DECL function : PyObject$/;"	s	namespace:boost::python::objects	inherits:PyObject
function_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      function_arg_to_python(T const& x);$/;"	p	struct:boost::python::converter::detail::function_arg_to_python	access:public	signature:(T const& x)
function_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline function_arg_to_python<T>::function_arg_to_python(T const& x)$/;"	f	class:boost::python::converter::detail::function_arg_to_python	signature:(T const& x)
function_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct function_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
function_doc_signature_generator	/usr/include/boost/python/object/function_doc_signature.hpp	/^class function_doc_signature_generator{$/;"	c	namespace:boost::python::objects
function_doc_signatures	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static list function_doc_signatures( function const * f);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:public	signature:( function const * f)
function_handle	/usr/include/boost/python/object/function_handle.hpp	/^inline handle<> function_handle(F const& f, Signature)$/;"	f	namespace:boost::python::objects	signature:(F const& f, Signature)
function_handle_impl	/usr/include/boost/python/object/function_handle.hpp	/^BOOST_PYTHON_DECL handle<> function_handle_impl(py_function const& f);$/;"	p	namespace:boost::python::objects	signature:(py_function const& f)
function_object	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL api::object function_object($/;"	p	namespace:boost::python::objects	signature:( py_function const& f , python::detail::keyword_range const&)
function_object	/usr/include/boost/python/object/function_object.hpp	/^  BOOST_PYTHON_DECL api::object function_object(py_function const& f);$/;"	p	namespace:boost::python::objects	signature:(py_function const& f)
function_ptr	/usr/include/boost/python/detail/referent_storage.hpp	/^typedef void (*function_ptr)();$/;"	t	namespace:boost::python::detail
garbage	/usr/include/boost/python/object/iterator.hpp	/^        int garbage;$/;"	m	struct:boost::python::objects::iterator_range::next	access:public
gcc_demangle	/usr/include/boost/python/type_id.hpp	/^  BOOST_PYTHON_DECL char const* gcc_demangle(char const*);$/;"	p	namespace:boost::python::detail	signature:(char const*)
get	/usr/include/boost/python/back_reference.hpp	/^    T get() const;$/;"	p	struct:boost::python::back_reference	access:public	signature:() const
get	/usr/include/boost/python/back_reference.hpp	/^T back_reference<T>::get() const$/;"	f	class:boost::python::back_reference	signature:() const
get	/usr/include/boost/python/converter/arg_to_python.hpp	/^      PyObject* get() const$/;"	f	struct:boost::python::converter::detail::object_manager_arg_to_python	access:public	signature:() const
get	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      PyObject* get() const { return m_ptr.get(); }$/;"	f	struct:boost::python::converter::detail::arg_to_python_base	access:public	signature:() const
get	/usr/include/boost/python/detail/caller.hpp	/^inline PyObject* get(mpl::int_<N>, PyObject* const& args_)$/;"	f	namespace:boost::python::detail	signature:(mpl::int_<N>, PyObject* const& args_)
get	/usr/include/boost/python/dict.hpp	/^      object get(object_cref k) const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k) const
get	/usr/include/boost/python/dict.hpp	/^      object get(object_cref k, object_cref d) const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k, object_cref d) const
get	/usr/include/boost/python/dict.hpp	/^    object get(T const& k) const $/;"	f	class:boost::python::dict	access:public	signature:(T const& k) const
get	/usr/include/boost/python/dict.hpp	/^    object get(T1 const& k, T2 const& d) const $/;"	f	class:boost::python::dict	access:public	signature:(T1 const& k, T2 const& d) const
get	/usr/include/boost/python/handle.hpp	/^    T* get() const;$/;"	p	class:boost::python::handle	access:public	signature:() const
get	/usr/include/boost/python/handle.hpp	/^inline T* handle<T>::get() const$/;"	f	class:boost::python::handle	signature:() const
get	/usr/include/boost/python/make_constructor.hpp	/^  inline PyObject* get(mpl::int_<N>, offset_args<BaseArgs,Offset> const& args_)$/;"	f	namespace:boost::python::detail	signature:(mpl::int_<N>, offset_args<BaseArgs,Offset> const& args_)
get	/usr/include/boost/python/object/forward.hpp	/^    reference get() const { return m_value; }$/;"	f	struct:boost::python::objects::reference_to_value	access:public	signature:() const
get	/usr/include/boost/python/object_attributes.hpp	/^    static object get(object const& target, char const* key);$/;"	p	struct:boost::python::api::const_attribute_policies	access:public	signature:(object const& target, char const* key)
get	/usr/include/boost/python/object_attributes.hpp	/^    static object get(object const& target, object const& key);$/;"	p	struct:boost::python::api::const_attribute_policies	access:public	signature:(object const& target, object const& key)
get	/usr/include/boost/python/object_attributes.hpp	/^    static object get(object const& target, object const& key);$/;"	p	struct:boost::python::api::const_objattribute_policies	access:public	signature:(object const& target, object const& key)
get	/usr/include/boost/python/object_attributes.hpp	/^inline object const_attribute_policies::get(object const& target, char const* key)$/;"	f	class:boost::python::api::const_attribute_policies	signature:(object const& target, char const* key)
get	/usr/include/boost/python/object_attributes.hpp	/^inline object const_objattribute_policies::get(object const& target, object const& key)$/;"	f	class:boost::python::api::const_objattribute_policies	signature:(object const& target, object const& key)
get	/usr/include/boost/python/object_core.hpp	/^      get(T const& x, U)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(T const& x, U)
get	/usr/include/boost/python/object_core.hpp	/^      get(T const& x, mpl::false_)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(T const& x, mpl::false_)
get	/usr/include/boost/python/object_core.hpp	/^      get(object const& x, mpl::true_)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(object const& x, mpl::true_)
get	/usr/include/boost/python/object_core.hpp	/^      get(proxy<Policies> const& x, mpl::false_)$/;"	f	struct:boost::python::api::object_initializer_impl	access:public	signature:(proxy<Policies> const& x, mpl::false_)
get	/usr/include/boost/python/object_items.hpp	/^    static object get(object const& target, object const& key);$/;"	p	struct:boost::python::api::const_item_policies	access:public	signature:(object const& target, object const& key)
get	/usr/include/boost/python/object_items.hpp	/^inline object const_item_policies::get(object const& target, object const& key)$/;"	f	class:boost::python::api::const_item_policies	signature:(object const& target, object const& key)
get	/usr/include/boost/python/object_slices.hpp	/^    static object get(object const& target, key_type const& key);$/;"	p	struct:boost::python::api::const_slice_policies	access:public	signature:(object const& target, key_type const& key)
get	/usr/include/boost/python/object_slices.hpp	/^inline object const_slice_policies::get(object const& target, key_type const& key)$/;"	f	class:boost::python::api::const_slice_policies	signature:(object const& target, key_type const& key)
get	/usr/include/boost/python/ptr.hpp	/^    Ptr get() const { return p_; }$/;"	f	class:boost::python::pointer_wrapper	access:public	signature:() const
get	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        element_type* get() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
get	/usr/include/boost/python/to_python_value.hpp	/^   static PyTypeObject const* get( U const& (*)() =0)$/;"	f	struct:boost::python::detail::object_manager_get_pytype	access:public	signature:( U const& (*)() =0)
get	/usr/include/boost/python/to_python_value.hpp	/^   static PyTypeObject const* get( U& (*)() =0)$/;"	f	struct:boost::python::detail::object_manager_get_pytype	access:public	signature:( U& (*)() =0)
get_class_object	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject* get_class_object() const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:() const
get_class_object	/usr/include/boost/python/object/make_instance.hpp	/^    static inline PyTypeObject* get_class_object(U&)$/;"	f	struct:boost::python::objects::make_instance	access:public	signature:(U&)
get_class_object	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_class_object(Ptr const& x)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:public	signature:(Ptr const& x)
get_class_object_impl	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_class_object_impl(U const volatile* p)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:private	signature:(U const volatile* p)
get_container	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        get_container() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
get_data	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        get_data(typename Container::value_type& e)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(typename Container::value_type& e)
get_derived_class_object	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_derived_class_object(mpl::false_, U*)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:private	signature:(mpl::false_, U*)
get_derived_class_object	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject* get_derived_class_object(mpl::true_, U const volatile* x)$/;"	f	struct:boost::python::objects::make_ptr_instance	access:private	signature:(mpl::true_, U const volatile* x)
get_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        get_index() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
get_indices	/usr/include/boost/python/slice.hpp	/^    get_indices( const RandomAccessIterator& begin, $/;"	f	class:boost::python::slice	access:public	signature:( const RandomAccessIterator& begin, const RandomAccessIterator& end) const
get_indicies	/usr/include/boost/python/slice.hpp	/^    get_indicies( const RandomAccessIterator& begin, $/;"	f	class:boost::python::slice	access:public	signature:( const RandomAccessIterator& begin, const RandomAccessIterator& end) const
get_item	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        get_item(Container& container, index_type i_)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type i_)
get_item	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_item(Container& container, index_type i)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type i)
get_key	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        get_key(typename Container::value_type& e)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(typename Container::value_type& e)
get_links	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        get_links()$/;"	f	class:boost::python::detail::container_element	access:public	signature:()
get_lvalue_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* get_lvalue_from_python($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, registration const&)
get_managed_object	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^inline T* get_managed_object(detail::borrowed<T> const volatile* p, tag_t)$/;"	f	namespace:boost::python	signature:(detail::borrowed<T> const volatile* p, tag_t)
get_managed_object	/usr/include/boost/python/handle.hpp	/^inline PyObject* get_managed_object(handle<T> const& h, tag_t)$/;"	f	namespace:boost::python	signature:(handle<T> const& h, tag_t)
get_managed_object	/usr/include/boost/python/object_core.hpp	/^inline PyObject* get_managed_object(object const& x, tag_t)$/;"	f	namespace:boost::python	signature:(object const& x, tag_t)
get_max_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_max_index(Container& container)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container)
get_min_index	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_min_index(Container& \/*container*\/)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& )
get_module_name	/usr/include/boost/python/numeric.hpp	/^    static BOOST_PYTHON_DECL std::string get_module_name();$/;"	p	class:boost::python::numeric::array	access:public	signature:()
get_namespace	/usr/include/boost/python/object/function.hpp	/^    object const& get_namespace() const { return m_namespace; }$/;"	f	struct:boost::python::objects::function	access:public	signature:() const
get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static PyObject* get_object(Ptr p);$/;"	p	struct:boost::python::converter::detail::pointer_shallow_arg_to_python	access:private	signature:(Ptr p)
get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static PyObject* get_object(T& x);$/;"	p	struct:boost::python::converter::detail::reference_arg_to_python	access:private	signature:(T& x)
get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^      static PyObject* get_object(T& x);$/;"	p	struct:boost::python::converter::detail::shared_ptr_arg_to_python	access:private	signature:(T& x)
get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline PyObject* pointer_shallow_arg_to_python<Ptr>::get_object(Ptr x)$/;"	f	class:boost::python::converter::detail::pointer_shallow_arg_to_python	signature:(Ptr x)
get_object	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline PyObject* reference_arg_to_python<T>::get_object(T& x)$/;"	f	class:boost::python::converter::detail::reference_arg_to_python	signature:(T& x)
get_override	/usr/include/boost/python/detail/wrapper_base.hpp	/^      override get_override($/;"	p	class:boost::python::detail::wrapper_base	access:protected	signature:( char const* name, PyTypeObject* class_object) const
get_override	/usr/include/boost/python/wrapper.hpp	/^    override get_override(char const* name) const$/;"	f	class:boost::python::wrapper	access:protected	signature:(char const* name) const
get_owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^      friend PyObject* wrapper_base_::get_owner(wrapper_base const volatile& w);$/;"	p	class:boost::python::detail::wrapper_base::wrapper_base_	access:friend	signature:(wrapper_base const volatile& w)
get_owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^    inline PyObject* get_owner(wrapper_base const volatile& w)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(wrapper_base const volatile& w)
get_owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^    inline PyObject* get_owner(wrapper_base const volatile& w);$/;"	p	namespace:boost::python::detail::wrapper_base_	signature:(wrapper_base const volatile& w)
get_pointer	/usr/include/boost/python/handle.hpp	/^template<class T> inline T * get_pointer(python::handle<T> const & p)$/;"	f	namespace:boost	signature:(python::handle<T> const & p)
get_pointer	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    get_pointer($/;"	f	namespace:boost	signature:( python::detail::container_element<Container, Index, Policies> const& p)
get_prev	/usr/include/boost/python/with_custodian_and_ward.hpp	/^  struct get_prev$/;"	s	namespace:boost::python::detail
get_prev	/usr/include/boost/python/with_custodian_and_ward.hpp	/^  struct get_prev<0>$/;"	s	namespace:boost::python::detail
get_pytype	/usr/include/boost/python/converter/as_to_python_function.hpp	/^    static PyTypeObject const * get_pytype() { return ToPython::get_pytype(); }$/;"	f	struct:boost::python::converter::as_to_python_function	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pyobject_traits.hpp	/^    static PyTypeObject const* get_pytype() { return 0; }$/;"	f	struct:boost::python::converter::pyobject_traits	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pyobject_type.hpp	/^    static PyTypeObject const* get_pytype() { return pytype; }$/;"	f	struct:boost::python::converter::pyobject_type	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::expected_pytype_for_arg	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::registered_pytype	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::to_python_target_type	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::converter::to_python_target_type_direct	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::converter::expected_from_python_type_direct	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::converter::registered_pytype_direct	access:public	signature:()
get_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^    static PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::converter::wrap_pytype	access:public	signature:()
get_pytype	/usr/include/boost/python/detail/caller.hpp	/^    static PyTypeObject const *get_pytype()$/;"	f	struct:boost::python::detail::converter_target_type	access:public	signature:()
get_pytype	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    static PyTypeObject const*get_pytype() { return python_type; }$/;"	f	struct:boost::python::lvalue_from_pytype	access:private	signature:()
get_pytype	/usr/include/boost/python/numeric.hpp	/^      static PyTypeObject const* get_pytype() ;$/;"	p	struct:boost::python::numeric::aux::array_object_manager_traits	access:public	signature:()
get_pytype	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyTypeObject const *get_pytype() { return MakeInstance::get_pytype(); }$/;"	f	struct:boost::python::objects::class_value_wrapper	access:public	signature:()
get_pytype	/usr/include/boost/python/object/class_wrapper.hpp	/^    static PyTypeObject const *get_pytype() { return converter::registered_pytype_direct<Src>::get_pytype(); }$/;"	f	struct:boost::python::objects::class_cref_wrapper	access:public	signature:()
get_pytype	/usr/include/boost/python/object/make_ptr_instance.hpp	/^    static inline PyTypeObject const* get_pytype()$/;"	f	struct:boost::python::objects::make_ptr_instance	access:public	signature:()
get_pytype	/usr/include/boost/python/object_core.hpp	/^      static PyTypeObject const *get_pytype() {return 0;}$/;"	f	struct:boost::python::converter::object_manager_traits	access:public	signature:()
get_pytype	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static PyTypeObject const *get_pytype(){return  &type_object; }$/;"	f	struct:boost::python::opaque	access:private	signature:()
get_pytype	/usr/include/boost/python/return_arg.hpp	/^              PyTypeObject const *get_pytype() const { return converter::expected_pytype_for_arg<T>::get_pytype() ; }$/;"	f	struct:boost::python::detail::return_none::apply::type	access:public	signature:() const
get_pytype	/usr/include/boost/python/to_python_indirect.hpp	/^    get_pytype()const$/;"	f	struct:boost::python::to_python_indirect	access:public	signature:() const
get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype() const {$/;"	f	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:() const
get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype() const {return converter::registered<T>::converters.to_python_target_type();}$/;"	f	struct:boost::python::detail::registry_to_python_value	access:public	signature:() const
get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype() const {return get_pytype((boost::type<argument_type>*)0);}$/;"	f	struct:boost::python::detail::shared_ptr_to_python_value	access:public	signature:() const
get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype(boost::type<const shared_ptr<U> &> *) const {return converter::registered<U>::converters.to_python_target_type();}$/;"	f	struct:boost::python::detail::shared_ptr_to_python_value	access:private	signature:(boost::type<const shared_ptr<U> &> *) const
get_pytype	/usr/include/boost/python/to_python_value.hpp	/^      PyTypeObject const* get_pytype(boost::type<shared_ptr<U> &> *) const {return converter::registered<U>::converters.to_python_target_type();}$/;"	f	struct:boost::python::detail::shared_ptr_to_python_value	access:private	signature:(boost::type<shared_ptr<U> &> *) const
get_pytype_1	/usr/include/boost/python/to_python_converter.hpp	/^    static PyTypeObject const* get_pytype_1(boost::mpl::false_ *)$/;"	f	struct:boost::python::to_python_converter	access:public	signature:(boost::mpl::false_ *)
get_pytype_1	/usr/include/boost/python/to_python_converter.hpp	/^    static PyTypeObject const* get_pytype_1(boost::mpl::true_ *)$/;"	f	struct:boost::python::to_python_converter	access:public	signature:(boost::mpl::true_ *)
get_pytype_aux	/usr/include/boost/python/to_python_value.hpp	/^      inline static PyTypeObject const* get_pytype_aux(mpl::false_* ) $/;"	f	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(mpl::false_* )
get_pytype_aux	/usr/include/boost/python/to_python_value.hpp	/^      inline static PyTypeObject const* get_pytype_aux(mpl::true_*) {return converter::object_manager_traits<T>::get_pytype();}$/;"	f	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(mpl::true_*)
get_pytype_impl	/usr/include/boost/python/to_python_converter.hpp	/^    static PyTypeObject const* get_pytype_impl()$/;"	f	struct:boost::python::to_python_converter	access:public	signature:()
get_return_type	/usr/include/boost/python/object/py_function.hpp	/^    python::detail::signature_element const& get_return_type() const$/;"	f	class:boost::python::objects::py_function::python::detail	access:public	signature:() const
get_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        get_slice(Container& container, index_type from, index_type to)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to)
getattr	/usr/include/boost/python/object_protocol.hpp	/^object getattr(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
getattr	/usr/include/boost/python/object_protocol.hpp	/^object getattr(Target const& target, Key const& key, Default const& default_ BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(Target const& target, Key const& key, Default const& default_ BOOST_PYTHON_NO_ARRAY_ARG(Key))
getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, char const* key);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key)
getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, char const* key, object const& default_);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key, object const& default_)
getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
getattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getattr(object const& target, object const& key, object const& default_);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key, object const& default_)
getflat	/usr/include/boost/python/numeric.hpp	/^      object getflat() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
getinitargs	/usr/include/boost/python/object/pickle_support.hpp	/^    static inaccessible* getinitargs() { return 0; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
getitem	/usr/include/boost/python/object_protocol.hpp	/^object getitem(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(Target const& target, Key const& key BOOST_PYTHON_NO_ARRAY_ARG(Key))
getitem	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getitem(object const& target, object const& key);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key)
getrank	/usr/include/boost/python/numeric.hpp	/^      long getrank() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
getshape	/usr/include/boost/python/numeric.hpp	/^      object getshape() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
getslice	/usr/include/boost/python/object_protocol.hpp	/^object getslice(Target const& target, Begin const& begin, End const& end)$/;"	f	namespace:boost::python::api	signature:(Target const& target, Begin const& begin, End const& end)
getslice	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL object getslice(object const& target, handle<> const& begin, handle<> const& end);$/;"	p	namespace:boost::python::api	signature:(object const& target, handle<> const& begin, handle<> const& end)
getstate	/usr/include/boost/python/object/pickle_support.hpp	/^    static inaccessible* getstate() { return 0; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
getstate_manages_dict	/usr/include/boost/python/object/pickle_support.hpp	/^    static bool getstate_manages_dict() { return false; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
handle	/usr/include/boost/python/detail/exception_handler.hpp	/^    inline bool handle(function0<void> const& f) const;$/;"	p	struct:boost::python::detail::exception_handler	access:public	signature:(function0<void> const& f) const
handle	/usr/include/boost/python/detail/exception_handler.hpp	/^inline bool exception_handler::handle(function0<void> const& f) const$/;"	f	class:boost::python::detail::exception_handler	signature:(function0<void> const& f) const
handle	/usr/include/boost/python/handle.hpp	/^    explicit handle(Y* p)$/;"	f	class:boost::python::handle	access:public	signature:(Y* p)
handle	/usr/include/boost/python/handle.hpp	/^    handle();$/;"	p	class:boost::python::handle	access:public	signature:()
handle	/usr/include/boost/python/handle.hpp	/^    handle(handle const& r)$/;"	f	class:boost::python::handle	access:public	signature:(handle const& r)
handle	/usr/include/boost/python/handle.hpp	/^    handle(handle<Y> const& r)$/;"	f	class:boost::python::handle	access:public	signature:(handle<Y> const& r)
handle	/usr/include/boost/python/handle.hpp	/^    inline handle(detail::borrowed_reference x)$/;"	f	class:boost::python::handle	access:public	signature:(detail::borrowed_reference x)
handle	/usr/include/boost/python/handle.hpp	/^class handle$/;"	c	namespace:boost::python
handle	/usr/include/boost/python/handle.hpp	/^inline handle<T>::handle()$/;"	f	class:boost::python::handle	signature:()
handle_exception	/usr/include/boost/python/errors.hpp	/^bool handle_exception(T f)$/;"	f	namespace:boost::python	signature:(T f)
handle_exception	/usr/include/boost/python/errors.hpp	/^inline void handle_exception()$/;"	f	namespace:boost::python	signature:()
handle_exception_impl	/usr/include/boost/python/errors.hpp	/^BOOST_PYTHON_DECL bool handle_exception_impl(function0<void>);$/;"	p	namespace:boost::python	signature:(function0<void>)
handle_object_manager_traits	/usr/include/boost/python/converter/object_manager.hpp	/^struct handle_object_manager_traits$/;"	s	namespace:boost::python::converter	inherits:pyobject_traits
handler_function	/usr/include/boost/python/detail/exception_handler.hpp	/^typedef function2<bool, exception_handler const&, function0<void> const&> handler_function;$/;"	t	namespace:boost::python::detail
has_back_reference	/usr/include/boost/python/has_back_reference.hpp	/^struct has_back_reference$/;"	s	namespace:boost::python	inherits:mpl::false_
has_key	/usr/include/boost/python/dict.hpp	/^      bool has_key(object_cref k) const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k) const
has_key	/usr/include/boost/python/dict.hpp	/^    bool has_key(T const& k) const$/;"	f	class:boost::python::dict	access:public	signature:(T const& k) const
head_type	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename Tuple::head_type head_type;$/;"	t	struct:boost::python::detail::tuple_extract_base_select	access:public
held_type	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type held_type;$/;"	t	struct:boost::python::objects::class_metadata	access:public
held_type	/usr/include/boost/python/object/pointer_holder.hpp	/^    typedef typename python::pointee<Pointer>::type held_type;$/;"	t	struct:boost::python::objects::pointer_holder_back_reference	access:private
held_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Held held_type;$/;"	t	struct:boost::python::objects::value_holder_back_reference	access:public
held_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Value held_type;$/;"	t	struct:boost::python::objects::value_holder	access:public
held_type_arg	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type held_type_arg;$/;"	t	struct:boost::python::objects::class_metadata	access:public
holder	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type holder;$/;"	t	struct:boost::python::objects::class_metadata	access:public
holds	/usr/include/boost/python/instance_holder.hpp	/^    virtual void* holds(type_info, bool null_ptr_only) = 0;$/;"	p	struct:boost::python::instance_holder	access:public	signature:(type_info, bool null_ptr_only)
holds	/usr/include/boost/python/object/pointer_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::pointer_holder	access:private	signature:(type_info, bool null_ptr_only)
holds	/usr/include/boost/python/object/pointer_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::pointer_holder_back_reference	access:private	signature:(type_info, bool null_ptr_only)
holds	/usr/include/boost/python/object/pointer_holder.hpp	/^void* pointer_holder<Pointer, Value>::holds(type_info dst_t, bool null_ptr_only)$/;"	f	class:boost::python::objects::pointer_holder	signature:(type_info dst_t, bool null_ptr_only)
holds	/usr/include/boost/python/object/pointer_holder.hpp	/^void* pointer_holder_back_reference<Pointer, Value>::holds(type_info dst_t, bool null_ptr_only)$/;"	f	class:boost::python::objects::pointer_holder_back_reference	signature:(type_info dst_t, bool null_ptr_only)
holds	/usr/include/boost/python/object/value_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::value_holder	access:private	signature:(type_info, bool null_ptr_only)
holds	/usr/include/boost/python/object/value_holder.hpp	/^    void* holds(type_info, bool null_ptr_only);$/;"	p	struct:boost::python::objects::value_holder_back_reference	access:private	signature:(type_info, bool null_ptr_only)
holds	/usr/include/boost/python/object/value_holder.hpp	/^void* value_holder<Value>::holds(type_info dst_t, bool \/*null_ptr_only*\/)$/;"	f	class:boost::python::objects::value_holder	signature:(type_info dst_t, bool )
holds	/usr/include/boost/python/object/value_holder.hpp	/^void* value_holder_back_reference<Value,Held>::holds($/;"	f	class:boost::python::objects::value_holder_back_reference	signature:( type_info dst_t, bool )
holds_wrapped	/usr/include/boost/python/object/pointer_holder.hpp	/^    inline void* holds_wrapped(type_info dst_t, wrapper<T>*,T* p)$/;"	f	struct:boost::python::objects::pointer_holder	access:private	signature:(type_info dst_t, wrapper<T>*,T* p)
holds_wrapped	/usr/include/boost/python/object/pointer_holder.hpp	/^    inline void* holds_wrapped(type_info, ...)$/;"	f	struct:boost::python::objects::pointer_holder	access:private	signature:(type_info, ...)
holds_wrapped	/usr/include/boost/python/object/value_holder.hpp	/^    inline void* holds_wrapped(type_info dst_t, wrapper<T>*,T* p)$/;"	f	struct:boost::python::objects::value_holder	access:private	signature:(type_info dst_t, wrapper<T>*,T* p)
holds_wrapped	/usr/include/boost/python/object/value_holder.hpp	/^    inline void* holds_wrapped(type_info, ...)$/;"	f	struct:boost::python::objects::value_holder	access:private	signature:(type_info, ...)
hypot	/usr/include/boost/python/detail/wrap_python.hpp	130;"	d
hypot	/usr/include/boost/python/detail/wrap_python.hpp	95;"	d
id_vector	/usr/include/boost/python/class.hpp	/^        id_vector()$/;"	f	struct:boost::python::class_::id_vector	access:public	signature:()
id_vector	/usr/include/boost/python/class.hpp	/^    struct id_vector$/;"	s	class:boost::python::class_	access:private
identity_function	/usr/include/boost/python/object/iterator_core.hpp	/^BOOST_PYTHON_DECL object const& identity_function();$/;"	p	namespace:boost::python::objects	signature:()
ids	/usr/include/boost/python/class.hpp	/^        type_info ids[size];$/;"	m	struct:boost::python::class_::id_vector	access:public
if_	/usr/include/boost/python/detail/if_else.hpp	/^struct if_<false>$/;"	s	namespace:boost::python::detail
if_	/usr/include/boost/python/detail/if_else.hpp	/^template <bool b> struct if_$/;"	s	namespace:boost::python::detail
if_2	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct if_2$/;"	s	namespace:boost::python::converter
if_selected	/usr/include/boost/python/detail/if_else.hpp	/^struct if_selected$/;"	s	namespace:boost::python::detail
if_unselected	/usr/include/boost/python/detail/if_else.hpp	/^struct if_unselected$/;"	s	namespace:boost::python::detail
impl_	/usr/include/boost/python/stl_iterator.hpp	/^    objects::stl_input_iterator_impl impl_;$/;"	m	struct:boost::python::stl_input_iterator	access:private
implicit	/usr/include/boost/python/converter/implicit.hpp	/^struct implicit$/;"	s	namespace:boost::python::converter
implicit_cast_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct implicit_cast_generator$/;"	s	namespace:boost::python::objects
implicit_rvalue_convertible_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL bool implicit_rvalue_convertible_from_python($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, registration const&)
implicitly_convertible	/usr/include/boost/python/implicit.hpp	/^void implicitly_convertible(boost::type<Source>* = 0, boost::type<Target>* = 0)$/;"	f	namespace:boost::python	signature:(boost::type<Source>* = 0, boost::type<Target>* = 0)
import	/usr/include/boost/python/import.hpp	/^object BOOST_PYTHON_DECL import(str name);$/;"	p	namespace:boost::python	signature:(str name)
inaccessible	/usr/include/boost/python/object/pickle_support.hpp	/^    struct inaccessible {};$/;"	s	struct:boost::python::pickle_suite	access:private
inaccessible	/usr/include/boost/python/object/pickle_support.hpp	/^    typedef pickle_suite::inaccessible inaccessible;$/;"	t	struct:boost::python::detail::pickle_suite_registration	access:public
incref	/usr/include/boost/python/refcount.hpp	/^inline T* incref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
increment	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    void increment();$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:()
increment	/usr/include/boost/python/stl_iterator.hpp	/^    void increment()$/;"	f	struct:boost::python::stl_input_iterator	access:private	signature:()
index	/usr/include/boost/python/list.hpp	/^      long index(object_cref value) const; \/\/ return index of first occurrence of value$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref value) const
index	/usr/include/boost/python/list.hpp	/^    long index(T const& x) const$/;"	f	class:boost::python::list	access:public	signature:(T const& x) const
index	/usr/include/boost/python/str.hpp	/^      long index(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
index	/usr/include/boost/python/str.hpp	/^      long index(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
index	/usr/include/boost/python/str.hpp	/^      long index(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
index	/usr/include/boost/python/str.hpp	/^    long index(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
index	/usr/include/boost/python/str.hpp	/^    long index(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
index	/usr/include/boost/python/str.hpp	/^    long index(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        Index index;$/;"	m	class:boost::python::detail::container_element	access:private
index_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef Index index_type;$/;"	t	class:boost::python::detail::container_element	access:public
index_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Proxy::index_type index_type;$/;"	t	class:boost::python::detail::proxy_group	access:public
index_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Proxy::index_type index_type;$/;"	t	class:boost::python::detail::proxy_links	access:public
index_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::key_type index_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
index_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::size_type index_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
indexing_suite	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^    class indexing_suite$/;"	c	namespace:boost::python	inherits:def_visitor
info	/usr/include/boost/python/numeric.hpp	/^      void info() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
inherit_from	/usr/include/boost/python/detail/if_else.hpp	/^template< bool > struct inherit_from$/;"	s	namespace:boost::python::detail::msvc70_aux
inherit_from	/usr/include/boost/python/detail/if_else.hpp	/^template<> struct inherit_from<true>$/;"	s	namespace:boost::python::detail::msvc70_aux
init	/usr/include/boost/python/init.hpp	/^    init(char const* doc_ = 0)$/;"	f	class:boost::python::init	access:public	signature:(char const* doc_ = 0)
init	/usr/include/boost/python/init.hpp	/^    init(char const* doc_, detail::keywords<N> const& kw)$/;"	f	class:boost::python::init	access:public	signature:(char const* doc_, detail::keywords<N> const& kw)
init	/usr/include/boost/python/init.hpp	/^    init(detail::keywords<N> const& kw, char const* doc_ = 0)$/;"	f	class:boost::python::init	access:public	signature:(detail::keywords<N> const& kw, char const* doc_ = 0)
init	/usr/include/boost/python/init.hpp	/^class init : public init_base<init<BOOST_PYTHON_OVERLOAD_ARGS> >$/;"	c	namespace:boost::python	inherits:init_base
init_base	/usr/include/boost/python/init.hpp	/^    init_base(char const* doc_)$/;"	f	struct:boost::python::init_base	access:public	signature:(char const* doc_)
init_base	/usr/include/boost/python/init.hpp	/^    init_base(char const* doc_, detail::keyword_range const& keywords_)$/;"	f	struct:boost::python::init_base	access:public	signature:(char const* doc_, detail::keyword_range const& keywords_)
init_base	/usr/include/boost/python/init.hpp	/^struct init_base : def_visitor<DerivedT>$/;"	s	namespace:boost::python	inherits:def_visitor
init_module	/usr/include/boost/python/module_init.hpp	/^BOOST_PYTHON_DECL PyObject* init_module(PyModuleDef&, void(*)());$/;"	p	namespace:boost::python::detail	signature:(PyModuleDef&, void(*)())
init_with_call_policies	/usr/include/boost/python/init.hpp	/^    init_with_call_policies($/;"	f	class:boost::python::init_with_call_policies	access:public	signature:( CallPoliciesT const& policies_ , char const* doc_ , detail::keyword_range const& keywords )
init_with_call_policies	/usr/include/boost/python/init.hpp	/^class init_with_call_policies$/;"	c	namespace:boost::python	inherits:init_base
initialize	/usr/include/boost/python/class.hpp	/^    inline void initialize(DefVisitor const& i)$/;"	f	class:boost::python::class_	access:private	signature:(DefVisitor const& i)
initialize	/usr/include/boost/python/class.hpp	/^    inline void initialize(no_init_t)$/;"	f	class:boost::python::class_	access:private	signature:(no_init_t)
initialize_builtin_converters	/usr/include/boost/python/converter/builtin_converters.hpp	/^  void initialize_builtin_converters();$/;"	p	namespace:boost::python::converter	signature:()
initialize_wrapper	/usr/include/boost/python/detail/wrapper_base.hpp	/^      friend void initialize_wrapper(PyObject* self, wrapper_base* w);$/;"	p	class:boost::python::detail::wrapper_base	access:friend	signature:(PyObject* self, wrapper_base* w)
initialize_wrapper	/usr/include/boost/python/detail/wrapper_base.hpp	/^  inline void initialize_wrapper(PyObject* \/*self*\/, ...) {}$/;"	f	namespace:boost::python::detail	signature:(PyObject* , ...)
initialize_wrapper	/usr/include/boost/python/detail/wrapper_base.hpp	/^  inline void initialize_wrapper(PyObject* self, wrapper_base* w)$/;"	f	namespace:boost::python::detail	signature:(PyObject* self, wrapper_base* w)
inner_args	/usr/include/boost/python/make_constructor.hpp	/^      typedef typename mpl::pop_front<InnerSignature>::type inner_args;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
insert	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void insert($/;"	p	namespace:boost::python::converter::registry	signature:( convertible_function , constructor_function , type_info , PyTypeObject const* (*expected_pytype)() = 0 )
insert	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void insert(convertible_function, type_info, PyTypeObject const* (*expected_pytype)() = 0);$/;"	p	namespace:boost::python::converter::registry	signature:(convertible_function, type_info, PyTypeObject const* (*expected_pytype)() = 0)
insert	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void insert(to_python_function_t, type_info, PyTypeObject const* (*to_python_target_type)() = 0);$/;"	p	namespace:boost::python::converter::registry	signature:(to_python_function_t, type_info, PyTypeObject const* (*to_python_target_type)() = 0)
insert	/usr/include/boost/python/list.hpp	/^      void insert(object const& index, object_cref);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object const& index, object_cref)
insert	/usr/include/boost/python/list.hpp	/^      void insert(ssize_t index, object_cref); \/\/ insert object before index$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(ssize_t index, object_cref)
insert	/usr/include/boost/python/list.hpp	/^    void insert(object const& index, T const& x) \/\/ insert object before index$/;"	f	class:boost::python::list	access:public	signature:(object const& index, T const& x)
insert	/usr/include/boost/python/list.hpp	/^    void insert(ssize_t index, T const& x) \/\/ insert object before index$/;"	f	class:boost::python::list	access:public	signature:(ssize_t index, T const& x)
install	/usr/include/boost/python/instance_holder.hpp	/^    void install(PyObject* inst) throw();$/;"	p	struct:boost::python::instance_holder	access:public	signature:(PyObject* inst)
install_holder	/usr/include/boost/python/make_constructor.hpp	/^      install_holder(PyObject* args_)$/;"	f	struct:boost::python::detail::install_holder	access:public	signature:(PyObject* args_)
install_holder	/usr/include/boost/python/make_constructor.hpp	/^  struct install_holder : converter::context_result_converter$/;"	s	namespace:boost::python::detail	inherits:converter::context_result_converter
instance	/usr/include/boost/python/object/instance.hpp	/^struct instance$/;"	s	namespace:boost::python::objects
instance	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static opaque instance;$/;"	m	struct:boost::python::opaque	access:public
instance	/usr/include/boost/python/opaque_pointer_converter.hpp	/^opaque<Pointee> opaque<Pointee>::instance;$/;"	m	class:boost::python::opaque
instance_char	/usr/include/boost/python/object/instance.hpp	/^    typedef instance<char> instance_char;$/;"	t	struct:boost::python::objects::additional_instance_size	access:public
instance_data	/usr/include/boost/python/object/instance.hpp	/^    typedef instance<Data> instance_data;$/;"	t	struct:boost::python::objects::additional_instance_size	access:public
instance_holder	/usr/include/boost/python/instance_holder.hpp	/^    instance_holder();$/;"	p	struct:boost::python::instance_holder	access:public	signature:()
instance_holder	/usr/include/boost/python/instance_holder.hpp	/^struct BOOST_PYTHON_DECL instance_holder : private noncopyable$/;"	s	namespace:boost::python	inherits:noncopyable
instance_holder	/usr/include/boost/python/object/instance.hpp	/^  struct BOOST_PYTHON_DECL_FORWARD instance_holder;$/;"	m	namespace:boost::python	typeref:struct:boost::python::BOOST_PYTHON_DECL_FORWARD
instance_t	/usr/include/boost/python/object/make_instance.hpp	/^    typedef objects::instance<Holder> instance_t;$/;"	t	struct:boost::python::objects::make_instance_impl	access:public
invoke_tag	/usr/include/boost/python/detail/invoke.hpp	/^struct invoke_tag$/;"	s	namespace:boost::python::detail	inherits:invoke_tag_
invoke_tag_	/usr/include/boost/python/detail/invoke.hpp	/^struct invoke_tag_ {};$/;"	s	namespace:boost::python::detail
is_back_reference	/usr/include/boost/python/back_reference.hpp	/^class is_back_reference$/;"	c	namespace:boost::python
is_back_reference	/usr/include/boost/python/back_reference.hpp	/^class is_back_reference<back_reference<T> >$/;"	c	namespace:boost::python
is_back_reference_test	/usr/include/boost/python/back_reference.hpp	/^  no_back_reference_t is_back_reference_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
is_back_reference_test	/usr/include/boost/python/back_reference.hpp	/^  yes_back_reference_t is_back_reference_test(boost::type< back_reference<T> >);$/;"	p	namespace:boost::python::detail	signature:(boost::type< back_reference<T> >)
is_borrowed	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed$/;"	s	namespace:boost::python::detail
is_borrowed	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed<borrowed<T> >$/;"	s	namespace:boost::python::detail
is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^class is_borrowed_ptr$/;"	c	namespace:boost::python::detail
is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr$/;"	s	namespace:boost::python::detail
is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<T*>$/;"	s	namespace:boost::python::detail	inherits:is_borrowed
is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T> const volatile*>$/;"	s	namespace:boost::python::detail
is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T> const*>$/;"	s	namespace:boost::python::detail
is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T> volatile*>$/;"	s	namespace:boost::python::detail
is_borrowed_ptr	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^struct is_borrowed_ptr<borrowed<T>*>$/;"	s	namespace:boost::python::detail
is_borrowed_ptr_test	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^no_borrowed_ptr_t is_borrowed_ptr_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
is_borrowed_ptr_test	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^yes_borrowed_ptr_t is_borrowed_ptr_test(borrowed<T> const volatile*);$/;"	p	namespace:boost::python::detail	signature:(borrowed<T> const volatile*)
is_borrowed_ptr_test1	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^is_borrowed_ptr_test1(boost::type<T>);$/;"	p	namespace:boost::python::detail	signature:(boost::type<T>)
is_c_array	/usr/include/boost/python/numeric.hpp	/^      bool is_c_array() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
is_data_member_pointer	/usr/include/boost/python/class.hpp	/^  struct is_data_member_pointer$/;"	s	namespace:boost::python::detail	inherits:mpl::and_
is_derived	/usr/include/boost/python/object_core.hpp	/^  struct is_derived$/;"	s	namespace:boost::python::api	inherits:is_convertible
is_derived	/usr/include/boost/python/object_core.hpp	/^  struct is_derived$/;"	s	namespace:boost::python::api	inherits:mpl::bool_
is_derived_impl	/usr/include/boost/python/object_core.hpp	/^  struct is_derived_impl$/;"	s	namespace:boost::python::api
is_detached	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        is_detached() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
is_handle	/usr/include/boost/python/handle.hpp	/^class is_handle$/;"	c	namespace:boost::python
is_handle	/usr/include/boost/python/handle.hpp	/^class is_handle<handle<T> >$/;"	c	namespace:boost::python
is_handle_test	/usr/include/boost/python/handle.hpp	/^  no_handle_t is_handle_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
is_handle_test	/usr/include/boost/python/handle.hpp	/^  yes_handle_t is_handle_test(boost::type< handle<T> >);$/;"	p	namespace:boost::python::detail	signature:(boost::type< handle<T> >)
is_keywords	/usr/include/boost/python/args.hpp	/^  struct is_keywords$/;"	s	namespace:boost::python::detail
is_keywords	/usr/include/boost/python/args.hpp	/^  struct is_keywords<keywords<nkeywords> >$/;"	s	namespace:boost::python::detail
is_keywords_test	/usr/include/boost/python/args.hpp	/^  no_keywords_t is_keywords_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
is_keywords_test	/usr/include/boost/python/args.hpp	/^  yes_keywords_t is_keywords_test(void (*)(keywords<nkeywords> const&));$/;"	p	namespace:boost::python::detail	signature:(void (*)(keywords<nkeywords> const&))
is_keywords_test	/usr/include/boost/python/args.hpp	/^  yes_keywords_t is_keywords_test(void (*)(keywords<nkeywords>&));$/;"	p	namespace:boost::python::detail	signature:(void (*)(keywords<nkeywords>&))
is_list_arg	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct is_list_arg$/;"	s	namespace:boost::python::detail
is_list_arg	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct is_list_arg<mpl::void_>$/;"	s	namespace:boost::python::detail
is_noncopyable	/usr/include/boost/python/object/class_metadata.hpp	/^    > is_noncopyable;$/;"	t	struct:boost::python::objects::class_metadata	access:public
is_none	/usr/include/boost/python/object_core.hpp	/^      inline bool is_none() const;$/;"	p	struct:boost::python::api::object_base	access:public	signature:() const
is_none	/usr/include/boost/python/object_core.hpp	/^inline bool api::object_base::is_none() const$/;"	f	class:boost::python::api::object_base	signature:() const
is_not_wrapper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  typedef char (&is_not_wrapper)[2];$/;"	t	namespace:boost::python::detail
is_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_object_manager$/;"	s	namespace:boost::python::converter	inherits:mpl::bool_
is_object_manager_help	/usr/include/boost/python/converter/object_manager.hpp	/^  struct is_object_manager_help$/;"	s	namespace:boost::python::converter::detail
is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U const volatile*, void const volatile*);$/;"	p	namespace:boost::python::converter::detail	signature:(U const volatile*, void const volatile*)
is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U const*, void const*);$/;"	p	namespace:boost::python::converter::detail	signature:(U const*, void const*)
is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U volatile*, void volatile*);$/;"	p	namespace:boost::python::converter::detail	signature:(U volatile*, void volatile*)
is_object_manager_helper	/usr/include/boost/python/converter/object_manager.hpp	/^  is_object_manager_helper(U*, void*);$/;"	p	namespace:boost::python::converter::detail	signature:(U*, void*)
is_object_operators	/usr/include/boost/python/object_operators.hpp	/^struct is_object_operators$/;"	s	namespace:boost::python::api
is_object_operators_helper	/usr/include/boost/python/object_operators.hpp	/^char is_object_operators_helper(object_operators<X> const*);$/;"	p	namespace:boost::python::api	signature:(object_operators<X> const*)
is_object_operators_helper	/usr/include/boost/python/object_operators.hpp	/^no_type is_object_operators_helper(...);$/;"	p	namespace:boost::python::api	signature:(....)
is_optional	/usr/include/boost/python/init.hpp	/^    struct is_optional {$/;"	s	namespace:boost::python::detail
is_other	/usr/include/boost/python/other.hpp	/^  class is_other$/;"	c	namespace:boost::python::detail
is_other	/usr/include/boost/python/other.hpp	/^  class is_other<other<T> >$/;"	c	namespace:boost::python::detail
is_pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^class is_pointer_wrapper$/;"	c	namespace:boost::python
is_pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^class is_pointer_wrapper$/;"	c	namespace:boost::python	inherits:mpl::false_
is_pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^class is_pointer_wrapper<pointer_wrapper<T> >$/;"	c	namespace:boost::python	inherits:mpl::true_
is_pointer_wrapper_test	/usr/include/boost/python/ptr.hpp	/^  no_pointer_wrapper_t is_pointer_wrapper_test(...);$/;"	p	namespace:boost::python::detail	signature:(....)
is_pointer_wrapper_test	/usr/include/boost/python/ptr.hpp	/^  yes_pointer_wrapper_t is_pointer_wrapper_test(boost::type< pointer_wrapper<T> >);$/;"	p	namespace:boost::python::detail	signature:(boost::type< pointer_wrapper<T> >)
is_ref_tester1	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline char BOOST_TT_DECL is_ref_tester1(...) { return 0; }$/;"	f	namespace:boost::python::detail	signature:(....)
is_ref_tester1	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^template< typename T > T&(* is_ref_tester1(type<T>) )(type<T>) { return 0; }$/;"	f	namespace:boost::python::detail	signature:(type<T>)
is_reference_to_keywords	/usr/include/boost/python/args.hpp	/^  class is_reference_to_keywords$/;"	c	namespace:boost::python::detail
is_reference_to_keywords	/usr/include/boost/python/args.hpp	/^  struct is_reference_to_keywords$/;"	s	namespace:boost::python::detail
is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager$/;"	s	namespace:boost::python::converter	inherits:mpl::false_
is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager$/;"	s	namespace:boost::python::converter	inherits:mpl::if_::type
is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T const volatile&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T const&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T volatile&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
is_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^struct is_reference_to_object_manager<T&>$/;"	s	namespace:boost::python::converter	inherits:is_object_manager
is_reference_to_object_manager_nonref	/usr/include/boost/python/converter/object_manager.hpp	/^  struct is_reference_to_object_manager_nonref$/;"	s	namespace:boost::python::converter::detail	inherits:mpl::false_
is_reference_to_object_manager_ref	/usr/include/boost/python/converter/object_manager.hpp	/^  struct is_reference_to_object_manager_ref$/;"	s	namespace:boost::python::converter::detail
is_reference_to_value	/usr/include/boost/python/object/forward.hpp	/^  struct is_reference_to_value$/;"	s	namespace:boost::python::objects::detail
is_reference_to_value_test	/usr/include/boost/python/object/forward.hpp	/^  no_reference_to_value_t is_reference_to_value_test(...);$/;"	p	namespace:boost::python::objects::detail	signature:(....)
is_reference_to_value_test	/usr/include/boost/python/object/forward.hpp	/^  yes_reference_to_value_t is_reference_to_value_test(boost::type< reference_to_value<T> >);$/;"	p	namespace:boost::python::objects::detail	signature:(boost::type< reference_to_value<T> >)
is_shared_ptr	/usr/include/boost/python/converter/registrations.hpp	/^    const bool is_shared_ptr;$/;"	m	struct:boost::python::converter::registration	access:public
is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal : mpl::false_$/;"	s	namespace:boost::python::detail	inherits:mpl::false_
is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal<T[n]>$/;"	s	namespace:boost::python::detail	inherits:is_same
is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal<char const[n]> : mpl::true_$/;"	s	namespace:boost::python::detail	inherits:mpl::true_
is_string_literal	/usr/include/boost/python/detail/string_literal.hpp	/^struct is_string_literal<char* const> : mpl::true_$/;"	s	namespace:boost::python::detail	inherits:mpl::true_
is_t_const	/usr/include/boost/python/to_python_value.hpp	/^      typedef boost::detail::indirect_traits::is_reference_to_const<T> is_t_const;$/;"	t	struct:boost::python::detail::object_manager_to_python_value	access:public
is_t_handle	/usr/include/boost/python/to_python_value.hpp	/^      typedef boost::mpl::bool_<is_handle<T>::value> is_t_handle;$/;"	t	struct:boost::python::detail::object_manager_to_python_value	access:public
is_wrapper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  struct is_wrapper$/;"	s	namespace:boost::python::detail	inherits:mpl::bool_
is_wrapper_helper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  char is_wrapper_helper(wrapper<T> const volatile*);$/;"	p	namespace:boost::python::detail	signature:(wrapper<T> const volatile*)
is_wrapper_helper	/usr/include/boost/python/detail/is_wrapper.hpp	/^  is_not_wrapper is_wrapper_helper(...);$/;"	p	namespace:boost::python::detail	signature:(....)
isaligned	/usr/include/boost/python/numeric.hpp	/^      bool isaligned() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
isalnum	/usr/include/boost/python/str.hpp	/^      bool isalnum() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
isalnum	/usr/include/boost/python/str.hpp	19;"	d
isalpha	/usr/include/boost/python/str.hpp	/^      bool isalpha() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
isalpha	/usr/include/boost/python/str.hpp	17;"	d
isbyteswapped	/usr/include/boost/python/numeric.hpp	/^      bool isbyteswapped() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
iscontiguous	/usr/include/boost/python/numeric.hpp	/^      bool iscontiguous() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
isdigit	/usr/include/boost/python/str.hpp	/^      bool isdigit() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
isdigit	/usr/include/boost/python/str.hpp	18;"	d
islower	/usr/include/boost/python/str.hpp	/^      bool islower() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
islower	/usr/include/boost/python/str.hpp	16;"	d
isspace	/usr/include/boost/python/str.hpp	/^      bool isspace() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
isspace	/usr/include/boost/python/str.hpp	15;"	d
istitle	/usr/include/boost/python/str.hpp	/^      bool istitle() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
isupper	/usr/include/boost/python/str.hpp	/^      bool isupper() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
isupper	/usr/include/boost/python/str.hpp	20;"	d
it_	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    boost::python::object it_;$/;"	m	struct:boost::python::objects::stl_input_iterator_impl	access:private
item_policies	/usr/include/boost/python/object_items.hpp	/^struct item_policies : const_item_policies$/;"	s	namespace:boost::python::api	inherits:const_item_policies
items	/usr/include/boost/python/dict.hpp	/^      list items() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
itemsize	/usr/include/boost/python/numeric.hpp	/^      long itemsize() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
iterator	/usr/include/boost/python/iterator.hpp	/^          typedef typename T::const_iterator iterator;$/;"	t	struct:boost::python::detail::iterators_impl::apply	access:public
iterator	/usr/include/boost/python/iterator.hpp	/^          typedef typename T::iterator iterator;$/;"	t	struct:boost::python::detail::iterators_impl::apply	access:public
iterator	/usr/include/boost/python/iterator.hpp	/^    iterator()$/;"	f	struct:boost::python::iterator	access:public	signature:()
iterator	/usr/include/boost/python/iterator.hpp	/^struct iterator : object$/;"	s	namespace:boost::python	inherits:object
iterator	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename std::vector<PyObject*>::iterator iterator;$/;"	t	class:boost::python::detail::proxy_group	access:public
iterator_range	/usr/include/boost/python/object/iterator.hpp	/^    iterator_range(object sequence, Iterator start, Iterator finish);$/;"	p	struct:boost::python::objects::iterator_range	access:public	signature:(object sequence, Iterator start, Iterator finish)
iterator_range	/usr/include/boost/python/object/iterator.hpp	/^inline iterator_range<NextPolicies,Iterator>::iterator_range($/;"	f	class:boost::python::objects::iterator_range	signature:( object sequence, Iterator start, Iterator finish)
iterator_range	/usr/include/boost/python/object/iterator.hpp	/^struct iterator_range$/;"	s	namespace:boost::python::objects
iterators	/usr/include/boost/python/iterator.hpp	/^struct iterators$/;"	s	namespace:boost::python	inherits:detail::iterators_impl::,apply
iterators_impl	/usr/include/boost/python/iterator.hpp	/^  struct iterators_impl$/;"	s	namespace:boost::python::detail
iterators_impl	/usr/include/boost/python/iterator.hpp	/^  struct iterators_impl<true>$/;"	s	namespace:boost::python::detail
iteritems	/usr/include/boost/python/dict.hpp	/^      object iteritems() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
iterkeys	/usr/include/boost/python/dict.hpp	/^      object iterkeys() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
itervalues	/usr/include/boost/python/dict.hpp	/^      object itervalues() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
join	/usr/include/boost/python/str.hpp	/^      str join(object_cref sequence) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sequence) const
join	/usr/include/boost/python/str.hpp	/^    str join(T const& sequence) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sequence) const
key	/usr/include/boost/python/detail/map_entry.hpp	/^    Key key;$/;"	m	struct:boost::python::detail::map_entry	access:public
key_t	/usr/include/boost/python/args.hpp	/^      typedef typename remove_cv<deref>::type key_t;$/;"	t	struct:boost::python::detail::is_reference_to_keywords	access:public
key_type	/usr/include/boost/python/object_attributes.hpp	/^    typedef char const* key_type;$/;"	t	struct:boost::python::api::const_attribute_policies	access:public
key_type	/usr/include/boost/python/object_attributes.hpp	/^    typedef object const key_type;$/;"	t	struct:boost::python::api::const_objattribute_policies	access:public
key_type	/usr/include/boost/python/object_items.hpp	/^    typedef object key_type;$/;"	t	struct:boost::python::api::const_item_policies	access:public
key_type	/usr/include/boost/python/object_slices.hpp	/^    typedef std::pair<handle<>, handle<> > key_type;$/;"	t	struct:boost::python::api::const_slice_policies	access:public
key_type	/usr/include/boost/python/proxy.hpp	/^    typedef typename Policies::key_type key_type;$/;"	t	class:boost::python::api::proxy	access:private
key_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::key_type key_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
key_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::value_type key_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
keys	/usr/include/boost/python/dict.hpp	/^      list keys() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
keyword	/usr/include/boost/python/args_fwd.hpp	/^      keyword(char const* name_=0)$/;"	f	struct:boost::python::detail::keyword	access:public	signature:(char const* name_=0)
keyword	/usr/include/boost/python/args_fwd.hpp	/^  struct keyword$/;"	s	namespace:boost::python::detail
keyword_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct keyword_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
keyword_range	/usr/include/boost/python/args_fwd.hpp	/^  typedef std::pair<keyword const*, keyword const*> keyword_range;$/;"	t	namespace:boost::python::detail
keywords	/usr/include/boost/python/args.hpp	/^      explicit keywords(char const *name)$/;"	f	struct:boost::python::detail::keywords	access:public	signature:(char const *name)
keywords	/usr/include/boost/python/args.hpp	/^  struct keywords : keywords_base<nkeywords>$/;"	s	namespace:boost::python::detail	inherits:keywords_base
keywords	/usr/include/boost/python/args.hpp	/^  struct keywords<1> : keywords_base<1>$/;"	s	namespace:boost::python::detail	inherits:keywords_base
keywords	/usr/include/boost/python/args_fwd.hpp	/^  struct keywords<0>$/;"	s	namespace:boost::python::detail
keywords	/usr/include/boost/python/detail/def_helper.hpp	/^      typename keyword_extract<all_t>::result_type keywords() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
keywords	/usr/include/boost/python/detail/defaults_gen.hpp	/^      detail::keyword_range const& keywords() const$/;"	f	class:boost::python::detail::overloads_base::detail	access:public	signature:() const
keywords	/usr/include/boost/python/init.hpp	/^    detail::keyword_range const& keywords() const$/;"	f	class:boost::python::init_base::detail	access:public	signature:() const
keywords_base	/usr/include/boost/python/args.hpp	/^  struct keywords_base$/;"	s	namespace:boost::python::detail
kwds_proxy	/usr/include/boost/python/object_core.hpp	/^  kwds_proxy(object o = object()) : call_proxy(o) {} $/;"	f	class:boost::python::detail::kwds_proxy	access:public	signature:(object o = object())
kwds_proxy	/usr/include/boost/python/object_core.hpp	/^class kwds_proxy : public call_proxy $/;"	c	namespace:boost::python::detail	inherits:call_proxy
len	/usr/include/boost/python/object.hpp	/^    inline ssize_t len(object const& obj)$/;"	f	namespace:boost::python	signature:(object const& obj)
links	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        links_t links;$/;"	m	class:boost::python::detail::proxy_links	access:private
links_t	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef std::map<Container*, proxy_group<Proxy> > links_t;$/;"	t	class:boost::python::detail::proxy_links	access:public
links_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef proxy_group<self_t> links_type;$/;"	t	class:boost::python::detail::container_element	access:public
list	/usr/include/boost/python/list.hpp	/^    explicit list(T const& sequence)$/;"	f	class:boost::python::list	access:public	signature:(T const& sequence)
list	/usr/include/boost/python/list.hpp	/^    list() {} \/\/ new list$/;"	f	class:boost::python::list	access:public	signature:()
list	/usr/include/boost/python/list.hpp	/^class list : public detail::list_base$/;"	c	namespace:boost::python	inherits:detail::list_base
list_base	/usr/include/boost/python/list.hpp	/^      explicit list_base(object_cref sequence); \/\/ new list initialized from sequence's items$/;"	p	struct:boost::python::detail::list_base	access:protected	signature:(object_cref sequence)
list_base	/usr/include/boost/python/list.hpp	/^      list_base(); \/\/ new list$/;"	p	struct:boost::python::detail::list_base	access:protected	signature:()
list_base	/usr/include/boost/python/list.hpp	/^  struct BOOST_PYTHON_DECL list_base : object$/;"	s	namespace:boost::python::detail	inherits:object
ljust	/usr/include/boost/python/str.hpp	/^      str ljust(object_cref width) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref width) const
ljust	/usr/include/boost/python/str.hpp	/^    str ljust(T const& width) const$/;"	f	class:boost::python::str	access:public	signature:(T const& width) const
long_	/usr/include/boost/python/long.hpp	/^    explicit long_(T const& rhs)$/;"	f	class:boost::python::long_	access:public	signature:(T const& rhs)
long_	/usr/include/boost/python/long.hpp	/^    explicit long_(T const& rhs, U const& base)$/;"	f	class:boost::python::long_	access:public	signature:(T const& rhs, U const& base)
long_	/usr/include/boost/python/long.hpp	/^    long_() {} \/\/ new long_$/;"	f	class:boost::python::long_	access:public	signature:()
long_	/usr/include/boost/python/long.hpp	/^class long_ : public detail::long_base$/;"	c	namespace:boost::python	inherits:detail::long_base
long_base	/usr/include/boost/python/long.hpp	/^      explicit long_base(object_cref rhs);$/;"	p	struct:boost::python::detail::long_base	access:protected	signature:(object_cref rhs)
long_base	/usr/include/boost/python/long.hpp	/^      explicit long_base(object_cref rhs, object_cref base);$/;"	p	struct:boost::python::detail::long_base	access:protected	signature:(object_cref rhs, object_cref base)
long_base	/usr/include/boost/python/long.hpp	/^      long_base(); \/\/ new long_$/;"	p	struct:boost::python::detail::long_base	access:protected	signature:()
long_base	/usr/include/boost/python/long.hpp	/^  struct BOOST_PYTHON_DECL long_base : object$/;"	s	namespace:boost::python::detail	inherits:object
lookup	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL registration const& lookup(type_info);$/;"	p	namespace:boost::python::converter::registry	signature:(type_info)
lookup_shared_ptr	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL registration const& lookup_shared_ptr(type_info);$/;"	p	namespace:boost::python::converter::registry	signature:(type_info)
lower	/usr/include/boost/python/str.hpp	/^      str lower() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
lstrip	/usr/include/boost/python/str.hpp	/^      str lstrip() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
lvalue	/usr/include/boost/python/detail/signature.hpp	/^    bool lvalue;$/;"	m	struct:boost::python::detail::signature_element	access:public
lvalue_chain	/usr/include/boost/python/converter/registrations.hpp	/^    lvalue_from_python_chain* lvalue_chain;$/;"	m	struct:boost::python::converter::registration	access:public
lvalue_from_python_chain	/usr/include/boost/python/converter/registrations.hpp	/^struct lvalue_from_python_chain$/;"	s	namespace:boost::python::converter
lvalue_from_pytype	/usr/include/boost/python/lvalue_from_pytype.hpp	/^    lvalue_from_pytype()$/;"	f	struct:boost::python::lvalue_from_pytype	access:public	signature:()
lvalue_from_pytype	/usr/include/boost/python/lvalue_from_pytype.hpp	/^struct lvalue_from_pytype $/;"	s	namespace:boost::python
m_all	/usr/include/boost/python/detail/def_helper.hpp	/^      all_t m_all; $/;"	m	struct:boost::python::detail::def_helper	access:private
m_arg_names	/usr/include/boost/python/object/function.hpp	/^    object m_arg_names;$/;"	m	struct:boost::python::objects::function	access:private
m_base_type	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    base_id_t m_base_type;$/;"	m	struct:boost::python::detail::decorated_type_info	access:private
m_base_type	/usr/include/boost/python/type_id.hpp	/^    base_id_t m_base_type;$/;"	m	struct:boost::python::type_info	access:private
m_caller	/usr/include/boost/python/object/py_function.hpp	/^    Caller m_caller;$/;"	m	struct:boost::python::objects::caller_py_function_impl	access:private
m_caller	/usr/include/boost/python/object/py_function.hpp	/^    Caller m_caller;$/;"	m	struct:boost::python::objects::full_py_function_impl	access:private
m_caller	/usr/include/boost/python/object/py_function.hpp	/^    Caller m_caller;$/;"	m	struct:boost::python::objects::signature_py_function_impl	access:private
m_class_object	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject* m_class_object;$/;"	m	struct:boost::python::converter::registration	access:public
m_data	/usr/include/boost/python/converter/arg_from_python.hpp	/^    rvalue_from_python_data<result_type> m_data;$/;"	m	struct:boost::python::converter::arg_rvalue_from_python	access:private
m_data	/usr/include/boost/python/converter/return_from_python.hpp	/^      rvalue_from_python_data<T> m_data;$/;"	m	struct:boost::python::converter::detail::return_rvalue_from_python	access:private
m_data	/usr/include/boost/python/extract.hpp	/^      mutable rvalue_from_python_data<T> m_data;$/;"	m	struct:boost::python::converter::extract_rvalue	access:private
m_decoration	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    decoration m_decoration;$/;"	m	struct:boost::python::detail::decorated_type_info	access:private
m_doc	/usr/include/boost/python/detail/defaults_gen.hpp	/^      char const* m_doc;$/;"	m	struct:boost::python::detail::overloads_base	access:private
m_doc	/usr/include/boost/python/init.hpp	/^    char const* m_doc;$/;"	m	struct:boost::python::init_base	access:private
m_doc	/usr/include/boost/python/object/function.hpp	/^    object m_doc;$/;"	m	struct:boost::python::objects::function	access:private
m_finish	/usr/include/boost/python/object/iterator.hpp	/^    Iterator m_finish;$/;"	m	struct:boost::python::objects::iterator_range	access:public
m_fn	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^    NullaryFunction m_fn;$/;"	m	struct:boost::python::detail::nullary_function_adaptor	access:private
m_fn	/usr/include/boost/python/object/function.hpp	/^    py_function m_fn;$/;"	m	struct:boost::python::objects::function	access:private
m_get_finish	/usr/include/boost/python/object/iterator.hpp	/^      Accessor2 m_get_finish;$/;"	m	struct:boost::python::objects::detail::py_iter_	access:private
m_get_start	/usr/include/boost/python/object/iterator.hpp	/^      Accessor1 m_get_start;$/;"	m	struct:boost::python::objects::detail::py_iter_	access:private
m_held	/usr/include/boost/python/object/value_holder.hpp	/^    Held m_held;$/;"	m	struct:boost::python::objects::value_holder_back_reference	access:private
m_held	/usr/include/boost/python/object/value_holder.hpp	/^    Value m_held;$/;"	m	struct:boost::python::objects::value_holder	access:private
m_impl	/usr/include/boost/python/detail/exception_handler.hpp	/^    handler_function m_impl;$/;"	m	struct:boost::python::detail::exception_handler	access:private
m_impl	/usr/include/boost/python/object/py_function.hpp	/^    mutable std::auto_ptr<py_function_impl_base> m_impl;$/;"	m	struct:boost::python::objects::py_function	access:private
m_key	/usr/include/boost/python/proxy.hpp	/^    key_type m_key;$/;"	m	class:boost::python::api::proxy	access:private
m_keywords	/usr/include/boost/python/detail/defaults_gen.hpp	/^      detail::keyword_range m_keywords;$/;"	m	struct:boost::python::detail::overloads_base	access:private
m_keywords	/usr/include/boost/python/init.hpp	/^    detail::keyword_range m_keywords;$/;"	m	struct:boost::python::init_base	access:private
m_max_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned m_max_arity;$/;"	m	struct:boost::python::objects::full_py_function_impl	access:private
m_min_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned m_min_arity;$/;"	m	struct:boost::python::objects::full_py_function_impl	access:private
m_name	/usr/include/boost/python/object/function.hpp	/^    object m_name;$/;"	m	struct:boost::python::objects::function	access:private
m_namespace	/usr/include/boost/python/object/function.hpp	/^    object m_namespace;$/;"	m	struct:boost::python::objects::function	access:private
m_next	/usr/include/boost/python/detail/exception_handler.hpp	/^    exception_handler* m_next;$/;"	m	struct:boost::python::detail::exception_handler	access:private
m_next	/usr/include/boost/python/instance_holder.hpp	/^    instance_holder* m_next;$/;"	m	struct:boost::python::instance_holder	access:private
m_nil	/usr/include/boost/python/detail/def_helper.hpp	/^      not_specified m_nil; \/\/ for filling in not_specified slots$/;"	m	struct:boost::python::detail::def_helper	access:private
m_nkeyword_values	/usr/include/boost/python/object/function.hpp	/^    unsigned m_nkeyword_values;$/;"	m	struct:boost::python::objects::function	access:private
m_obj	/usr/include/boost/python/override.hpp	/^      mutable handle<> m_obj;$/;"	m	class:boost::python::detail::method_result	access:private
m_overloads	/usr/include/boost/python/object/function.hpp	/^    handle<function> m_overloads;$/;"	m	struct:boost::python::objects::function	access:private
m_p	/usr/include/boost/python/handle.hpp	/^    T* m_p;$/;"	m	class:boost::python::handle	access:private
m_p	/usr/include/boost/python/object/pointer_holder.hpp	/^    Pointer m_p;$/;"	m	struct:boost::python::objects::pointer_holder	access:private
m_p	/usr/include/boost/python/object/pointer_holder.hpp	/^    Pointer m_p;$/;"	m	struct:boost::python::objects::pointer_holder_back_reference	access:private
m_pmf	/usr/include/boost/python/pure_virtual.hpp	/^      PointerToMemberFunction m_pmf;$/;"	m	struct:boost::python::detail::pure_virtual_visitor	access:private
m_policies	/usr/include/boost/python/init.hpp	/^    CallPoliciesT m_policies;$/;"	m	class:boost::python::init_with_call_policies	access:private
m_previous_scope	/usr/include/boost/python/scope.hpp	/^    PyObject* m_previous_scope;$/;"	m	class:boost::python::scope	access:private
m_ptr	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      handle<> m_ptr;$/;"	m	struct:boost::python::converter::detail::arg_to_python_base	access:private
m_ptr	/usr/include/boost/python/object_core.hpp	/^      PyObject* m_ptr;$/;"	m	struct:boost::python::api::object_base	access:private
m_result	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typename python::detail::referent_storage<T>::type m_result;$/;"	m	struct:boost::python::converter::pointer_cref_arg_from_python	access:private
m_result	/usr/include/boost/python/converter/arg_from_python.hpp	/^    void* m_result;$/;"	m	struct:boost::python::converter::arg_lvalue_from_python_base	access:private
m_result	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    typename python::detail::referent_storage<Ref>::type m_result;$/;"	m	struct:boost::python::converter::object_manager_ref_arg_from_python	access:private
m_result	/usr/include/boost/python/extract.hpp	/^      void* m_result;$/;"	m	struct:boost::python::converter::extract_pointer	access:private
m_result	/usr/include/boost/python/extract.hpp	/^      void* m_result;$/;"	m	struct:boost::python::converter::extract_reference	access:private
m_self	/usr/include/boost/python/detail/wrapper_base.hpp	/^      PyObject* m_self;$/;"	m	class:boost::python::detail::wrapper_base	access:private
m_self	/usr/include/boost/python/make_constructor.hpp	/^      PyObject* m_self;$/;"	m	struct:boost::python::detail::install_holder	access:private
m_sequence	/usr/include/boost/python/object/iterator.hpp	/^    object m_sequence; \/\/ Keeps the sequence alive while iterating.$/;"	m	struct:boost::python::objects::iterator_range	access:public
m_source	/usr/include/boost/python/arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::arg_from_python	access:private
m_source	/usr/include/boost/python/back_reference.hpp	/^    source_t m_source;$/;"	m	struct:boost::python::back_reference	access:private
m_source	/usr/include/boost/python/converter/arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::converter::arg_rvalue_from_python	access:private
m_source	/usr/include/boost/python/converter/arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::converter::back_reference_arg_from_python	access:private
m_source	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    PyObject* m_source;$/;"	m	struct:boost::python::converter::object_manager_value_arg_from_python	access:private
m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_object_manager	access:private
m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_pointer	access:private
m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_reference	access:private
m_source	/usr/include/boost/python/extract.hpp	/^      PyObject* m_source;$/;"	m	struct:boost::python::converter::extract_rvalue	access:private
m_src	/usr/include/boost/python/converter/arg_to_python.hpp	/^      T const& m_src;$/;"	m	struct:boost::python::converter::detail::object_manager_arg_to_python	access:private
m_start	/usr/include/boost/python/object/iterator.hpp	/^    Iterator m_start;$/;"	m	struct:boost::python::objects::iterator_range	access:public
m_target	/usr/include/boost/python/object_core.hpp	/^    object m_target; $/;"	m	class:boost::python::detail::call_proxy	access:private
m_target	/usr/include/boost/python/proxy.hpp	/^    object m_target;$/;"	m	class:boost::python::api::proxy	access:private
m_to_python	/usr/include/boost/python/converter/registrations.hpp	/^    to_python_function_t m_to_python;$/;"	m	struct:boost::python::converter::registration	access:public
m_to_python_target_type	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* (*m_to_python_target_type)();$/;"	m	struct:boost::python::converter::registration	access:public
m_value	/usr/include/boost/python/back_reference.hpp	/^    T m_value;$/;"	m	struct:boost::python::back_reference	access:private
m_value	/usr/include/boost/python/object/forward.hpp	/^    reference m_value;$/;"	m	struct:boost::python::objects::reference_to_value	access:private
m_which	/usr/include/boost/python/data_members.hpp	/^      Data *m_which;$/;"	m	struct:boost::python::detail::datum	access:private
m_which	/usr/include/boost/python/data_members.hpp	/^      Data Class::*m_which;$/;"	m	class:boost::python::detail::member::Class	access:private
make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , Keywords const& kw , Signature const& sig )
make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , KeywordsOrSignature const& keywords_or_signature)
make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor(F f)$/;"	f	namespace:boost::python	signature:(F f)
make_constructor	/usr/include/boost/python/make_constructor.hpp	/^object make_constructor(F f, CallPolicies const& policies)$/;"	f	namespace:boost::python	signature:(F f, CallPolicies const& policies)
make_constructor_aux	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& )
make_constructor_aux	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& , detail::keyword_range const& kw , NumKeywords )
make_constructor_dispatch	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_dispatch(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)
make_constructor_dispatch	/usr/include/boost/python/make_constructor.hpp	/^  object make_constructor_dispatch(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)
make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, D B::*pm_, mpl::false_, char*, mpl::true_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, D B::*pm_, mpl::false_, char*, mpl::true_)
make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, D B::*pm_, mpl::false_, int*, mpl::true_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, D B::*pm_, mpl::false_, int*, mpl::true_)
make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, F const& f, mpl::false_, void*, mpl::false_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, F const& f, mpl::false_, void*, mpl::false_)
make_fn_impl	/usr/include/boost/python/class.hpp	/^    object make_fn_impl(T*, F const& x, mpl::true_, void*, mpl::false_)$/;"	f	class:boost::python::class_	access:private	signature:(T*, F const& x, mpl::true_, void*, mpl::false_)
make_function	/usr/include/boost/python/make_function.hpp	/^object make_function($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , Keywords const& kw , Signature const& sig )
make_function	/usr/include/boost/python/make_function.hpp	/^object make_function($/;"	f	namespace:boost::python	signature:( F f , CallPolicies const& policies , KeywordsOrSignature const& keywords_or_signature)
make_function	/usr/include/boost/python/make_function.hpp	/^object make_function(F f)$/;"	f	namespace:boost::python	signature:(F f)
make_function	/usr/include/boost/python/make_function.hpp	/^object make_function(F f, CallPolicies const& policies)$/;"	f	namespace:boost::python	signature:(F f, CallPolicies const& policies)
make_function1	/usr/include/boost/python/def.hpp	/^  object make_function1(T fn, ...) { return make_function(fn); }$/;"	f	namespace:boost::python::detail	signature:(T fn, ...)
make_function1	/usr/include/boost/python/def.hpp	/^  object make_function1(object const& x, object const*) { return x; }$/;"	f	namespace:boost::python::detail	signature:(object const& x, object const*)
make_function_aux	/usr/include/boost/python/make_function.hpp	/^  object make_function_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& )
make_function_aux	/usr/include/boost/python/make_function.hpp	/^  object make_function_aux($/;"	f	namespace:boost::python::detail	signature:( F f , CallPolicies const& p , Sig const& , detail::keyword_range const& kw , NumKeywords )
make_function_dispatch	/usr/include/boost/python/make_function.hpp	/^  object make_function_dispatch(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Keywords const& kw, mpl::true_)
make_function_dispatch	/usr/include/boost/python/make_function.hpp	/^  object make_function_dispatch(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)$/;"	f	namespace:boost::python::detail	signature:(F f, CallPolicies const& policies, Signature const& sig, mpl::false_)
make_function_handle	/usr/include/boost/python/object/function_handle.hpp	/^handle<> make_function_handle(F f)$/;"	f	namespace:boost::python::objects	signature:(F f)
make_getter	/usr/include/boost/python/class.hpp	/^    object make_getter(F f)$/;"	f	class:boost::python::class_	access:private	signature:(F f)
make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D C::*pm, Policies const& policies, mpl::true_, int)$/;"	f	namespace:boost::python::detail	signature:(D C::*pm, Policies const& policies, mpl::true_, int)
make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D C::*pm, not_specified, mpl::true_, long)$/;"	f	namespace:boost::python::detail	signature:(D C::*pm, not_specified, mpl::true_, long)
make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D& d, P& p, mpl::false_, ...)$/;"	f	namespace:boost::python::detail	signature:(D& d, P& p, mpl::false_, ...)
make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D& d, P& p, mpl::false_, ...);$/;"	p	namespace:boost::python::detail	signature:(D& d, P& p, mpl::false_, ...)
make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D* d, Policies const& policies, mpl::false_, int)$/;"	f	namespace:boost::python::detail	signature:(D* d, Policies const& policies, mpl::false_, int)
make_getter	/usr/include/boost/python/data_members.hpp	/^  inline object make_getter(D* d, not_specified, mpl::false_, long)$/;"	f	namespace:boost::python::detail	signature:(D* d, not_specified, mpl::false_, long)
make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D const& d)$/;"	f	namespace:boost::python	signature:(D const& d)
make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D const& d, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D const& d, Policies const& policies)
make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D& d, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D& d, Policies const& policies)
make_getter	/usr/include/boost/python/data_members.hpp	/^inline object make_getter(D& x)$/;"	f	namespace:boost::python	signature:(D& x)
make_instance	/usr/include/boost/python/object/make_instance.hpp	/^struct make_instance$/;"	s	namespace:boost::python::objects	inherits:make_instance_impl
make_instance_impl	/usr/include/boost/python/object/make_instance.hpp	/^struct make_instance_impl$/;"	s	namespace:boost::python::objects
make_instance_reduce_function	/usr/include/boost/python/object/pickle_support.hpp	/^BOOST_PYTHON_DECL object const& make_instance_reduce_function();$/;"	p	namespace:boost::python	signature:()
make_iterator	/usr/include/boost/python/iterator.hpp	/^  inline object make_iterator($/;"	f	namespace:boost::python::detail	signature:( Accessor1 get_start , Accessor2 get_finish , NextPolicies next_policies , Target&(*)() )
make_iterator_function	/usr/include/boost/python/object/iterator.hpp	/^  inline object make_iterator_function($/;"	f	namespace:boost::python::objects::detail	signature:( Accessor1 const& get_start , Accessor2 const& get_finish , NextPolicies const& , Iterator const& (*)() , boost::type<Target>* , int )
make_iterator_function	/usr/include/boost/python/object/iterator.hpp	/^  inline object make_iterator_function($/;"	f	namespace:boost::python::objects::detail	signature:( Accessor1 const& get_start , Accessor2 const& get_finish , NextPolicies const& next_policies , Iterator& (*)() , boost::type<Target>* , ...)
make_iterator_function	/usr/include/boost/python/object/iterator.hpp	/^inline object make_iterator_function($/;"	f	namespace:boost::python::objects	signature:( Accessor1 const& get_start , Accessor2 const& get_finish , NextPolicies const& next_policies , boost::type<Target>* = 0 )
make_keyword_range_constructor	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^object make_keyword_range_constructor($/;"	f	namespace:boost::python::detail	signature:( CallPolicies const& policies , detail::keyword_range const& kw , Holder* = 0 , ArgList* = 0, Arity* = 0)
make_keyword_range_function	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^object make_keyword_range_function($/;"	f	namespace:boost::python::detail	signature:( F f , Policies const& policies , keyword_range const& kw , Signature const& sig)
make_keyword_range_function	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^object make_keyword_range_function($/;"	f	namespace:boost::python::detail	signature:( F f , Policies const& policies , keyword_range const& kw)
make_method_static	/usr/include/boost/python/object/class.hpp	/^    void make_method_static(const char *method_name);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(const char *method_name)
make_nurse_and_patient	/usr/include/boost/python/object/life_support.hpp	/^BOOST_PYTHON_DECL PyObject* make_nurse_and_patient(PyObject* nurse, PyObject* patient);$/;"	p	namespace:boost::python::objects	signature:(PyObject* nurse, PyObject* patient)
make_owning_holder	/usr/include/boost/python/to_python_indirect.hpp	/^  struct make_owning_holder$/;"	s	namespace:boost::python::detail
make_ptr	/usr/include/boost/python/object_operators.hpp	/^template <class X> X* make_ptr();$/;"	p	namespace:boost::python::api	signature:()
make_ptr_instance	/usr/include/boost/python/object/make_ptr_instance.hpp	/^struct make_ptr_instance$/;"	s	namespace:boost::python::objects	inherits:make_instance_impl
make_raw_function	/usr/include/boost/python/raw_function.hpp	/^  object BOOST_PYTHON_DECL make_raw_function(objects::py_function);$/;"	p	namespace:boost::python::detail	signature:(objects::py_function)
make_reference_holder	/usr/include/boost/python/to_python_indirect.hpp	/^  struct make_reference_holder$/;"	s	namespace:boost::python::detail
make_setter	/usr/include/boost/python/class.hpp	/^    object make_setter(F f)$/;"	f	class:boost::python::class_	access:private	signature:(F f)
make_setter	/usr/include/boost/python/data_members.hpp	/^  inline object make_setter(D C::*pm, Policies const& policies, mpl::true_, int)$/;"	f	namespace:boost::python::detail	signature:(D C::*pm, Policies const& policies, mpl::true_, int)
make_setter	/usr/include/boost/python/data_members.hpp	/^  inline object make_setter(D& x, Policies const& policies, mpl::false_, ...)$/;"	f	namespace:boost::python::detail	signature:(D& x, Policies const& policies, mpl::false_, ...)
make_setter	/usr/include/boost/python/data_members.hpp	/^  inline object make_setter(D* p, Policies const& policies, mpl::false_, int)$/;"	f	namespace:boost::python::detail	signature:(D* p, Policies const& policies, mpl::false_, int)
make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D const& x)$/;"	f	namespace:boost::python	signature:(D const& x)
make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D const& x, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D const& x, Policies const& policies)
make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D& x)$/;"	f	namespace:boost::python	signature:(D& x)
make_setter	/usr/include/boost/python/data_members.hpp	/^inline object make_setter(D& x, Policies const& policies)$/;"	f	namespace:boost::python	signature:(D& x, Policies const& policies)
make_tuple	/usr/include/boost/python/tuple.hpp	/^inline tuple make_tuple() { return tuple(); }$/;"	f	namespace:boost::python	signature:()
manage_new_object	/usr/include/boost/python/manage_new_object.hpp	/^struct manage_new_object$/;"	s	namespace:boost::python
manage_new_object_requires_a_pointer_return_type	/usr/include/boost/python/manage_new_object.hpp	/^  struct manage_new_object_requires_a_pointer_return_type$/;"	s	namespace:boost::python::detail
manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(T* p, ...)$/;"	f	namespace:boost::python::detail	signature:(T* p, ...)
manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(detail::borrowed<T>* p, long)$/;"	f	namespace:boost::python::detail	signature:(detail::borrowed<T>* p, long)
manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(detail::borrowed<null_ok<T> >* p, int)$/;"	f	namespace:boost::python::detail	signature:(detail::borrowed<null_ok<T> >* p, int)
manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(null_ok<T>* p, long)$/;"	f	namespace:boost::python::detail	signature:(null_ok<T>* p, long)
manage_ptr	/usr/include/boost/python/handle.hpp	/^  inline T* manage_ptr(null_ok<detail::borrowed<T> >* p, int)$/;"	f	namespace:boost::python::detail	signature:(null_ok<detail::borrowed<T> >* p, int)
map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^    map_entry() {}$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:()
map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^    map_entry(Key k) : key(k), value() {}$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:(Key k)
map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^    map_entry(Key k, Value v) : key(k), value(v) {}$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:(Key k, Value v)
map_entry	/usr/include/boost/python/detail/map_entry.hpp	/^struct map_entry$/;"	s	namespace:boost::python::detail
map_indexing_suite	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^    class map_indexing_suite$/;"	c	namespace:boost::python	inherits:indexing_suite
match_t	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename mpl::apply1<Predicate, typename add_reference<head_type>::type>::type match_t;$/;"	t	struct:boost::python::detail::tuple_extract_base_select	access:public
max_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned max_arity() const$/;"	f	struct:boost::python::objects::py_function	access:public	signature:() const
max_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned max_arity() const$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:() const
max_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned max_arity() const;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:() const
maybe_register_callback_class	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_callback_class(T2*, mpl::true_)$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, mpl::true_)
maybe_register_callback_class	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_callback_class(void*, mpl::false_) {}$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*, mpl::false_)
maybe_register_class_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_class_to_python(T2*, mpl::false_)$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, mpl::false_)
maybe_register_class_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_class_to_python(void*, mpl::true_) {}$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*, mpl::true_)
maybe_register_pointer_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_pointer_to_python(...) {}$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(....)
maybe_register_pointer_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_pointer_to_python(T2*, mpl::false_*, mpl::false_*)$/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, mpl::false_*, mpl::false_*)
maybe_register_pointer_to_python	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void maybe_register_pointer_to_python(void*,void*,mpl::true_*) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*,void*,mpl::true_*)
member	/usr/include/boost/python/data_members.hpp	/^      member(Data Class::*which) : m_which(which) {}$/;"	f	struct:boost::python::detail::member	access:public	signature:(Data Class::*which)
member	/usr/include/boost/python/data_members.hpp	/^  struct member$/;"	s	namespace:boost::python::detail
member_function_ptr	/usr/include/boost/python/detail/referent_storage.hpp	/^typedef int (alignment_dummy::*member_function_ptr)();$/;"	t	namespace:boost::python::detail
member_ptr	/usr/include/boost/python/detail/referent_storage.hpp	/^typedef int (alignment_dummy::*member_ptr);$/;"	t	namespace:boost::python::detail
metadata	/usr/include/boost/python/class.hpp	/^    typedef typename objects::class_metadata<W,X1,X2,X3> metadata;$/;"	t	class:boost::python::class_	access:public
method_result	/usr/include/boost/python/override.hpp	/^      explicit method_result(PyObject* x)$/;"	f	class:boost::python::detail::method_result	access:private	signature:(PyObject* x)
method_result	/usr/include/boost/python/override.hpp	/^  class method_result$/;"	c	namespace:boost::python::detail
min_arity	/usr/include/boost/python/object/py_function.hpp	/^    unsigned min_arity() const$/;"	f	struct:boost::python::objects::py_function	access:public	signature:() const
min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const = 0;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:() const
min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:() const
min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:() const
min_arity	/usr/include/boost/python/object/py_function.hpp	/^    virtual unsigned min_arity() const$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:() const
missing_pickle_suite_function_or_incorrect_signature	/usr/include/boost/python/object/pickle_support.hpp	/^  struct missing_pickle_suite_function_or_incorrect_signature {};$/;"	s	namespace:boost::python::error_messages
more_keywords_than_function_arguments	/usr/include/boost/python/args_fwd.hpp	/^    struct more_keywords_than_function_arguments$/;"	s	namespace:boost::python::detail::error
more_keywords_than_init_arguments	/usr/include/boost/python/init.hpp	/^    struct more_keywords_than_init_arguments$/;"	s	namespace:boost::python::detail::error
most_derived	/usr/include/boost/python/signature.hpp	/^struct most_derived$/;"	s	namespace:boost::python::detail
msvc70_aux	/usr/include/boost/python/detail/if_else.hpp	/^namespace msvc70_aux {$/;"	n	namespace:boost::python::detail
msvc_typeid	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo msvc_typeid(boost::type<T>*)$/;"	f	namespace:boost::python::detail	signature:(boost::type<T>*)
msvc_typeid	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo msvc_typeid<void>(boost::type<void>*)$/;"	f	namespace:boost::python::detail	signature:(boost::type<void>*)
multiple_functions_passed_to_def	/usr/include/boost/python/def.hpp	/^    template <> struct multiple_functions_passed_to_def<false> { typedef char type; };$/;"	s	namespace:boost::python::detail::error
must_be_derived_class_member	/usr/include/boost/python/class.hpp	/^        must_be_derived_class_member(Default const&)$/;"	f	struct:boost::python::detail::error::virtual_function_default	access:public	signature:(Default const&)
must_be_derived_from_pickle_suite	/usr/include/boost/python/object/pickle_support.hpp	/^  inline void must_be_derived_from_pickle_suite(pickle_suite const&) {}$/;"	f	namespace:boost::python::error_messages	signature:(pickle_suite const&)
n_arguments	/usr/include/boost/python/init.hpp	/^    typedef mpl::size<signature> n_arguments;$/;"	t	class:boost::python::init	access:public
n_arguments	/usr/include/boost/python/init.hpp	/^    typedef typename InitT::n_arguments n_arguments;$/;"	t	class:boost::python::init_with_call_policies	access:public
n_defaults	/usr/include/boost/python/init.hpp	/^    typedef mpl::size<optional_args> n_defaults;$/;"	t	class:boost::python::init	access:public
n_defaults	/usr/include/boost/python/init.hpp	/^    typedef typename InitT::n_defaults n_defaults;$/;"	t	class:boost::python::init_with_call_policies	access:public
name	/usr/include/boost/python/args_fwd.hpp	/^      char const* name;$/;"	m	struct:boost::python::detail::keyword	access:public
name	/usr/include/boost/python/object/function.hpp	/^    object const& name() const;$/;"	p	struct:boost::python::objects::function	access:public	signature:() const
name	/usr/include/boost/python/object/function.hpp	/^inline object const& function::name() const$/;"	f	class:boost::python::objects::function	signature:() const
name	/usr/include/boost/python/type_id.hpp	/^    char const* name() const;$/;"	p	struct:boost::python::type_info	access:public	signature:() const
name	/usr/include/boost/python/type_id.hpp	/^inline char const* type_info::name() const$/;"	f	class:boost::python::type_info	signature:() const
name_space_def	/usr/include/boost/python/detail/defaults_def.hpp	/^  static void name_space_def($/;"	f	namespace:boost::python::detail	signature:( NameSpaceT& name_space , char const* name , Func f , keyword_range const& kw , CallPolicies const& policies , char const* doc , module* )
name_space_def	/usr/include/boost/python/detail/defaults_def.hpp	/^  static void name_space_def($/;"	f	namespace:boost::python::detail	signature:( NameSpaceT& name_space , char const* name , Func f , keyword_range const& kw , CallPolicies const& policies , char const* doc , objects::class_base* )
name_space_def	/usr/include/boost/python/detail/defaults_def.hpp	/^  static void name_space_def($/;"	f	namespace:boost::python::detail	signature:( object& name_space , char const* name , Func f , keyword_range const& kw , CallPolicies const& policies , char const* doc , ... )
nelements	/usr/include/boost/python/numeric.hpp	/^      long nelements() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
never_true	/usr/include/boost/python/detail/if_else.hpp	/^struct never_true$/;"	s	namespace:boost::python::detail::msvc70_aux
new_	/usr/include/boost/python/numeric.hpp	/^      array new_(object type) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object type) const
new_	/usr/include/boost/python/numeric.hpp	/^    array new_(Type const& type_) const$/;"	f	class:boost::python::numeric::array	access:public	signature:(Type const& type_) const
new_non_null_reference	/usr/include/boost/python/detail/raw_pyobject.hpp	/^typedef new_non_null_reference_t* new_non_null_reference;$/;"	t	namespace:boost::python::detail
new_reference	/usr/include/boost/python/detail/raw_pyobject.hpp	/^typedef new_reference_t* new_reference;$/;"	t	namespace:boost::python::detail
next	/usr/include/boost/python/converter/registrations.hpp	/^    lvalue_from_python_chain* next;$/;"	m	struct:boost::python::converter::lvalue_from_python_chain	access:public
next	/usr/include/boost/python/converter/registrations.hpp	/^    rvalue_from_python_chain* next;$/;"	m	struct:boost::python::converter::rvalue_from_python_chain	access:public
next	/usr/include/boost/python/detail/def_helper.hpp	/^          typedef tuple_extract<typename Tuple::tail_type, Predicate> next;$/;"	t	struct:boost::python::detail::tuple_extract_impl::apply	access:public
next	/usr/include/boost/python/instance_holder.hpp	/^    instance_holder* next() const;$/;"	p	struct:boost::python::instance_holder	access:public	signature:() const
next	/usr/include/boost/python/instance_holder.hpp	/^inline instance_holder* instance_holder::next() const$/;"	f	class:boost::python::instance_holder	signature:() const
next	/usr/include/boost/python/object/iterator.hpp	/^    struct next$/;"	s	struct:boost::python::objects::iterator_range	access:public
next_fn	/usr/include/boost/python/object/iterator.hpp	/^    >::type next_fn;$/;"	t	struct:boost::python::objects::iterator_range	access:public
next_fn	/usr/include/boost/python/object/iterator.hpp	/^    typedef next next_fn;$/;"	t	struct:boost::python::objects::iterator_range	access:public
next_ptr	/usr/include/boost/python/object/iterator.hpp	/^    struct next_ptr$/;"	s	struct:boost::python::objects::iterator_range	access:public
no	/usr/include/boost/python/object_core.hpp	/^      typedef char (&no)[2];$/;"	t	struct:boost::python::api::is_derived_impl	access:public
no_back_reference_t	/usr/include/boost/python/back_reference.hpp	/^  typedef char (&no_back_reference_t)[2];$/;"	t	namespace:boost::python::detail
no_borrowed_ptr_t	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^typedef char (&no_borrowed_ptr_t)[2];$/;"	t	namespace:boost::python::detail
no_convertible	/usr/include/boost/python/detail/convertible.hpp	/^typedef int* no_convertible;$/;"	t	namespace:boost::python::detail
no_handle_t	/usr/include/boost/python/handle.hpp	/^  typedef char (&no_handle_t)[2];$/;"	t	namespace:boost::python::detail
no_init	/usr/include/boost/python/class.hpp	/^enum no_init_t { no_init };$/;"	e	enum:boost::python::no_init_t
no_init_t	/usr/include/boost/python/class.hpp	/^enum no_init_t { no_init };$/;"	g	namespace:boost::python
no_keywords_t	/usr/include/boost/python/args.hpp	/^  typedef char (&no_keywords_t)[2];$/;"	t	namespace:boost::python::detail
no_pointer_wrapper_t	/usr/include/boost/python/ptr.hpp	/^  typedef char (&no_pointer_wrapper_t)[2];$/;"	t	namespace:boost::python::detail
no_proxy	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        no_proxy;$/;"	t	class:boost::python::indexing_suite	access:private
no_proxy_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct no_proxy_helper$/;"	s	namespace:boost::python::detail
no_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^  typedef char (&no_reference_to_object_manager)[2];$/;"	t	namespace:boost::python::converter::detail
no_reference_to_value_t	/usr/include/boost/python/object/forward.hpp	/^  typedef char (&no_reference_to_value_t)[2];$/;"	t	namespace:boost::python::objects::detail
no_slice_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct no_slice_helper$/;"	s	namespace:boost::python::detail
no_type	/usr/include/boost/python/object_operators.hpp	/^typedef char (&no_type)[2];$/;"	t	namespace:boost::python::api
non_polymorphic_id_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct non_polymorphic_id_generator$/;"	s	namespace:boost::python::objects
non_void_return_type	/usr/include/boost/python/detail/defaults_gen.hpp	/^      typedef typename OverloadsT::non_void_return_type   non_void_return_type;$/;"	t	struct:boost::python::detail::overloads_proxy	access:public
none	/usr/include/boost/python/detail/none.hpp	/^inline PyObject* none() { Py_INCREF(Py_None); return Py_None; }$/;"	f	namespace:boost::python::detail	signature:()
nonzero	/usr/include/boost/python/numeric.hpp	/^      object nonzero() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
normalize	/usr/include/boost/python/lvalue_from_pytype.hpp	/^  normalize(T(*)(U), Extractor* = 0)$/;"	f	namespace:boost::python::detail	signature:(T()U), Extractor* = 0)
normalized_extractor	/usr/include/boost/python/lvalue_from_pytype.hpp	/^  struct normalized_extractor$/;"	s	namespace:boost::python::detail
not_a_derived_class_member	/usr/include/boost/python/class.hpp	/^    void not_a_derived_class_member(Default) {}$/;"	f	namespace:boost::python::detail::error	signature:(Default)
not_specified	/usr/include/boost/python/detail/not_specified.hpp	/^  struct not_specified {};$/;"	s	namespace:boost::python::detail
null_ptr_owner	/usr/include/boost/python/converter/arg_from_python.hpp	/^  struct null_ptr_owner$/;"	s	namespace:boost::python::converter::detail
null_ptr_reference	/usr/include/boost/python/converter/arg_from_python.hpp	/^  inline U& null_ptr_reference(U&(*)())$/;"	f	namespace:boost::python::converter::detail	signature:(U&(*)())
nullary_function_adaptor	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^    nullary_function_adaptor(NullaryFunction fn)$/;"	f	struct:boost::python::detail::nullary_function_adaptor	access:public	signature:(NullaryFunction fn)
nullary_function_adaptor	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^struct nullary_function_adaptor$/;"	s	namespace:boost::python::detail
numeric	/usr/include/boost/python/numeric.hpp	/^namespace boost { namespace python { namespace numeric {$/;"	n	namespace:boost::python
ob_	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    boost::python::handle<> ob_;$/;"	m	struct:boost::python::objects::stl_input_iterator_impl	access:private
obj	/usr/include/boost/python/detail/decref_guard.hpp	/^    PyObject* obj;$/;"	m	struct:boost::python::detail::decref_guard	access:private
objattribute_policies	/usr/include/boost/python/object_attributes.hpp	/^struct objattribute_policies : const_objattribute_policies$/;"	s	namespace:boost::python::api	inherits:const_objattribute_policies
object	/usr/include/boost/python/object_core.hpp	/^      BOOST_PYTHON_DECL explicit object(handle<> const&);$/;"	p	class:boost::python::api::object	access:public	signature:(handle< const&)
object	/usr/include/boost/python/object_core.hpp	/^      explicit object($/;"	f	class:boost::python::api::object	access:public	signature:( T const& x , typename mpl::if_<is_proxy<T>,int&,int>::type* = 0 )
object	/usr/include/boost/python/object_core.hpp	/^      explicit object(detail::borrowed_reference);$/;"	p	class:boost::python::api::object	access:public	signature:(detail::borrowed_reference)
object	/usr/include/boost/python/object_core.hpp	/^      explicit object(detail::new_non_null_reference);$/;"	p	class:boost::python::api::object	access:public	signature:(detail::new_non_null_reference)
object	/usr/include/boost/python/object_core.hpp	/^      explicit object(detail::new_reference);$/;"	p	class:boost::python::api::object	access:public	signature:(detail::new_reference)
object	/usr/include/boost/python/object_core.hpp	/^      object();$/;"	p	class:boost::python::api::object	access:public	signature:()
object	/usr/include/boost/python/object_core.hpp	/^  class object : public object_base$/;"	c	namespace:boost::python::api	inherits:object_base
object	/usr/include/boost/python/object_core.hpp	/^inline object::object()$/;"	f	class:boost::python::object	signature:()
object	/usr/include/boost/python/object_core.hpp	/^inline object::object(detail::borrowed_reference p)$/;"	f	class:boost::python::object	signature:(detail::borrowed_reference p)
object	/usr/include/boost/python/object_core.hpp	/^inline object::object(detail::new_non_null_reference p)$/;"	f	class:boost::python::object	signature:(detail::new_non_null_reference p)
object	/usr/include/boost/python/object_core.hpp	/^inline object::object(detail::new_reference p)$/;"	f	class:boost::python::object	signature:(detail::new_reference p)
object_attribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<attribute_policies> object_attribute;$/;"	t	namespace:boost::python::api
object_base	/usr/include/boost/python/object_core.hpp	/^      inline object_base(PyObject* ptr);$/;"	p	struct:boost::python::api::object_base	access:public	signature:(PyObject* ptr)
object_base	/usr/include/boost/python/object_core.hpp	/^      inline object_base(object_base const&);$/;"	p	struct:boost::python::api::object_base	access:public	signature:(object_base const&)
object_base	/usr/include/boost/python/object_core.hpp	/^  struct object_base : object_operators<object>$/;"	s	namespace:boost::python::api	inherits:object_operators
object_base	/usr/include/boost/python/object_core.hpp	/^inline api::object_base::object_base(PyObject* p)$/;"	f	class:boost::python::api::object_base	signature:(PyObject* p)
object_base	/usr/include/boost/python/object_core.hpp	/^inline api::object_base::object_base(object_base const& rhs)$/;"	f	class:boost::python::api::object_base	signature:(object_base const& rhs)
object_base_initializer	/usr/include/boost/python/object_core.hpp	/^  PyObject* object_base_initializer(T const& x)$/;"	f	namespace:boost::python::api	signature:(T const& x)
object_cref	/usr/include/boost/python/object_core.hpp	/^      typedef object const& object_cref;$/;"	t	class:boost::python::api::object_operators	access:protected
object_cref2	/usr/include/boost/python/object_core.hpp	/^    typedef object const object_cref2;$/;"	t	class:boost::python::api::object_operators	access:private
object_cref2	/usr/include/boost/python/object_core.hpp	/^    typedef object const& object_cref2;$/;"	t	class:boost::python::api::object_operators	access:private
object_initializer	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer : object_initializer_impl<$/;"	s	namespace:boost::python::api	inherits:object_initializer_impl
object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl$/;"	s	namespace:boost::python::api
object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl<false, true>$/;"	s	namespace:boost::python::api
object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl<true, false>$/;"	s	namespace:boost::python::api
object_initializer_impl	/usr/include/boost/python/object_core.hpp	/^  struct object_initializer_impl<true, true>$/;"	s	namespace:boost::python::api
object_item	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<item_policies> object_item;$/;"	t	namespace:boost::python::api
object_manager_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      object_manager_arg_to_python(T const& x) : m_src(x) {}$/;"	f	struct:boost::python::converter::detail::object_manager_arg_to_python	access:public	signature:(T const& x)
object_manager_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct object_manager_arg_to_python$/;"	s	namespace:boost::python::converter::detail
object_manager_get_pytype	/usr/include/boost/python/to_python_value.hpp	/^struct object_manager_get_pytype$/;"	s	namespace:boost::python::detail
object_manager_get_pytype	/usr/include/boost/python/to_python_value.hpp	/^struct object_manager_get_pytype<true>$/;"	s	namespace:boost::python::detail
object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    object_manager_ref_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:(PyObject*)
object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline object_manager_ref_arg_from_python<Ref>::object_manager_ref_arg_from_python(PyObject* x)$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:(PyObject* x)
object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^struct object_manager_ref_arg_from_python$/;"	s	namespace:boost::python::converter
object_manager_ref_check	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^  inline bool object_manager_ref_check(T const& x)$/;"	f	namespace:boost::python::converter::detail	signature:(T const& x)
object_manager_to_python_value	/usr/include/boost/python/to_python_value.hpp	/^  struct object_manager_to_python_value$/;"	s	namespace:boost::python::detail
object_manager_traits	/usr/include/boost/python/converter/object_manager.hpp	/^struct object_manager_traits$/;"	s	namespace:boost::python::converter	inherits:mpl::if_c::type
object_manager_traits	/usr/include/boost/python/dict.hpp	/^  struct object_manager_traits<dict>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
object_manager_traits	/usr/include/boost/python/list.hpp	/^  struct object_manager_traits<list>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
object_manager_traits	/usr/include/boost/python/long.hpp	/^  struct object_manager_traits<long_>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
object_manager_traits	/usr/include/boost/python/numeric.hpp	/^  struct object_manager_traits< numeric::array >$/;"	s	namespace:boost::python::converter	inherits:numeric::aux::array_object_manager_traits
object_manager_traits	/usr/include/boost/python/object_core.hpp	/^  struct object_manager_traits<object>$/;"	s	namespace:boost::python::converter
object_manager_traits	/usr/include/boost/python/scope.hpp	/^  struct object_manager_traits<scope>$/;"	s	namespace:boost::python::converter	inherits:object_manager_traits
object_manager_traits	/usr/include/boost/python/slice.hpp	/^struct object_manager_traits<slice>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
object_manager_traits	/usr/include/boost/python/str.hpp	/^  struct object_manager_traits<str>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
object_manager_traits	/usr/include/boost/python/tuple.hpp	/^  struct object_manager_traits<tuple>$/;"	s	namespace:boost::python::converter	inherits:pytype_object_manager_traits
object_manager_value_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    object_manager_value_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::object_manager_value_arg_from_python	access:public	signature:(PyObject*)
object_manager_value_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline object_manager_value_arg_from_python<T>::object_manager_value_arg_from_python(PyObject* x)$/;"	f	class:boost::python::converter::object_manager_value_arg_from_python	signature:(PyObject* x)
object_manager_value_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^struct object_manager_value_arg_from_python$/;"	s	namespace:boost::python::converter
object_objattribute	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<objattribute_policies> object_objattribute;$/;"	t	namespace:boost::python::api
object_operators	/usr/include/boost/python/object_core.hpp	/^  class object_operators : public def_visitor<U>$/;"	c	namespace:boost::python::api	inherits:def_visitor
object_slice	/usr/include/boost/python/object_core.hpp	/^  typedef proxy<slice_policies> object_slice;$/;"	t	namespace:boost::python::api
objects	/usr/include/boost/python/detail/defaults_def.hpp	/^namespace objects$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/add_to_namespace.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/class.hpp	/^namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/class_detail.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/class_metadata.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/class_wrapper.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/enum_base.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/find_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/forward.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/function.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/function_doc_signature.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/function_handle.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/function_object.hpp	/^namespace objects$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/inheritance.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/inheritance_query.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/instance.hpp	/^    instance_holder* objects;$/;"	m	struct:boost::python::objects::instance	access:public
objects	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/iterator.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/life_support.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/make_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/make_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/make_ptr_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/py_function.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/stl_iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/value_holder.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
objects	/usr/include/boost/python/object/value_holder_fwd.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost::python
offset_args	/usr/include/boost/python/make_constructor.hpp	/^      offset_args(BaseArgs base_) : base(base_) {}$/;"	f	struct:boost::python::detail::offset_args	access:public	signature:(BaseArgs base_)
offset_args	/usr/include/boost/python/make_constructor.hpp	/^  struct offset_args$/;"	s	namespace:boost::python::detail
op_abs	/usr/include/boost/python/detail/operator_id.hpp	/^    op_abs, $/;"	e	enum:boost::python::detail::operator_id
op_add	/usr/include/boost/python/detail/operator_id.hpp	/^    op_add, $/;"	e	enum:boost::python::detail::operator_id
op_and	/usr/include/boost/python/detail/operator_id.hpp	/^    op_and, $/;"	e	enum:boost::python::detail::operator_id
op_bool	/usr/include/boost/python/detail/operator_id.hpp	/^    op_bool,$/;"	e	enum:boost::python::detail::operator_id
op_cmp	/usr/include/boost/python/detail/operator_id.hpp	/^    op_cmp,$/;"	e	enum:boost::python::detail::operator_id
op_complex	/usr/include/boost/python/detail/operator_id.hpp	/^    op_complex,$/;"	e	enum:boost::python::detail::operator_id
op_div	/usr/include/boost/python/detail/operator_id.hpp	/^    op_div, $/;"	e	enum:boost::python::detail::operator_id
op_divmod	/usr/include/boost/python/detail/operator_id.hpp	/^    op_divmod,$/;"	e	enum:boost::python::detail::operator_id
op_eq	/usr/include/boost/python/detail/operator_id.hpp	/^    op_eq,$/;"	e	enum:boost::python::detail::operator_id
op_float	/usr/include/boost/python/detail/operator_id.hpp	/^    op_float, $/;"	e	enum:boost::python::detail::operator_id
op_ge	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ge,$/;"	e	enum:boost::python::detail::operator_id
op_gt	/usr/include/boost/python/detail/operator_id.hpp	/^    op_gt,$/;"	e	enum:boost::python::detail::operator_id
op_iadd	/usr/include/boost/python/detail/operator_id.hpp	/^    op_iadd,$/;"	e	enum:boost::python::detail::operator_id
op_iand	/usr/include/boost/python/detail/operator_id.hpp	/^    op_iand,$/;"	e	enum:boost::python::detail::operator_id
op_idiv	/usr/include/boost/python/detail/operator_id.hpp	/^    op_idiv,$/;"	e	enum:boost::python::detail::operator_id
op_ilshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ilshift,$/;"	e	enum:boost::python::detail::operator_id
op_imod	/usr/include/boost/python/detail/operator_id.hpp	/^    op_imod,$/;"	e	enum:boost::python::detail::operator_id
op_imul	/usr/include/boost/python/detail/operator_id.hpp	/^    op_imul,$/;"	e	enum:boost::python::detail::operator_id
op_int	/usr/include/boost/python/detail/operator_id.hpp	/^    op_int, $/;"	e	enum:boost::python::detail::operator_id
op_invert	/usr/include/boost/python/detail/operator_id.hpp	/^    op_invert, $/;"	e	enum:boost::python::detail::operator_id
op_ior	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ior,$/;"	e	enum:boost::python::detail::operator_id
op_irshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_irshift,$/;"	e	enum:boost::python::detail::operator_id
op_isub	/usr/include/boost/python/detail/operator_id.hpp	/^    op_isub,$/;"	e	enum:boost::python::detail::operator_id
op_ixor	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ixor,$/;"	e	enum:boost::python::detail::operator_id
op_le	/usr/include/boost/python/detail/operator_id.hpp	/^    op_le,$/;"	e	enum:boost::python::detail::operator_id
op_long	/usr/include/boost/python/detail/operator_id.hpp	/^    op_long, $/;"	e	enum:boost::python::detail::operator_id
op_lshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_lshift, $/;"	e	enum:boost::python::detail::operator_id
op_lt	/usr/include/boost/python/detail/operator_id.hpp	/^    op_lt,$/;"	e	enum:boost::python::detail::operator_id
op_mod	/usr/include/boost/python/detail/operator_id.hpp	/^    op_mod, $/;"	e	enum:boost::python::detail::operator_id
op_mul	/usr/include/boost/python/detail/operator_id.hpp	/^    op_mul, $/;"	e	enum:boost::python::detail::operator_id
op_ne	/usr/include/boost/python/detail/operator_id.hpp	/^    op_ne,$/;"	e	enum:boost::python::detail::operator_id
op_neg	/usr/include/boost/python/detail/operator_id.hpp	/^    op_neg, $/;"	e	enum:boost::python::detail::operator_id
op_or	/usr/include/boost/python/detail/operator_id.hpp	/^    op_or, $/;"	e	enum:boost::python::detail::operator_id
op_pos	/usr/include/boost/python/detail/operator_id.hpp	/^    op_pos, $/;"	e	enum:boost::python::detail::operator_id
op_pow	/usr/include/boost/python/detail/operator_id.hpp	/^    op_pow, $/;"	e	enum:boost::python::detail::operator_id
op_repr	/usr/include/boost/python/detail/operator_id.hpp	/^    op_repr$/;"	e	enum:boost::python::detail::operator_id
op_rshift	/usr/include/boost/python/detail/operator_id.hpp	/^    op_rshift, $/;"	e	enum:boost::python::detail::operator_id
op_str	/usr/include/boost/python/detail/operator_id.hpp	/^    op_str,$/;"	e	enum:boost::python::detail::operator_id
op_sub	/usr/include/boost/python/detail/operator_id.hpp	/^    op_sub, $/;"	e	enum:boost::python::detail::operator_id
op_truediv	/usr/include/boost/python/detail/operator_id.hpp	/^    ,op_truediv$/;"	e	enum:boost::python::detail::operator_id
op_xor	/usr/include/boost/python/detail/operator_id.hpp	/^    op_xor, $/;"	e	enum:boost::python::detail::operator_id
opaque	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    opaque()$/;"	f	struct:boost::python::opaque	access:public	signature:()
opaque	/usr/include/boost/python/opaque_pointer_converter.hpp	/^struct opaque$/;"	s	namespace:boost::python
opaque_pointee	/usr/include/boost/python/return_opaque_pointer.hpp	/^  static void opaque_pointee(Pointee const volatile*)$/;"	f	namespace:boost::python::detail	signature:(Pointee const volatile*)
operator !	/usr/include/boost/python/handle.hpp	/^    bool operator! () const; \/\/ never throws$/;"	p	class:boost::python::handle	access:public	signature:() const
operator !	/usr/include/boost/python/handle.hpp	/^inline bool handle<T>::operator!() const$/;"	f	class:boost::python::handle	signature:() const
operator !	/usr/include/boost/python/object_core.hpp	/^      bool operator!() const; \/\/ needed for vc6$/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
operator !	/usr/include/boost/python/object_operators.hpp	/^object_operators<U>::operator!() const$/;"	f	class:boost::python::api::object_operators	signature:() const
operator ()	/usr/include/boost/python/arg_from_python.hpp	/^    PyObject* operator()() const { return m_source; }$/;"	f	struct:boost::python::arg_from_python	access:public	signature:() const
operator ()	/usr/include/boost/python/arg_from_python.hpp	/^    PyObject*const& operator()() const { return m_source; }$/;"	f	struct:boost::python::arg_from_python	access:public	signature:() const
operator ()	/usr/include/boost/python/class.hpp	/^      void operator()(T*) const$/;"	f	struct:boost::python::detail::write_type_id	access:public	signature:(T*) const
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::pointer_arg_from_python	access:public	signature:() const
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::pointer_cref_arg_from_python	access:public	signature:() const
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::reference_arg_from_python	access:public	signature:() const
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    T operator()();$/;"	p	struct:boost::python::converter::back_reference_arg_from_python	access:public	signature:()
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^    result_type operator()();$/;"	p	struct:boost::python::converter::arg_rvalue_from_python	access:public	signature:()
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^arg_rvalue_from_python<T>::operator()()$/;"	f	class:boost::python::converter::arg_rvalue_from_python	signature:()
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^back_reference_arg_from_python<T>::operator()()$/;"	f	class:boost::python::converter::back_reference_arg_from_python	signature:()
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline T pointer_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::pointer_arg_from_python	signature:() const
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline T pointer_cref_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::pointer_cref_arg_from_python	signature:() const
operator ()	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline T reference_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::reference_arg_from_python	signature:() const
operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    Ref operator()() const;$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:() const
operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    T operator()() const;$/;"	p	struct:boost::python::converter::object_manager_value_arg_from_python	access:public	signature:() const
operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline Ref object_manager_ref_arg_from_python<Ref>::operator()() const$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:() const
operator ()	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline T object_manager_value_arg_from_python<T>::operator()() const$/;"	f	class:boost::python::converter::object_manager_value_arg_from_python	signature:() const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      T operator()(PyObject*) const;$/;"	p	struct:boost::python::converter::detail::return_pointer_from_python	access:public	signature:(PyObject*) const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      T operator()(PyObject*) const;$/;"	p	struct:boost::python::converter::detail::return_reference_from_python	access:public	signature:(PyObject*) const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      result_type operator()(PyObject*) const;$/;"	p	struct:boost::python::converter::detail::return_object_manager_from_python	access:public	signature:(PyObject*) const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^      result_type operator()(PyObject*);$/;"	p	struct:boost::python::converter::detail::return_rvalue_from_python	access:public	signature:(PyObject*)
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^    result_type operator()(PyObject* x) const$/;"	f	struct:boost::python::converter::return_from_python	access:public	signature:(PyObject* x) const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline T return_object_manager_from_python<T>::operator()(PyObject* obj) const$/;"	f	class:boost::python::converter::detail::return_object_manager_from_python	signature:(PyObject* obj) const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline T return_pointer_from_python<T>::operator()(PyObject* obj) const$/;"	f	class:boost::python::converter::detail::return_pointer_from_python	signature:(PyObject* obj) const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline T return_reference_from_python<T>::operator()(PyObject* obj) const$/;"	f	class:boost::python::converter::detail::return_reference_from_python	signature:(PyObject* obj) const
operator ()	/usr/include/boost/python/converter/return_from_python.hpp	/^  return_rvalue_from_python<T>::operator()(PyObject* obj)$/;"	f	class:boost::python::converter::detail::return_rvalue_from_python	signature:(PyObject* obj)
operator ()	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    void operator()(void const*);$/;"	p	struct:boost::python::converter::shared_ptr_deleter	access:public	signature:(void const*)
operator ()	/usr/include/boost/python/data_members.hpp	/^      Data& operator()() const$/;"	f	struct:boost::python::detail::datum	access:public	signature:() const
operator ()	/usr/include/boost/python/data_members.hpp	/^      Data& operator()(Class& c) const$/;"	f	struct:boost::python::detail::member	access:public	signature:(Class& c) const
operator ()	/usr/include/boost/python/data_members.hpp	/^      void operator()(Class& c, typename value_arg<Data>::type d) const$/;"	f	struct:boost::python::detail::member	access:public	signature:(Class& c, typename value_arg<Data>::type d) const
operator ()	/usr/include/boost/python/data_members.hpp	/^      void operator()(typename value_arg<Data>::type d) const$/;"	f	struct:boost::python::detail::datum	access:public	signature:(typename value_arg<Data>::type d) const
operator ()	/usr/include/boost/python/detail/exception_handler.hpp	/^    bool operator()(function0<void> const& f) const;$/;"	p	struct:boost::python::detail::exception_handler	access:public	signature:(function0<void> const& f) const
operator ()	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^    void operator()() const { m_fn(); }$/;"	f	struct:boost::python::detail::nullary_function_adaptor	access:public	signature:() const
operator ()	/usr/include/boost/python/detail/translate_exception.hpp	/^    inline bool operator()($/;"	f	struct:boost::python::detail::translate_exception	access:public	signature:( exception_handler const& handler , function0<void> const& f , typename call_traits<Translate>::param_type translate) const
operator ()	/usr/include/boost/python/extract.hpp	/^      Ptr operator()() const;$/;"	p	struct:boost::python::converter::extract_pointer	access:public	signature:() const
operator ()	/usr/include/boost/python/extract.hpp	/^      Ref operator()() const;$/;"	p	struct:boost::python::converter::extract_reference	access:public	signature:() const
operator ()	/usr/include/boost/python/extract.hpp	/^      result_type operator()() const;$/;"	p	struct:boost::python::converter::extract_object_manager	access:public	signature:() const
operator ()	/usr/include/boost/python/extract.hpp	/^      result_type operator()() const;$/;"	p	struct:boost::python::converter::extract_rvalue	access:public	signature:() const
operator ()	/usr/include/boost/python/extract.hpp	/^  extract_rvalue<T>::operator()() const$/;"	f	class:boost::python::converter::extract_rvalue	signature:() const
operator ()	/usr/include/boost/python/extract.hpp	/^  inline Ptr extract_pointer<Ptr>::operator()() const$/;"	f	class:boost::python::converter::extract_pointer	signature:() const
operator ()	/usr/include/boost/python/extract.hpp	/^  inline Ref extract_reference<Ref>::operator()() const$/;"	f	class:boost::python::converter::extract_reference	signature:() const
operator ()	/usr/include/boost/python/extract.hpp	/^  inline T extract_object_manager<T>::operator()() const$/;"	f	class:boost::python::converter::extract_object_manager	signature:() const
operator ()	/usr/include/boost/python/make_constructor.hpp	/^      PyObject* operator()(T x) const$/;"	f	struct:boost::python::detail::install_holder	access:public	signature:(T x) const
operator ()	/usr/include/boost/python/object/class_metadata.hpp	/^    inline void operator()(Base*) const$/;"	f	struct:boost::python::objects::register_base_of	access:public	signature:(Base*) const
operator ()	/usr/include/boost/python/object/iterator.hpp	/^        operator()(iterator_range<NextPolicies,Iterator>& self)$/;"	f	struct:boost::python::objects::iterator_range::next	access:public	signature:(iterator_range<NextPolicies,Iterator>& self)
operator ()	/usr/include/boost/python/object/iterator.hpp	/^        operator()(iterator_range<NextPolicies,Iterator>& self)$/;"	f	struct:boost::python::objects::iterator_range::next_ptr	access:public	signature:(iterator_range<NextPolicies,Iterator>& self)
operator ()	/usr/include/boost/python/object/iterator.hpp	/^      operator()(back_reference<Target&> x) const$/;"	f	struct:boost::python::objects::detail::py_iter_	access:public	signature:(back_reference<Target&> x) const
operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw) const$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(PyObject* args, PyObject* kw) const
operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw)$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:(PyObject* args, PyObject* kw)
operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw)$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:(PyObject* args, PyObject* kw)
operator ()	/usr/include/boost/python/object/py_function.hpp	/^    PyObject* operator()(PyObject* args, PyObject* kw)$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:(PyObject* args, PyObject* kw)
operator ()	/usr/include/boost/python/object/py_function.hpp	/^    virtual PyObject* operator()(PyObject*, PyObject*) = 0;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:(PyObject*, PyObject*)
operator ()	/usr/include/boost/python/object_core.hpp	/^      object operator()() const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
operator ()	/usr/include/boost/python/object_core.hpp	/^      object operator()(detail::args_proxy const &args) const; $/;"	p	class:boost::python::api::object_operators	access:public	signature:(detail::args_proxy const &args) const
operator ()	/usr/include/boost/python/object_core.hpp	/^      object operator()(detail::args_proxy const &args, $/;"	p	class:boost::python::api::object_operators	access:public	signature:(detail::args_proxy const &args, detail::kwds_proxy const &kwds) const
operator ()	/usr/include/boost/python/object_core.hpp	/^object api::object_operators<U>::operator()(detail::args_proxy const &args) const $/;"	f	class:boost::python::api::object_operators	signature:(detail::args_proxy const &args) const
operator ()	/usr/include/boost/python/object_core.hpp	/^object api::object_operators<U>::operator()(detail::args_proxy const &args, $/;"	f	class:boost::python::api::object_operators	signature:(detail::args_proxy const &args, detail::kwds_proxy const &kwds) const
operator ()	/usr/include/boost/python/object_operators.hpp	/^object object_operators<U>::operator()() const$/;"	f	class:boost::python::api::object_operators	signature:() const
operator ()	/usr/include/boost/python/override.hpp	/^    operator()() const$/;"	f	class:boost::python::override	access:public	signature:() const
operator ()	/usr/include/boost/python/raw_function.hpp	/^      PyObject* operator()(PyObject* args, PyObject* keywords)$/;"	f	struct:boost::python::detail::raw_dispatcher	access:public	signature:(PyObject* args, PyObject* keywords)
operator ()	/usr/include/boost/python/return_arg.hpp	/^              PyObject *operator()( typename value_arg<T>::type ) const$/;"	f	struct:boost::python::detail::return_none::apply::type	access:public	signature:( typename value_arg<T>::type ) const
operator ()	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        bool operator()(PyObject* prox, Index i) const$/;"	f	struct:boost::python::detail::compare_proxy_index	access:public	signature:(PyObject* prox, Index i) const
operator ()	/usr/include/boost/python/to_python_indirect.hpp	/^    operator()(U const& ref) const$/;"	f	struct:boost::python::to_python_indirect	access:public	signature:(U const& ref) const
operator ()	/usr/include/boost/python/to_python_value.hpp	/^      PyObject* operator()(argument_type) const;$/;"	p	struct:boost::python::detail::object_manager_to_python_value	access:public	signature:(argument_type) const
operator ()	/usr/include/boost/python/to_python_value.hpp	/^      PyObject* operator()(argument_type) const;$/;"	p	struct:boost::python::detail::registry_to_python_value	access:public	signature:(argument_type) const
operator ()	/usr/include/boost/python/to_python_value.hpp	/^      PyObject* operator()(argument_type) const;$/;"	p	struct:boost::python::detail::shared_ptr_to_python_value	access:public	signature:(argument_type) const
operator ()	/usr/include/boost/python/to_python_value.hpp	/^  inline PyObject* object_manager_to_python_value<T>::operator()(argument_type x) const$/;"	f	class:boost::python::detail::object_manager_to_python_value	signature:(argument_type x) const
operator ()	/usr/include/boost/python/to_python_value.hpp	/^  inline PyObject* registry_to_python_value<T>::operator()(argument_type x) const$/;"	f	class:boost::python::detail::registry_to_python_value	signature:(argument_type x) const
operator ()	/usr/include/boost/python/to_python_value.hpp	/^  inline PyObject* shared_ptr_to_python_value<T>::operator()(argument_type x) const$/;"	f	class:boost::python::detail::shared_ptr_to_python_value	signature:(argument_type x) const
operator *	/usr/include/boost/python/handle.hpp	/^    T& operator* () const;$/;"	p	class:boost::python::handle	access:public	signature:() const
operator *	/usr/include/boost/python/handle.hpp	/^inline T& handle<T>::operator*() const$/;"	f	class:boost::python::handle	signature:() const
operator *	/usr/include/boost/python/object_core.hpp	/^      detail::args_proxy operator* () const; $/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
operator *	/usr/include/boost/python/object_core.hpp	/^  kwds_proxy operator* () const { return kwds_proxy(*this);} $/;"	f	class:boost::python::detail::args_proxy	access:public	signature:() const
operator *	/usr/include/boost/python/object_core.hpp	/^detail::args_proxy api::object_operators<U>::operator* () const $/;"	f	class:boost::python::api::object_operators	signature:() const
operator *	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        element_type& operator*() const$/;"	f	class:boost::python::detail::container_element	access:public	signature:() const
operator ,	/usr/include/boost/python/args.hpp	/^      operator,(char const *name) const;$/;"	p	struct:boost::python::detail::keywords_base	access:public	signature:(char const *name) const
operator ,	/usr/include/boost/python/args.hpp	/^      operator,(python::arg const &k) const;$/;"	p	struct:boost::python::detail::keywords_base	access:public	signature:(python::arg const &k) const
operator ,	/usr/include/boost/python/args.hpp	/^  keywords_base<nkeywords>::operator,(char const *name) const$/;"	f	class:boost::python::detail::keywords_base	signature:(char const *name) const
operator ,	/usr/include/boost/python/args.hpp	/^  keywords_base<nkeywords>::operator,(python::arg const &k) const$/;"	f	class:boost::python::detail::keywords_base	signature:(python::arg const &k) const
operator ->	/usr/include/boost/python/handle.hpp	/^    T* operator-> () const;$/;"	p	class:boost::python::handle	access:public	signature:() const
operator ->	/usr/include/boost/python/handle.hpp	/^inline T* handle<T>::operator->() const$/;"	f	class:boost::python::handle	signature:() const
operator <	/usr/include/boost/python/converter/registrations.hpp	/^inline bool operator<(registration const& lhs, registration const& rhs)$/;"	f	namespace:boost::python::converter	signature:(registration const& lhs, registration const& rhs)
operator <	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    inline bool operator<(decorated_type_info const& rhs) const;$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:(decorated_type_info const& rhs) const
operator <	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline bool decorated_type_info::operator<(decorated_type_info const& rhs) const$/;"	f	class:boost::python::detail::decorated_type_info	signature:(decorated_type_info const& rhs) const
operator <	/usr/include/boost/python/detail/map_entry.hpp	/^    bool operator<(map_entry const& rhs) const$/;"	f	struct:boost::python::detail::map_entry	access:public	signature:(map_entry const& rhs) const
operator <	/usr/include/boost/python/detail/map_entry.hpp	/^bool operator<(Key const& k, map_entry<Key,Value> const& e)$/;"	f	namespace:boost::python::detail	signature:(Key const& k, map_entry<Key,Value> const& e)
operator <	/usr/include/boost/python/detail/map_entry.hpp	/^bool operator<(map_entry<Key,Value> const& e, Key const& k)$/;"	f	namespace:boost::python::detail	signature:(map_entry<Key,Value> const& e, Key const& k)
operator <	/usr/include/boost/python/type_id.hpp	/^    inline bool operator<(type_info const& rhs) const;$/;"	p	struct:boost::python::type_info	access:public	signature:(type_info const& rhs) const
operator <	/usr/include/boost/python/type_id.hpp	/^inline bool type_info::operator<(type_info const& rhs) const$/;"	f	class:boost::python::type_info	signature:(type_info const& rhs) const
operator <<	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    friend BOOST_PYTHON_DECL std::ostream& operator<<(std::ostream&, decorated_type_info const&);$/;"	p	struct:boost::python::detail::decorated_type_info	access:friend	signature:(std::ostream&, decorated_type_info const&)
operator <<	/usr/include/boost/python/detail/decorated_type_id.hpp	/^BOOST_PYTHON_DECL std::ostream& operator<<(std::ostream&, decorated_type_info const&);$/;"	p	namespace:boost::python::detail	signature:(std::ostream&, decorated_type_info const&)
operator <<	/usr/include/boost/python/type_id.hpp	/^    friend BOOST_PYTHON_DECL std::ostream& operator<<($/;"	p	struct:boost::python::type_info	access:friend	signature:( std::ostream&, type_info const&)
operator <<	/usr/include/boost/python/type_id.hpp	/^BOOST_PYTHON_DECL std::ostream& operator<<(std::ostream&, type_info const&);$/;"	p	namespace:boost::python	signature:(std::ostream&, type_info const&)
operator =	/usr/include/boost/python/args.hpp	/^      python::arg& operator=(T const& value)$/;"	f	struct:boost::python::detail::keywords	access:public	signature:(T const& value)
operator =	/usr/include/boost/python/converter/registrations.hpp	/^    void operator=(registration); \/\/ This is not defined, and just keeps MWCW happy.$/;"	p	struct:boost::python::converter::registration	access:private	signature:(registration)
operator =	/usr/include/boost/python/detail/void_return.hpp	/^    void operator=(void_return const&);$/;"	p	struct:boost::python::detail::void_return	access:private	signature:(void_return const&)
operator =	/usr/include/boost/python/handle.hpp	/^    handle& operator=(handle const& r)$/;"	f	class:boost::python::handle	access:public	signature:(handle const& r)
operator =	/usr/include/boost/python/handle.hpp	/^    handle& operator=(handle<Y> const & r) \/\/ never throws$/;"	f	class:boost::python::handle	access:public	signature:(handle<Y> const & r)
operator =	/usr/include/boost/python/object_core.hpp	/^      inline object_base& operator=(object_base const& rhs);$/;"	p	struct:boost::python::api::object_base	access:public	signature:(object_base const& rhs)
operator =	/usr/include/boost/python/object_core.hpp	/^inline api::object_base& api::object_base::operator=(api::object_base const& rhs)$/;"	f	class:boost::python::api::object_base	signature:(api::object_base const& rhs)
operator =	/usr/include/boost/python/proxy.hpp	/^    inline proxy const& operator=(T const& rhs) const$/;"	f	class:boost::python::api::proxy	access:public	signature:(T const& rhs) const
operator =	/usr/include/boost/python/proxy.hpp	/^    proxy const& operator=(assignment_self) const;$/;"	p	class:boost::python::api::proxy	access:public	signature:(assignment_self) const
operator =	/usr/include/boost/python/proxy.hpp	/^inline proxy<Policies> const& proxy<Policies>::operator=(typename proxy::assignment_self rhs) const$/;"	f	class:boost::python::api::proxy	signature:(typename proxy::assignment_self rhs) const
operator =	/usr/include/boost/python/scope.hpp	/^    void operator=(scope const&);$/;"	p	class:boost::python::scope	access:private	signature:(scope const&)
operator =	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        container_element& operator=(container_element const& ce);$/;"	p	class:boost::python::detail::container_element	access:private	signature:(container_element const& ce)
operator ==	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    inline bool operator==(decorated_type_info const& rhs) const;$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:(decorated_type_info const& rhs) const
operator ==	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline bool decorated_type_info::operator==(decorated_type_info const& rhs) const$/;"	f	class:boost::python::detail::decorated_type_info	signature:(decorated_type_info const& rhs) const
operator ==	/usr/include/boost/python/type_id.hpp	/^    inline bool operator==(type_info const& rhs) const;$/;"	p	struct:boost::python::type_info	access:public	signature:(type_info const& rhs) const
operator ==	/usr/include/boost/python/type_id.hpp	/^inline bool type_info::operator==(type_info const& rhs) const$/;"	f	class:boost::python::type_info	signature:(type_info const& rhs) const
operator Ptr	/usr/include/boost/python/ptr.hpp	/^    operator Ptr() const { return p_; }$/;"	f	class:boost::python::pointer_wrapper	access:public	signature:() const
operator T	/usr/include/boost/python/override.hpp	/^      operator T()$/;"	f	class:boost::python::detail::method_result	access:public	signature:()
operator T&	/usr/include/boost/python/override.hpp	/^      operator T&() const$/;"	f	class:boost::python::detail::method_result	access:public	signature:() const
operator T*	/usr/include/boost/python/override.hpp	/^      operator T*()$/;"	f	class:boost::python::detail::method_result	access:public	signature:()
operator []	/usr/include/boost/python/detail/defaults_gen.hpp	/^      operator[](CallPoliciesT const& policies) const$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:(CallPoliciesT const& policies) const
operator []	/usr/include/boost/python/init.hpp	/^    operator[](CallPoliciesT const& policies) const$/;"	f	class:boost::python::init	access:public	signature:(CallPoliciesT const& policies) const
operator []	/usr/include/boost/python/object_core.hpp	/^      const_object_item operator[](object_cref) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref) const
operator []	/usr/include/boost/python/object_core.hpp	/^      object_item operator[](object_cref);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref)
operator []	/usr/include/boost/python/object_core.hpp	/^      operator[](T const& key) const$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& key) const
operator []	/usr/include/boost/python/object_core.hpp	/^      operator[](T const& key)$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& key)
operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](T const& key) const$/;"	f	class:boost::python::api::object_operators	signature:(T const& key) const
operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](T const& key)$/;"	f	class:boost::python::api::object_operators	signature:(T const& key)
operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](object_cref key) const$/;"	f	class:boost::python::api::object_operators	signature:(object_cref key) const
operator []	/usr/include/boost/python/object_items.hpp	/^object_operators<U>::operator[](object_cref key)$/;"	f	class:boost::python::api::object_operators	signature:(object_cref key)
operator bool_type	/usr/include/boost/python/handle.hpp	/^    operator bool_type() const \/\/ never throws$/;"	f	class:boost::python::handle	access:public	signature:() const
operator bool_type	/usr/include/boost/python/object_core.hpp	/^      operator bool_type() const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:() const
operator bool_type	/usr/include/boost/python/object_operators.hpp	/^object_operators<U>::operator bool_type() const$/;"	f	class:boost::python::api::object_operators	signature:() const
operator detail::keyword const&	/usr/include/boost/python/args.hpp	/^      operator detail::keyword const&() const$/;"	f	struct:boost::python::detail::keywords	access:public	signature:() const
operator object	/usr/include/boost/python/object_core.hpp	/^  operator object() const { return m_target;} $/;"	f	class:boost::python::detail::call_proxy	access:public	signature:() const
operator object	/usr/include/boost/python/proxy.hpp	/^    operator object() const;$/;"	p	class:boost::python::api::proxy	access:public	signature:() const
operator object	/usr/include/boost/python/proxy.hpp	/^inline proxy<Policies>::operator object() const$/;"	f	class:boost::python::api::proxy	signature:() const
operator result_type	/usr/include/boost/python/extract.hpp	/^    operator result_type() const$/;"	f	struct:boost::python::extract	access:public	signature:() const
operator type_info const&	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    operator type_info const&() const;$/;"	p	struct:boost::python::detail::decorated_type_info	access:public	signature:() const
operator type_info const&	/usr/include/boost/python/detail/decorated_type_id.hpp	/^inline decorated_type_info::operator type_info const&() const$/;"	f	class:boost::python::detail::decorated_type_info	signature:() const
operator_	/usr/include/boost/python/operators.hpp	/^  struct operator_$/;"	s	namespace:boost::python::detail	inherits:def_visitor
operator_1	/usr/include/boost/python/operators.hpp	/^  template <operator_id> struct operator_1$/;"	s	namespace:boost::python::detail
operator_1_inner	/usr/include/boost/python/operators.hpp	/^  struct operator_1_inner$/;"	s	namespace:boost::python::detail	inherits:operator_1::,apply
operator_id	/usr/include/boost/python/detail/operator_id.hpp	/^enum operator_id$/;"	g	namespace:boost::python::detail
operator_l	/usr/include/boost/python/operators.hpp	/^  template <operator_id> struct operator_l$/;"	s	namespace:boost::python::detail
operator_l_inner	/usr/include/boost/python/operators.hpp	/^  struct operator_l_inner$/;"	s	namespace:boost::python::detail	inherits:operator_l::,apply
operator_r	/usr/include/boost/python/operators.hpp	/^  template <operator_id> struct operator_r$/;"	s	namespace:boost::python::detail
operator_r_inner	/usr/include/boost/python/operators.hpp	/^  struct operator_r_inner$/;"	s	namespace:boost::python::detail	inherits:operator_r::,apply
optional	/usr/include/boost/python/init.hpp	/^struct optional$/;"	s	namespace:boost::python	inherits:detail::type_list
optional_args	/usr/include/boost/python/init.hpp	/^    >::type optional_args;$/;"	t	class:boost::python::init	access:public
other	/usr/include/boost/python/other.hpp	/^template<class T> struct other$/;"	s	namespace:boost::python
outer_args	/usr/include/boost/python/make_constructor.hpp	/^      typedef typename mpl::push_front<inner_args,object>::type outer_args;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
outer_constructor_signature	/usr/include/boost/python/make_constructor.hpp	/^  struct outer_constructor_signature$/;"	s	namespace:boost::python::detail
outer_constructor_signature	/usr/include/boost/python/make_constructor.hpp	/^  struct outer_constructor_signature<int>$/;"	s	namespace:boost::python::detail
overloads_base	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_base(char const* doc_)$/;"	f	struct:boost::python::detail::overloads_base	access:public	signature:(char const* doc_)
overloads_base	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_base(char const* doc_, detail::keyword_range const& kw)$/;"	f	struct:boost::python::detail::overloads_base	access:public	signature:(char const* doc_, detail::keyword_range const& kw)
overloads_base	/usr/include/boost/python/detail/defaults_gen.hpp	/^  struct overloads_base$/;"	s	namespace:boost::python::detail
overloads_common	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_common(char const* doc)$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:(char const* doc)
overloads_common	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_common(char const* doc, keyword_range const& kw)$/;"	f	struct:boost::python::detail::overloads_common	access:public	signature:(char const* doc, keyword_range const& kw)
overloads_common	/usr/include/boost/python/detail/defaults_gen.hpp	/^  struct overloads_common$/;"	s	namespace:boost::python::detail	inherits:overloads_base
overloads_proxy	/usr/include/boost/python/detail/defaults_gen.hpp	/^      overloads_proxy($/;"	f	struct:boost::python::detail::overloads_proxy	access:public	signature:( CallPoliciesT const& policies_ , char const* doc , keyword_range const& kw )
overloads_proxy	/usr/include/boost/python/detail/defaults_gen.hpp	/^  struct overloads_proxy$/;"	s	namespace:boost::python::detail	inherits:overloads_base
override	/usr/include/boost/python/override.hpp	/^    override(handle<> x)$/;"	f	class:boost::python::override	access:private	signature:(handle< x)
override	/usr/include/boost/python/override.hpp	/^class override : public object$/;"	c	namespace:boost::python	inherits:object
owner	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    handle<> owner;$/;"	m	struct:boost::python::converter::shared_ptr_deleter	access:public
owner	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner(T const volatile* x)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(T const volatile* x)
owner_impl	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner_impl(T const volatile* x, mpl::true_)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(T const volatile* x, mpl::true_)
owner_impl	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner_impl(T const volatile* x, mpl::true_);$/;"	p	namespace:boost::python::detail::wrapper_base_	signature:(T const volatile* x, mpl::true_)
owner_impl	/usr/include/boost/python/detail/wrapper_base.hpp	/^    owner_impl(void const volatile* \/*x*\/, mpl::false_)$/;"	f	namespace:boost::python::detail::wrapper_base_	signature:(void const volatile* , mpl::false_)
p	/usr/include/boost/python/class.hpp	/^      type_info** p;$/;"	m	struct:boost::python::detail::write_type_id	access:public
p_	/usr/include/boost/python/ptr.hpp	/^    Ptr p_;$/;"	m	class:boost::python::pointer_wrapper	access:private
parameter_string	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static str parameter_string(py_function const &f, size_t n, object arg_names, bool cpp_types);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(py_function const &f, size_t n, object arg_names, bool cpp_types)
pickle_suite	/usr/include/boost/python/object/pickle_support.hpp	/^struct pickle_suite$/;"	s	namespace:boost::python
pickle_suite_finalize	/usr/include/boost/python/object/pickle_support.hpp	/^  struct pickle_suite_finalize$/;"	s	namespace:boost::python::detail	inherits:PickleSuiteType,pickle_suite_registration
pickle_suite_registration	/usr/include/boost/python/object/pickle_support.hpp	/^  struct pickle_suite_registration$/;"	s	namespace:boost::python::detail
pid_t	/usr/include/boost/python/detail/wrap_python.hpp	/^typedef int pid_t;$/;"	t
pointee	/usr/include/boost/python/detail/pointee.hpp	/^struct pointee$/;"	s	namespace:boost::python::detail	inherits:pointee_impl::,apply
pointee	/usr/include/boost/python/pointee.hpp	/^struct pointee$/;"	s	namespace:boost::python	inherits:detail::pointee_impl::,apply
pointee_impl	/usr/include/boost/python/detail/pointee.hpp	/^struct pointee_impl$/;"	s	namespace:boost::python::detail
pointee_impl	/usr/include/boost/python/detail/pointee.hpp	/^struct pointee_impl<false>$/;"	s	namespace:boost::python::detail
pointee_impl	/usr/include/boost/python/pointee.hpp	/^  struct pointee_impl$/;"	s	namespace:boost::python::detail
pointee_impl	/usr/include/boost/python/pointee.hpp	/^  struct pointee_impl<false>$/;"	s	namespace:boost::python::detail
pointer_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
pointer_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    pointer_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::pointer_arg_from_python	access:public	signature:(PyObject*)
pointer_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline pointer_arg_from_python<T>::pointer_arg_from_python(PyObject* p)$/;"	f	class:boost::python::converter::pointer_arg_from_python	signature:(PyObject* p)
pointer_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct pointer_arg_from_python : arg_lvalue_from_python_base$/;"	s	namespace:boost::python::converter	inherits:arg_lvalue_from_python_base
pointer_cref_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    pointer_cref_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::pointer_cref_arg_from_python	access:public	signature:(PyObject*)
pointer_cref_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline pointer_cref_arg_from_python<T>::pointer_cref_arg_from_python(PyObject* p)$/;"	f	class:boost::python::converter::pointer_cref_arg_from_python	signature:(PyObject* p)
pointer_cref_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct pointer_cref_arg_from_python$/;"	s	namespace:boost::python::converter
pointer_deep_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      pointer_deep_arg_to_python(Ptr);$/;"	p	struct:boost::python::converter::detail::pointer_deep_arg_to_python	access:public	signature:(Ptr)
pointer_deep_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline pointer_deep_arg_to_python<Ptr>::pointer_deep_arg_to_python(Ptr x)$/;"	f	class:boost::python::converter::detail::pointer_deep_arg_to_python	signature:(Ptr x)
pointer_deep_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct pointer_deep_arg_to_python : arg_to_python_base$/;"	s	namespace:boost::python::converter::detail	inherits:arg_to_python_base
pointer_holder	/usr/include/boost/python/object/pointer_holder.hpp	/^    pointer_holder(Pointer);$/;"	p	struct:boost::python::objects::pointer_holder	access:public	signature:(Pointer)
pointer_holder	/usr/include/boost/python/object/pointer_holder.hpp	/^inline pointer_holder<Pointer,Value>::pointer_holder(Pointer p)$/;"	f	class:boost::python::objects::pointer_holder	signature:(Pointer p)
pointer_holder	/usr/include/boost/python/object/pointer_holder.hpp	/^struct pointer_holder : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
pointer_holder_back_reference	/usr/include/boost/python/object/pointer_holder.hpp	/^    pointer_holder_back_reference(Pointer);$/;"	p	struct:boost::python::objects::pointer_holder_back_reference	access:public	signature:(Pointer)
pointer_holder_back_reference	/usr/include/boost/python/object/pointer_holder.hpp	/^inline pointer_holder_back_reference<Pointer,Value>::pointer_holder_back_reference(Pointer p)$/;"	f	class:boost::python::objects::pointer_holder_back_reference	signature:(Pointer p)
pointer_holder_back_reference	/usr/include/boost/python/object/pointer_holder.hpp	/^struct pointer_holder_back_reference : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
pointer_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* pointer_result_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
pointer_shallow_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      pointer_shallow_arg_to_python(Ptr);$/;"	p	struct:boost::python::converter::detail::pointer_shallow_arg_to_python	access:public	signature:(Ptr)
pointer_shallow_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline pointer_shallow_arg_to_python<Ptr>::pointer_shallow_arg_to_python(Ptr x)$/;"	f	class:boost::python::converter::detail::pointer_shallow_arg_to_python	signature:(Ptr x)
pointer_shallow_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct pointer_shallow_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
pointer_type_id	/usr/include/boost/python/converter/pointer_type_id.hpp	/^type_info pointer_type_id(T(*)() = 0)$/;"	f	namespace:boost::python::converter	signature:(T()) = 0)
pointer_typeid_select	/usr/include/boost/python/converter/pointer_type_id.hpp	/^  struct pointer_typeid_select$/;"	s	namespace:boost::python::converter::detail
pointer_typeid_select	/usr/include/boost/python/converter/pointer_type_id.hpp	/^  struct pointer_typeid_select<true>$/;"	s	namespace:boost::python::converter::detail
pointer_unwrapper	/usr/include/boost/python/ptr.hpp	/^  struct pointer_unwrapper$/;"	s	namespace:boost::python::detail
pointer_unwrapper	/usr/include/boost/python/ptr.hpp	/^  struct pointer_unwrapper<true>$/;"	s	namespace:boost::python::detail
pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^    explicit pointer_wrapper(Ptr x): p_(x) {}$/;"	f	class:boost::python::pointer_wrapper	access:public	signature:(Ptr x)
pointer_wrapper	/usr/include/boost/python/ptr.hpp	/^template<class Ptr> class pointer_wrapper$/;"	c	namespace:boost::python
policies	/usr/include/boost/python/detail/def_helper.hpp	/^      typename policy_extract<all_t>::result_type policies() const$/;"	f	struct:boost::python::detail::def_helper	access:public	signature:() const
policies	/usr/include/boost/python/detail/defaults_gen.hpp	/^      CallPoliciesT policies;$/;"	m	struct:boost::python::detail::overloads_proxy	access:public
policies_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef Policies policies_type;$/;"	t	class:boost::python::detail::container_element	access:public
policies_type	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef typename Proxy::policies_type policies_type;$/;"	t	class:boost::python::detail::proxy_group	access:public
policy_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct policy_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract
polymorphic_id_generator	/usr/include/boost/python/object/inheritance.hpp	/^struct polymorphic_id_generator$/;"	s	namespace:boost::python::objects
pop	/usr/include/boost/python/list.hpp	/^      object pop(); \/\/ remove and return item at index (default last)$/;"	p	struct:boost::python::detail::list_base	access:public	signature:()
pop	/usr/include/boost/python/list.hpp	/^      object pop(object const& index);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object const& index)
pop	/usr/include/boost/python/list.hpp	/^      object pop(ssize_t index);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(ssize_t index)
pop	/usr/include/boost/python/list.hpp	/^    object pop() { return base::pop(); }$/;"	f	class:boost::python::list	access:public	signature:()
pop	/usr/include/boost/python/list.hpp	/^    object pop(T const& index)$/;"	f	class:boost::python::list	access:public	signature:(T const& index)
pop	/usr/include/boost/python/list.hpp	/^    object pop(ssize_t index) { return base::pop(index); }$/;"	f	class:boost::python::list	access:public	signature:(ssize_t index)
popitem	/usr/include/boost/python/dict.hpp	/^      tuple popitem();$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:()
postcall	/usr/include/boost/python/default_call_policies.hpp	/^    static PyObject* postcall(ArgumentPackage const&, PyObject* result)$/;"	f	struct:boost::python::default_call_policies	access:public	signature:(ArgumentPackage const&, PyObject* result)
postcall	/usr/include/boost/python/return_arg.hpp	/^    static PyObject* postcall(ArgumentPackage const& args, PyObject* result)$/;"	f	struct:boost::python::return_arg	access:public	signature:(ArgumentPackage const& args, PyObject* result)
postcall	/usr/include/boost/python/with_custodian_and_ward.hpp	/^    static PyObject* postcall(ArgumentPackage const& args_, PyObject* result)$/;"	f	struct:boost::python::with_custodian_and_ward_postcall	access:public	signature:(ArgumentPackage const& args_, PyObject* result)
pow	/usr/include/boost/python/operators.hpp	/^  pow(L const&, R const&)$/;"	f	namespace:boost::python::self_ns	signature:(L const&, R const&)
precall	/usr/include/boost/python/default_call_policies.hpp	/^    static bool precall(ArgumentPackage const&)$/;"	f	struct:boost::python::default_call_policies	access:public	signature:(ArgumentPackage const&)
precall	/usr/include/boost/python/with_custodian_and_ward.hpp	/^    static bool precall(ArgumentPackage const& args_)$/;"	f	struct:boost::python::with_custodian_and_ward	access:public	signature:(ArgumentPackage const& args_)
pretty_signature	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static str pretty_signature(function const *f, size_t n_overloads,  bool cpp_types = false);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(function const *f, size_t n_overloads, bool cpp_types = false)
previous_show_cpp_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      bool previous_show_cpp_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
previous_show_py_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      bool previous_show_py_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
previous_show_user_defined_	/usr/include/boost/python/docstring_options.hpp	/^      bool previous_show_user_defined_;$/;"	m	class:boost::python::docstring_options	access:private
print_elem	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        print_elem(typename Container::value_type const& e)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(typename Container::value_type const& e)
proxies	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        std::vector<PyObject*> proxies;$/;"	m	class:boost::python::detail::proxy_group	access:private
proxy	/usr/include/boost/python/proxy.hpp	/^    proxy(object const& target, key_type const& key);$/;"	p	class:boost::python::api::proxy	access:public	signature:(object const& target, key_type const& key)
proxy	/usr/include/boost/python/proxy.hpp	/^class proxy : public object_operators<proxy<Policies> >$/;"	c	namespace:boost::python::api	inherits:object_operators
proxy	/usr/include/boost/python/proxy.hpp	/^inline proxy<Policies>::proxy(object const& target, key_type const& key)$/;"	f	class:boost::python::api::proxy	signature:(object const& target, key_type const& key)
proxy_group	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    class proxy_group$/;"	c	namespace:boost::python::detail
proxy_handler	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        proxy_handler;$/;"	t	class:boost::python::indexing_suite	access:private
proxy_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct proxy_helper$/;"	s	namespace:boost::python::detail
proxy_links	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    class proxy_links$/;"	c	namespace:boost::python::detail
ptr	/usr/include/boost/python/object_core.hpp	/^      inline PyObject* ptr() const;$/;"	p	struct:boost::python::api::object_base	access:public	signature:() const
ptr	/usr/include/boost/python/object_core.hpp	/^inline PyObject* api::object_base::ptr() const$/;"	f	class:boost::python::api::object_base	signature:() const
ptr	/usr/include/boost/python/ptr.hpp	/^inline pointer_wrapper<T> ptr(T t)$/;"	f	namespace:boost::python	signature:(T t)
ptr	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        scoped_ptr<element_type> ptr;$/;"	m	class:boost::python::detail::container_element	access:private
pure_virtual	/usr/include/boost/python/pure_virtual.hpp	/^pure_virtual(PointerToMemberFunction pmf)$/;"	f	namespace:boost::python	signature:(PointerToMemberFunction pmf)
pure_virtual_called	/usr/include/boost/python/pure_virtual.hpp	/^  void BOOST_PYTHON_DECL pure_virtual_called();$/;"	p	namespace:boost::python::detail	signature:()
pure_virtual_visitor	/usr/include/boost/python/pure_virtual.hpp	/^      pure_virtual_visitor(PointerToMemberFunction pmf)$/;"	f	struct:boost::python::detail::pure_virtual_visitor	access:public	signature:(PointerToMemberFunction pmf)
pure_virtual_visitor	/usr/include/boost/python/pure_virtual.hpp	/^  struct pure_virtual_visitor$/;"	s	namespace:boost::python::detail	inherits:def_visitor
push_back	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL void push_back($/;"	p	namespace:boost::python::converter::registry	signature:( convertible_function , constructor_function , type_info , PyTypeObject const* (*expected_pytype)() = 0 )
put	/usr/include/boost/python/numeric.hpp	/^      void put(object const& indices, object const& values);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& indices, object const& values)
put	/usr/include/boost/python/numeric.hpp	/^    void put(Indices const& indices, Values const& values)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Indices const& indices, Values const& values)
py_func_sig_info	/usr/include/boost/python/detail/signature.hpp	/^struct py_func_sig_info$/;"	s	namespace:boost::python::detail
py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(Caller const& caller)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(Caller const& caller)
py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(Caller const& caller, Sig)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(Caller const& caller, Sig)
py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(Caller const& caller, Sig, int min_arity, int max_arity = 0)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(Caller const& caller, Sig, int min_arity, int max_arity = 0)
py_function	/usr/include/boost/python/object/py_function.hpp	/^    py_function(py_function const& rhs)$/;"	f	struct:boost::python::objects::py_function	access:public	signature:(py_function const& rhs)
py_function	/usr/include/boost/python/object/py_function.hpp	/^struct py_function$/;"	s	namespace:boost::python::objects
py_function_impl_base	/usr/include/boost/python/object/py_function.hpp	/^struct BOOST_PYTHON_DECL py_function_impl_base$/;"	s	namespace:boost::python::objects
py_iter_	/usr/include/boost/python/object/iterator.hpp	/^      py_iter_(Accessor1 const& get_start, Accessor2 const& get_finish)$/;"	f	struct:boost::python::objects::detail::py_iter_	access:public	signature:(Accessor1 const& get_start, Accessor2 const& get_finish)
py_iter_	/usr/include/boost/python/object/iterator.hpp	/^  struct py_iter_$/;"	s	namespace:boost::python::objects::detail
py_type_str	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static const  char * py_type_str(const python::detail::signature_element &s);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(const python::detail::signature_element &s)
pyobject_traits	/usr/include/boost/python/converter/pyobject_traits.hpp	/^struct pyobject_traits<PyObject>$/;"	s	namespace:boost::python::converter
pyobject_type	/usr/include/boost/python/converter/pyobject_type.hpp	/^struct pyobject_type $/;"	s	namespace:boost::python::converter
python	/usr/include/boost/python/arg_from_python.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/args.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/args_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/back_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/back_reference.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/base_type_traits.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/bases.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/borrowed.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/call.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/call_method.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/cast.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/class.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/class_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost
python	/usr/include/boost/python/converter/arg_from_python.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
python	/usr/include/boost/python/converter/arg_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost
python	/usr/include/boost/python/converter/as_to_python_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/builtin_converters.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/converter/constructor_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/context_result_converter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/convertible_function.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/implicit.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/object_manager.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
python	/usr/include/boost/python/converter/pointer_type_id.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/pyobject_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/pyobject_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/pytype_function.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/registered.hpp	/^namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/registered_pointee.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/registrations.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/registry.hpp	/^namespace boost { namespace python { namespace converter {$/;"	n	namespace:boost
python	/usr/include/boost/python/converter/return_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/converter/to_python_function_type.hpp	/^namespace boost { namespace python { namespace converter { $/;"	n	namespace:boost
python	/usr/include/boost/python/copy_const_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/copy_non_const_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/data_members.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/def.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/def_visitor.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/default_call_policies.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/aix_init_module.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/caller.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/construct.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/convertible.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/copy_ctor_mutates_rhs.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/cv_category.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/dealloc.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/decorated_type_id.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/decref_guard.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/def_helper.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/def_helper_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/defaults_def.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/defaults_gen.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/dependent.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/destroy.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/enable_if.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/exception_handler.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/force_instantiate.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/if_else.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/indirect_traits.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/invoke.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/is_auto_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/is_wrapper.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/make_keyword_range_fn.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/map_entry.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/none.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/not_specified.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/nullary_function_adaptor.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/operator_id.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/overloads_fwd.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/pointee.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/python_type.hpp	/^namespace boost {namespace python {namespace detail{$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/raw_pyobject.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/referent_storage.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/result.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/scope.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/signature.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/string_literal.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/target.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/translate_exception.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/type_list_impl.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/unwind_type.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/value_arg.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/value_is_shared_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/void_ptr.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/void_return.hpp	/^namespace boost { namespace python { namespace detail { $/;"	n	namespace:boost
python	/usr/include/boost/python/detail/wrapper_base.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/dict.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/docstring_options.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/enum.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/errors.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/exception_translator.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/exec.hpp	/^namespace python $/;"	n	namespace:boost
python	/usr/include/boost/python/extract.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/handle.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/handle.hpp	/^namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/handle_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/has_back_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/implicit.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/import.hpp	/^namespace python $/;"	n	namespace:boost
python	/usr/include/boost/python/init.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/instance_holder.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/iterator.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/list.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/long.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/lvalue_from_pytype.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/make_constructor.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/make_function.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/manage_new_object.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/module_init.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/numeric.hpp	/^namespace boost { namespace python { namespace numeric {$/;"	n	namespace:boost
python	/usr/include/boost/python/object.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/add_to_namespace.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/class.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/class_detail.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/class_metadata.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/class_wrapper.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/enum_base.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/find_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/forward.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/function.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/function_doc_signature.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/function_handle.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/function_object.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/inheritance.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/inheritance_query.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/instance.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
python	/usr/include/boost/python/object/iterator.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/life_support.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/make_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/make_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/make_ptr_instance.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/pickle_support.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/pointer_holder.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/py_function.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/stl_iterator_core.hpp	/^namespace boost { namespace python { namespace objects {$/;"	n	namespace:boost
python	/usr/include/boost/python/object/value_holder.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object/value_holder_fwd.hpp	/^namespace boost { namespace python { namespace objects { $/;"	n	namespace:boost
python	/usr/include/boost/python/object_attributes.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
python	/usr/include/boost/python/object_core.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/object_fwd.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/object_items.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
python	/usr/include/boost/python/object_operators.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
python	/usr/include/boost/python/object_protocol.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
python	/usr/include/boost/python/object_protocol_core.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/object_slices.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
python	/usr/include/boost/python/opaque_pointer_converter.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/operators.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/other.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/override.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/pointee.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/proxy.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
python	/usr/include/boost/python/ptr.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/pure_virtual.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/raw_function.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/refcount.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/reference_existing_object.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/register_ptr_to_python.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/return_arg.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/return_by_value.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/return_internal_reference.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/return_opaque_pointer.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/return_value_policy.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/scope.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/self.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/signature.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/slice.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/slice_nil.hpp	/^namespace boost { namespace python { namespace api {$/;"	n	namespace:boost
python	/usr/include/boost/python/ssize_t.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/stl_iterator.hpp	/^namespace boost { namespace python$/;"	n	namespace:boost
python	/usr/include/boost/python/str.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/suite/indexing/container_utils.hpp	/^namespace boost { namespace python { namespace container_utils {$/;"	n	namespace:boost
python	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^namespace boost { namespace python { namespace detail {$/;"	n	namespace:boost
python	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/tag.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/to_python_converter.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/to_python_indirect.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/to_python_value.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/tuple.hpp	/^namespace boost { namespace python {$/;"	n	namespace:boost
python	/usr/include/boost/python/type_id.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/with_custodian_and_ward.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python	/usr/include/boost/python/wrapper.hpp	/^namespace boost { namespace python { $/;"	n	namespace:boost
python_class	/usr/include/boost/python/detail/python_type.hpp	/^template <class T> struct python_class : PyObject$/;"	s	namespace:boost::python::detail	inherits:PyObject
python_instance	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    struct python_instance$/;"	s	struct:boost::python::opaque	access:private
pytype_check	/usr/include/boost/python/errors.hpp	/^BOOST_PYTHON_DECL PyObject* pytype_check(PyTypeObject* pytype, PyObject* source);$/;"	p	namespace:boost::python	signature:(PyTypeObject* pytype, PyObject* source)
pytype_f	/usr/include/boost/python/detail/signature.hpp	/^    converter::pytype_function pytype_f;$/;"	m	struct:boost::python::detail::signature_element	access:public
pytype_function	/usr/include/boost/python/converter/pytype_function.hpp	/^typedef PyTypeObject const* (*pytype_function)();$/;"	t	namespace:boost::python::converter
pytype_object_manager_traits	/usr/include/boost/python/converter/pytype_object_mgr_traits.hpp	/^struct pytype_object_manager_traits$/;"	s	namespace:boost::python::converter	inherits:pyobject_type
query	/usr/include/boost/python/converter/registry.hpp	/^  BOOST_PYTHON_DECL registration const* query(type_info);$/;"	p	namespace:boost::python::converter::registry	signature:(type_info)
range	/usr/include/boost/python/args.hpp	/^      keyword_range range() const$/;"	f	struct:boost::python::detail::keywords_base	access:public	signature:() const
range	/usr/include/boost/python/args_fwd.hpp	/^      static keyword_range range() { return keyword_range(); }$/;"	f	struct:boost::python::detail::keywords	access:public	signature:()
range	/usr/include/boost/python/iterator.hpp	/^object range(Accessor1 start, Accessor2 finish)$/;"	f	namespace:boost::python	signature:(Accessor1 start, Accessor2 finish)
range	/usr/include/boost/python/iterator.hpp	/^object range(Accessor1 start, Accessor2 finish, NextPolicies* = 0)$/;"	f	namespace:boost::python	signature:(Accessor1 start, Accessor2 finish, NextPolicies* = 0)
range	/usr/include/boost/python/iterator.hpp	/^object range(Accessor1 start, Accessor2 finish, NextPolicies* = 0, boost::type<Target>* = 0)$/;"	f	namespace:boost::python	signature:(Accessor1 start, Accessor2 finish, NextPolicies* = 0, boost::type<Target>* = 0)
range	/usr/include/boost/python/slice.hpp	/^    struct range$/;"	s	class:boost::python::slice	access:public
ravel	/usr/include/boost/python/numeric.hpp	/^      void ravel();$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:()
raw_dispatcher	/usr/include/boost/python/raw_function.hpp	/^      raw_dispatcher(F f) : f(f) {}$/;"	f	struct:boost::python::detail::raw_dispatcher	access:public	signature:(F f)
raw_dispatcher	/usr/include/boost/python/raw_function.hpp	/^  struct raw_dispatcher$/;"	s	namespace:boost::python::detail
raw_function	/usr/include/boost/python/raw_function.hpp	/^object raw_function(F f, std::size_t min_args = 0)$/;"	f	namespace:boost::python	signature:(F f, std::size_t min_args = 0)
raw_function_pretty_signature	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static str raw_function_pretty_signature(function const *f, size_t n_overloads,  bool cpp_types = false);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:(function const *f, size_t n_overloads, bool cpp_types = false)
ref_type	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    typedef typename add_reference<typename add_cv<T>::type>::type ref_type;$/;"	t	struct:boost::python::converter::rvalue_from_python_data	access:private
reference	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	e	enum:boost::python::detail::decorated_type_info::decoration
reference	/usr/include/boost/python/object/forward.hpp	/^    typedef typename add_reference<typename add_const<T>::type>::type reference;$/;"	t	struct:boost::python::objects::reference_to_value	access:public
reference_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^    reference_arg_from_python(PyObject*);$/;"	p	struct:boost::python::converter::reference_arg_from_python	access:public	signature:(PyObject*)
reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline reference_arg_from_python<T>::reference_arg_from_python(PyObject* p)$/;"	f	class:boost::python::converter::reference_arg_from_python	signature:(PyObject* p)
reference_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct reference_arg_from_python : arg_lvalue_from_python_base$/;"	s	namespace:boost::python::converter	inherits:arg_lvalue_from_python_base
reference_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      reference_arg_to_python(T& x);$/;"	p	struct:boost::python::converter::detail::reference_arg_to_python	access:public	signature:(T& x)
reference_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline reference_arg_to_python<T>::reference_arg_to_python(T& x)$/;"	f	class:boost::python::converter::detail::reference_arg_to_python	signature:(T& x)
reference_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct reference_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
reference_existing_object	/usr/include/boost/python/reference_existing_object.hpp	/^struct reference_existing_object$/;"	s	namespace:boost::python
reference_existing_object_requires_a_pointer_or_reference_return_type	/usr/include/boost/python/reference_existing_object.hpp	/^  struct reference_existing_object_requires_a_pointer_or_reference_return_type$/;"	s	namespace:boost::python::detail
reference_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* reference_result_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
reference_to_pointer_	/usr/include/boost/python/detail/unwind_type.hpp	/^enum { direct_ = 0, pointer_ = 1, reference_ = 2, reference_to_pointer_ = 3 };$/;"	e	enum:boost::python::detail::__anon2
reference_to_value	/usr/include/boost/python/object/forward.hpp	/^    reference_to_value(reference x) : m_value(x) {}$/;"	f	struct:boost::python::objects::reference_to_value	access:public	signature:(reference x)
reference_to_value	/usr/include/boost/python/object/forward.hpp	/^struct reference_to_value$/;"	s	namespace:boost::python::objects
referent_size	/usr/include/boost/python/detail/referent_storage.hpp	/^  struct referent_size<T&>$/;"	s	namespace:boost::python::detail
referent_size	/usr/include/boost/python/detail/referent_storage.hpp	/^  template <class T> struct referent_size$/;"	s	namespace:boost::python::detail
referent_storage	/usr/include/boost/python/detail/referent_storage.hpp	/^struct referent_storage$/;"	s	namespace:boost::python::detail
register_	/usr/include/boost/python/detail/python_type.hpp	/^    static void register_()$/;"	f	struct:boost::python::detail::python_class	access:public	signature:()
register_	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_() \/\/ Register the runtime metadata.$/;"	f	struct:boost::python::objects::class_metadata	access:public	signature:()
register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_& cl, inaccessible* (* )(), Rgetstate (*getstate_fn)(Tgetstate), void (*setstate_fn)(Tsetstate, Ttuple), bool getstate_manages_dict)
register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_& cl, tuple (*getinitargs_fn)(Tgetinitargs), Rgetstate (*getstate_fn)(Tgetstate), void (*setstate_fn)(Tsetstate, Ttuple), bool getstate_manages_dict)
register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_& cl, tuple (*getinitargs_fn)(Tgetinitargs), inaccessible* (* )(), inaccessible* (* )(), bool)
register_	/usr/include/boost/python/object/pickle_support.hpp	/^    register_($/;"	f	struct:boost::python::detail::pickle_suite_registration	access:public	signature:( Class_&, ...)
register_aux	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_aux(python::wrapper<T2>*) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(python::wrapper<T2>*)
register_aux	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_aux(void*) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(void*)
register_aux2	/usr/include/boost/python/object/class_metadata.hpp	/^    inline static void register_aux2(T2*, Callback) $/;"	f	struct:boost::python::objects::class_metadata	access:private	signature:(T2*, Callback)
register_base_of	/usr/include/boost/python/object/class_metadata.hpp	/^struct register_base_of$/;"	s	namespace:boost::python::objects
register_container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        register_container_element()$/;"	f	struct:boost::python::detail::no_proxy_helper	access:public	signature:()
register_container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        register_container_element()$/;"	f	struct:boost::python::detail::proxy_helper	access:public	signature:()
register_conversion	/usr/include/boost/python/object/inheritance.hpp	/^inline void register_conversion($/;"	f	namespace:boost::python::objects	signature:( bool is_downcast = ::boost::is_base_and_derived<Source,Target>::value , Source* = 0, Target* = 0)
register_downcast	/usr/include/boost/python/object/class_metadata.hpp	/^    static inline void register_downcast(Base*, mpl::true_)$/;"	f	struct:boost::python::objects::register_base_of	access:private	signature:(Base*, mpl::true_)
register_downcast	/usr/include/boost/python/object/class_metadata.hpp	/^    static inline void register_downcast(void*, mpl::false_) {}$/;"	f	struct:boost::python::objects::register_base_of	access:private	signature:(void*, mpl::false_)
register_dynamic_id	/usr/include/boost/python/object/inheritance.hpp	/^void register_dynamic_id(T* = 0)$/;"	f	namespace:boost::python::objects	signature:(T* = 0)
register_dynamic_id_aux	/usr/include/boost/python/object/inheritance.hpp	/^BOOST_PYTHON_DECL void register_dynamic_id_aux($/;"	p	namespace:boost::python::objects	signature:( class_id static_id, dynamic_id_function get_dynamic_id)
register_exception_handler	/usr/include/boost/python/detail/exception_handler.hpp	/^BOOST_PYTHON_DECL void register_exception_handler(handler_function const& f);$/;"	p	namespace:boost::python::detail	signature:(handler_function const& f)
register_exception_translator	/usr/include/boost/python/exception_translator.hpp	/^void register_exception_translator(Translate translate, boost::type<ExceptionType>* = 0)$/;"	f	namespace:boost::python	signature:(Translate translate, boost::type<ExceptionType>* = 0)
register_self	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    void register_self()$/;"	f	struct:boost::python::opaque	access:private	signature:()
register_shared_ptr0	/usr/include/boost/python/converter/registered.hpp	/^  register_shared_ptr0(...)$/;"	f	namespace:boost::python::converter::detail	signature:(....)
register_shared_ptr0	/usr/include/boost/python/converter/registered.hpp	/^  register_shared_ptr0(shared_ptr<T>*)$/;"	f	namespace:boost::python::converter::detail	signature:(shared_ptr<T>*)
register_shared_ptr1	/usr/include/boost/python/converter/registered.hpp	/^  register_shared_ptr1(T const volatile*)$/;"	f	namespace:boost::python::converter::detail	signature:(T const volatile*)
register_shared_ptr_from_python_and_casts	/usr/include/boost/python/object/class_metadata.hpp	/^inline void register_shared_ptr_from_python_and_casts(T*, Bases)$/;"	f	namespace:boost::python::objects	signature:(T*, Bases)
registered	/usr/include/boost/python/converter/registered.hpp	/^struct registered$/;"	s	namespace:boost::python::converter	inherits:detail::registered_base
registered	/usr/include/boost/python/converter/registered.hpp	/^struct registered<T&>$/;"	s	namespace:boost::python::converter	inherits:registered
registered_base	/usr/include/boost/python/converter/registered.hpp	/^  struct registered_base$/;"	s	namespace:boost::python::converter::detail
registered_class_object	/usr/include/boost/python/object/class_detail.hpp	/^BOOST_PYTHON_DECL type_handle registered_class_object(type_info id);$/;"	p	namespace:boost::python::objects	signature:(type_info id)
registered_pointee	/usr/include/boost/python/converter/registered_pointee.hpp	/^struct registered_pointee$/;"	s	namespace:boost::python::converter	inherits:detail::registered_pointee_base
registered_pointee	/usr/include/boost/python/converter/registered_pointee.hpp	/^struct registered_pointee$/;"	s	namespace:boost::python::converter	inherits:registered
registered_pointee_base	/usr/include/boost/python/converter/registered_pointee.hpp	/^  struct registered_pointee_base$/;"	s	namespace:boost::python::converter::detail
registered_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^struct registered_pytype$/;"	s	namespace:boost::python::converter
registered_pytype_direct	/usr/include/boost/python/converter/pytype_function.hpp	/^struct registered_pytype_direct$/;"	s	namespace:boost::python::converter
registration	/usr/include/boost/python/converter/registrations.hpp	/^    explicit registration(type_info target, bool is_shared_ptr = false);$/;"	p	struct:boost::python::converter::registration	access:public	signature:(type_info target, bool is_shared_ptr = false)
registration	/usr/include/boost/python/converter/registrations.hpp	/^inline registration::registration(type_info target_type, bool is_shared_ptr)$/;"	f	class:boost::python::converter::registration	signature:(type_info target_type, bool is_shared_ptr)
registration	/usr/include/boost/python/converter/registrations.hpp	/^struct BOOST_PYTHON_DECL registration$/;"	s	namespace:boost::python::converter
registry	/usr/include/boost/python/converter/registry.hpp	/^namespace registry$/;"	n	namespace:boost::python::converter
registry_lookup1	/usr/include/boost/python/converter/registered.hpp	/^  registry_lookup1(type<T>)$/;"	f	namespace:boost::python::converter::detail	signature:(type<T>)
registry_lookup1	/usr/include/boost/python/converter/registered.hpp	/^  registry_lookup1(type<const volatile void>)$/;"	f	namespace:boost::python::converter::detail	signature:(type<const volatile void>)
registry_lookup2	/usr/include/boost/python/converter/registered.hpp	/^  registry_lookup2(T&(*)())$/;"	f	namespace:boost::python::converter::detail	signature:(T&(*)())
registry_to_python_value	/usr/include/boost/python/to_python_value.hpp	/^  struct registry_to_python_value$/;"	s	namespace:boost::python::detail
reject_raw_object_helper	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct reject_raw_object_helper$/;"	s	namespace:boost::python::converter::detail
reject_raw_object_ptr	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline void reject_raw_object_ptr(T*)$/;"	f	namespace:boost::python::converter::detail	signature:(T*)
release	/usr/include/boost/python/converter/arg_to_python_base.hpp	/^      PyObject* release() { return m_ptr.release(); }$/;"	f	struct:boost::python::converter::detail::arg_to_python_base	access:public	signature:()
release	/usr/include/boost/python/handle.hpp	/^    T* release();$/;"	p	class:boost::python::handle	access:public	signature:()
release	/usr/include/boost/python/handle.hpp	/^inline T* handle<T>::release()$/;"	f	class:boost::python::handle	signature:()
remove	/usr/include/boost/python/list.hpp	/^      void remove(object_cref value); \/\/ remove first occurrence of value$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref value)
remove	/usr/include/boost/python/list.hpp	/^    void remove(T const& value)$/;"	f	class:boost::python::list	access:public	signature:(T const& value)
remove	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        remove(Proxy& proxy)$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:(Proxy& proxy)
remove	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        remove(Proxy& proxy)$/;"	f	class:boost::python::detail::proxy_links	access:public	signature:(Proxy& proxy)
repeat	/usr/include/boost/python/numeric.hpp	/^      object repeat(object const& repeats, long axis=0);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& repeats, long axis=0)
replace	/usr/include/boost/python/str.hpp	/^      str replace(object_cref old, object_cref new_) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref old, object_cref new_) const
replace	/usr/include/boost/python/str.hpp	/^      str replace(object_cref old, object_cref new_, object_cref maxsplit) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref old, object_cref new_, object_cref maxsplit) const
replace	/usr/include/boost/python/str.hpp	/^    str replace(T1 const& old, T2 const& new_) const $/;"	f	class:boost::python::str	access:public	signature:(T1 const& old, T2 const& new_) const
replace	/usr/include/boost/python/str.hpp	/^    str replace(T1 const& old, T2 const& new_, T3 const& maxsplit) const $/;"	f	class:boost::python::str	access:public	signature:(T1 const& old, T2 const& new_, T3 const& maxsplit) const
replace	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        replace($/;"	f	class:boost::python::detail::proxy_group	access:public	signature:( index_type from, index_type to, typename std::vector<PyObject*>::size_type len)
replace	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        replace($/;"	f	class:boost::python::detail::proxy_links	access:public	signature:( Container& container, index_type from, index_type to, index_type len)
replace_front2	/usr/include/boost/python/pure_virtual.hpp	/^  struct replace_front2$/;"	s	namespace:boost::python::detail
reset	/usr/include/boost/python/handle.hpp	/^    void reset();$/;"	p	class:boost::python::handle	access:public	signature:()
reset	/usr/include/boost/python/handle.hpp	/^inline void handle<T>::reset()$/;"	f	class:boost::python::handle	signature:()
resize	/usr/include/boost/python/numeric.hpp	/^      void resize(object const& shape);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& shape)
resize	/usr/include/boost/python/numeric.hpp	/^    void resize(Sequence const& x)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& x)
result	/usr/include/boost/python/converter/arg_from_python.hpp	/^    void*const& result() const;$/;"	p	struct:boost::python::converter::arg_lvalue_from_python_base	access:protected	signature:() const
result	/usr/include/boost/python/converter/arg_from_python.hpp	/^inline void*const& arg_lvalue_from_python_base::result() const$/;"	f	class:boost::python::converter::arg_lvalue_from_python_base	signature:() const
result	/usr/include/boost/python/detail/if_else.hpp	/^    template< typename T > struct result$/;"	s	struct:boost::python::detail::msvc70_aux::inherit_from	access:public
result	/usr/include/boost/python/detail/result.hpp	/^result(X const&, short) { return 0; }$/;"	f	namespace:boost::python::detail	signature:(X const&, short)
result_converter	/usr/include/boost/python/default_call_policies.hpp	/^    typedef default_result_converter result_converter;$/;"	t	struct:boost::python::default_call_policies	access:public
result_converter	/usr/include/boost/python/make_constructor.hpp	/^      typedef constructor_result_converter result_converter;$/;"	t	struct:boost::python::detail::constructor_policy	access:public
result_converter	/usr/include/boost/python/return_arg.hpp	/^    >::type result_converter;$/;"	t	struct:boost::python::return_arg	access:public
result_converter	/usr/include/boost/python/return_internal_reference.hpp	/^    >::type result_converter;$/;"	t	struct:boost::python::return_internal_reference	access:public
result_converter	/usr/include/boost/python/return_value_policy.hpp	/^    typedef ResultConverterGenerator result_converter;$/;"	t	struct:boost::python::return_value_policy	access:public
result_result	/usr/include/boost/python/detail/result.hpp	/^struct result_result$/;"	s	namespace:boost::python::detail
result_type	/usr/include/boost/python/arg_from_python.hpp	/^    typedef PyObject* const& result_type;$/;"	t	struct:boost::python::arg_from_python	access:public
result_type	/usr/include/boost/python/arg_from_python.hpp	/^    typedef PyObject* result_type;$/;"	t	struct:boost::python::arg_from_python	access:public
result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    >::type result_type;$/;"	t	struct:boost::python::converter::arg_rvalue_from_python	access:public
result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::back_reference_arg_from_python	access:public
result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::pointer_arg_from_python	access:public
result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::pointer_cref_arg_from_python	access:public
result_type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::reference_arg_from_python	access:public
result_type	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    typedef Ref result_type;$/;"	t	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public
result_type	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    typedef T result_type;$/;"	t	struct:boost::python::converter::object_manager_value_arg_from_python	access:public
result_type	/usr/include/boost/python/converter/pytype_function.hpp	/^    typedef python::type_info result_type;$/;"	t	struct:boost::python::converter::detail::unwind_type_id_helper	access:public
result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_object_manager_from_python	access:public
result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_pointer_from_python	access:public
result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_reference_from_python	access:public
result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::detail::return_rvalue_from_python	access:public
result_type	/usr/include/boost/python/converter/return_from_python.hpp	/^    typedef python::detail::returnable<void>::type result_type;$/;"	t	struct:boost::python::converter::return_from_python	access:public
result_type	/usr/include/boost/python/detail/caller.hpp	/^    typedef PyObject* result_type;$/;"	t	struct:boost::python::detail::caller	access:public
result_type	/usr/include/boost/python/detail/def_helper.hpp	/^          typedef typename Tuple::head_type result_type;$/;"	t	struct:boost::python::detail::tuple_extract_impl::apply	access:public
result_type	/usr/include/boost/python/detail/def_helper.hpp	/^          typedef typename next::result_type result_type;$/;"	t	struct:boost::python::detail::tuple_extract_impl::apply	access:public
result_type	/usr/include/boost/python/extract.hpp	/^      >::type result_type;$/;"	t	struct:boost::python::converter::extract_rvalue	access:public
result_type	/usr/include/boost/python/extract.hpp	/^      typedef Ptr result_type;$/;"	t	struct:boost::python::converter::extract_pointer	access:public
result_type	/usr/include/boost/python/extract.hpp	/^      typedef Ref result_type;$/;"	t	struct:boost::python::converter::extract_reference	access:public
result_type	/usr/include/boost/python/extract.hpp	/^      typedef T result_type;$/;"	t	struct:boost::python::converter::extract_object_manager	access:public
result_type	/usr/include/boost/python/extract.hpp	/^    typedef typename base::result_type result_type;$/;"	t	struct:boost::python::extract	access:public
result_type	/usr/include/boost/python/object/iterator.hpp	/^        >::type result_type;$/;"	t	struct:boost::python::objects::iterator_range::next	access:public
result_type	/usr/include/boost/python/object/iterator.hpp	/^        typedef Iterator result_type;$/;"	t	struct:boost::python::objects::iterator_range::next_ptr	access:public
ret	/usr/include/boost/python/detail/signature.hpp	/^    signature_element const *ret;$/;"	m	struct:boost::python::detail::py_func_sig_info	access:public
rethrow	/usr/include/boost/python/errors.hpp	/^namespace detail { inline void rethrow() { throw; } }$/;"	f	namespace:boost::python::detail	signature:()
return_arg	/usr/include/boost/python/return_arg.hpp	/^struct return_arg : Base$/;"	s	namespace:boost::python	inherits:Base
return_arg_pos_argument_must_be_positive	/usr/include/boost/python/return_arg.hpp	/^  struct return_arg_pos_argument_must_be_positive$/;"	s	namespace:boost::python::detail
return_by_value	/usr/include/boost/python/return_by_value.hpp	/^struct return_by_value$/;"	s	namespace:boost::python
return_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^struct return_from_python$/;"	s	namespace:boost::python::converter	inherits:detail::select_return_from_python::type
return_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^struct return_from_python<void>$/;"	s	namespace:boost::python::converter
return_internal_reference	/usr/include/boost/python/return_internal_reference.hpp	/^struct return_internal_reference$/;"	s	namespace:boost::python	inherits:with_custodian_and_ward_postcall
return_internal_reference_owner_arg_must_be_greater_than_zero	/usr/include/boost/python/return_internal_reference.hpp	/^  struct return_internal_reference_owner_arg_must_be_greater_than_zero$/;"	s	namespace:boost::python::detail
return_none	/usr/include/boost/python/return_arg.hpp	/^  struct return_none$/;"	s	namespace:boost::python::detail
return_object_manager_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_object_manager_from_python$/;"	s	namespace:boost::python::converter::detail
return_opaque_pointer	/usr/include/boost/python/return_opaque_pointer.hpp	/^struct return_opaque_pointer$/;"	s	namespace:boost::python
return_pointer_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_pointer_from_python$/;"	s	namespace:boost::python::converter::detail
return_policy	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        struct return_policy : return_internal_reference<> {};$/;"	s	class:boost::python::indexing_suite	inherits:return_internal_reference	access:private
return_policy	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        typedef return_internal_reference<> return_policy;$/;"	t	class:boost::python::indexing_suite	access:private
return_reference_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_reference_from_python$/;"	s	namespace:boost::python::converter::detail
return_rvalue_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^      return_rvalue_from_python();$/;"	p	struct:boost::python::converter::detail::return_rvalue_from_python	access:public	signature:()
return_rvalue_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  inline return_rvalue_from_python<T>::return_rvalue_from_python()$/;"	f	class:boost::python::converter::detail::return_rvalue_from_python	signature:()
return_rvalue_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct return_rvalue_from_python$/;"	s	namespace:boost::python::converter::detail
return_self	/usr/include/boost/python/return_arg.hpp	/^struct return_self $/;"	s	namespace:boost::python	inherits:return_arg
return_value_policy	/usr/include/boost/python/return_value_policy.hpp	/^struct return_value_policy : BasePolicy_$/;"	s	namespace:boost::python	inherits:BasePolicy_
returnable	/usr/include/boost/python/detail/void_return.hpp	/^struct returnable$/;"	s	namespace:boost::python::detail
returnable	/usr/include/boost/python/detail/void_return.hpp	/^struct returnable<void>$/;"	s	namespace:boost::python::detail
returnable	/usr/include/boost/python/detail/void_return.hpp	/^template <> struct returnable<const void> : returnable<void> {};$/;"	s	namespace:boost::python::detail	inherits:returnable
returnable	/usr/include/boost/python/detail/void_return.hpp	/^template <> struct returnable<const volatile void> : returnable<void> {};$/;"	s	namespace:boost::python::detail	inherits:returnable
returnable	/usr/include/boost/python/detail/void_return.hpp	/^template <> struct returnable<volatile void> : returnable<void> {};$/;"	s	namespace:boost::python::detail	inherits:returnable
reverse	/usr/include/boost/python/list.hpp	/^      void reverse(); \/\/ reverse *IN PLACE*$/;"	p	struct:boost::python::detail::list_base	access:public	signature:()
rfind	/usr/include/boost/python/str.hpp	/^      long rfind(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
rfind	/usr/include/boost/python/str.hpp	/^      long rfind(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
rfind	/usr/include/boost/python/str.hpp	/^      long rfind(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
rfind	/usr/include/boost/python/str.hpp	/^    long rfind(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
rfind	/usr/include/boost/python/str.hpp	/^    long rfind(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
rfind	/usr/include/boost/python/str.hpp	/^    long rfind(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
rindex	/usr/include/boost/python/str.hpp	/^      long rindex(object_cref sub) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub) const
rindex	/usr/include/boost/python/str.hpp	/^      long rindex(object_cref sub, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start) const
rindex	/usr/include/boost/python/str.hpp	/^      long rindex(object_cref sub, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sub, object_cref start, object_cref end) const
rindex	/usr/include/boost/python/str.hpp	/^    long rindex(T const& sub) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sub) const
rindex	/usr/include/boost/python/str.hpp	/^    long rindex(T1 const& sub, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start) const
rindex	/usr/include/boost/python/str.hpp	/^    long rindex(T1 const& sub, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sub, T2 const& start, T3 const& end) const
rjust	/usr/include/boost/python/str.hpp	/^      str rjust(object_cref width) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref width) const
rjust	/usr/include/boost/python/str.hpp	/^    str rjust(T const& width) const$/;"	f	class:boost::python::str	access:public	signature:(T const& width) const
rstrip	/usr/include/boost/python/str.hpp	/^      str rstrip() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
rvalue_chain	/usr/include/boost/python/converter/registrations.hpp	/^    rvalue_from_python_chain* rvalue_chain;$/;"	m	struct:boost::python::converter::registration	access:public
rvalue_from_python_chain	/usr/include/boost/python/converter/registrations.hpp	/^struct rvalue_from_python_chain$/;"	s	namespace:boost::python::converter
rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    rvalue_from_python_data(rvalue_from_python_stage1_data const&);$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:(rvalue_from_python_stage1_data const&)
rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    rvalue_from_python_data(void* convertible);$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:(void* convertible)
rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^inline rvalue_from_python_data<T>::rvalue_from_python_data(rvalue_from_python_stage1_data const& _stage1)$/;"	f	class:boost::python::converter::rvalue_from_python_data	signature:(rvalue_from_python_stage1_data const& _stage1)
rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^inline rvalue_from_python_data<T>::rvalue_from_python_data(void* convertible)$/;"	f	class:boost::python::converter::rvalue_from_python_data	signature:(void* convertible)
rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^struct rvalue_from_python_data : rvalue_from_python_storage<T>$/;"	s	namespace:boost::python::converter	inherits:rvalue_from_python_storage
rvalue_from_python_stage1	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL rvalue_from_python_stage1_data rvalue_from_python_stage1($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, registration const&)
rvalue_from_python_stage1_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^struct rvalue_from_python_stage1_data$/;"	s	namespace:boost::python::converter
rvalue_from_python_stage2	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* rvalue_from_python_stage2($/;"	p	namespace:boost::python::converter	signature:( PyObject* source, rvalue_from_python_stage1_data&, registration const&)
rvalue_from_python_storage	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^struct rvalue_from_python_storage$/;"	s	namespace:boost::python::converter
rvalue_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void* rvalue_result_from_python($/;"	p	namespace:boost::python::converter	signature:( PyObject*, rvalue_from_python_stage1_data&)
same_result_converter	/usr/include/boost/python/make_constructor.hpp	/^          > same_result_converter;$/;"	t	struct:boost::python::detail::constructor_policy	access:public
sample_object	/usr/include/boost/python/converter/object_manager.hpp	/^      static T sample_object;$/;"	m	struct:boost::python::converter::detail::is_reference_to_object_manager_ref	access:public
scope	/usr/include/boost/python/scope.hpp	/^    inline scope();$/;"	p	class:boost::python::scope	access:public	signature:()
scope	/usr/include/boost/python/scope.hpp	/^    inline scope(object const&);$/;"	p	class:boost::python::scope	access:public	signature:(object const&)
scope	/usr/include/boost/python/scope.hpp	/^    inline scope(scope const&);$/;"	p	class:boost::python::scope	access:public	signature:(scope const&)
scope	/usr/include/boost/python/scope.hpp	/^class scope$/;"	c	namespace:boost::python	inherits:object
scope	/usr/include/boost/python/scope.hpp	/^inline scope::scope()$/;"	f	class:boost::python::scope	signature:()
scope	/usr/include/boost/python/scope.hpp	/^inline scope::scope(object const& new_scope)$/;"	f	class:boost::python::scope	signature:(object const& new_scope)
scope	/usr/include/boost/python/scope.hpp	/^inline scope::scope(scope const& new_scope)$/;"	f	class:boost::python::scope	signature:(scope const& new_scope)
scope_setattr_doc	/usr/include/boost/python/detail/scope.hpp	/^void BOOST_PYTHON_DECL scope_setattr_doc(char const* name, object const& obj, char const* doc);$/;"	p	namespace:boost::python::detail	signature:(char const* name, object const& obj, char const* doc)
select_arg_from_python	/usr/include/boost/python/converter/arg_from_python.hpp	/^struct select_arg_from_python$/;"	s	namespace:boost::python::converter
select_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct select_arg_to_python$/;"	s	namespace:boost::python::converter::detail
select_bases	/usr/include/boost/python/bases.hpp	/^    struct select_bases$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
select_extract	/usr/include/boost/python/extract.hpp	/^  struct select_extract$/;"	s	namespace:boost::python::converter
select_held_type	/usr/include/boost/python/object/class_metadata.hpp	/^struct select_held_type$/;"	s	namespace:boost::python::objects	inherits:mpl::if_
select_result_converter	/usr/include/boost/python/detail/caller.hpp	/^struct select_result_converter$/;"	s	namespace:boost::python::detail	inherits:mpl::eval_if
select_return_from_python	/usr/include/boost/python/converter/return_from_python.hpp	/^  struct select_return_from_python$/;"	s	namespace:boost::python::converter::detail
self	/usr/include/boost/python/class.hpp	/^    typedef class_<W,X1,X2,X3> self;$/;"	t	class:boost::python::class_	access:public
self	/usr/include/boost/python/self.hpp	/^  enum self_t { self };$/;"	e	enum:boost::python::self_ns::self_t
self_ns	/usr/include/boost/python/operators.hpp	/^namespace self_ns$/;"	n	namespace:boost::python
self_ns	/usr/include/boost/python/self.hpp	/^namespace self_ns$/;"	n	namespace:boost::python
self_t	/usr/include/boost/python/init.hpp	/^    typedef init<BOOST_PYTHON_OVERLOAD_ARGS> self_t;$/;"	t	class:boost::python::init	access:public
self_t	/usr/include/boost/python/self.hpp	/^  enum self_t { self };$/;"	g	namespace:boost::python::self_ns
self_t	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        typedef container_element<Container, Index, Policies> self_t;$/;"	t	class:boost::python::detail::container_element	access:public
set	/usr/include/boost/python/object_attributes.hpp	/^    static object const& set(object const& target, char const* key, object const& value);$/;"	p	struct:boost::python::api::attribute_policies	access:public	signature:(object const& target, char const* key, object const& value)
set	/usr/include/boost/python/object_attributes.hpp	/^    static object const& set(object const& target, object const& key, object const& value);$/;"	p	struct:boost::python::api::objattribute_policies	access:public	signature:(object const& target, object const& key, object const& value)
set	/usr/include/boost/python/object_attributes.hpp	/^inline object const& attribute_policies::set($/;"	f	class:boost::python::api::attribute_policies	signature:( object const& target , char const* key , object const& value)
set	/usr/include/boost/python/object_attributes.hpp	/^inline object const& objattribute_policies::set($/;"	f	class:boost::python::api::objattribute_policies	signature:( object const& target , object const& key , object const& value)
set	/usr/include/boost/python/object_items.hpp	/^    static object const& set(object const& target, object const& key, object const& value);$/;"	p	struct:boost::python::api::item_policies	access:public	signature:(object const& target, object const& key, object const& value)
set	/usr/include/boost/python/object_items.hpp	/^inline object const& item_policies::set($/;"	f	class:boost::python::api::item_policies	signature:( object const& target , object const& key , object const& value)
set	/usr/include/boost/python/object_slices.hpp	/^    static object const& set(object const& target, key_type const& key, object const& value);$/;"	p	struct:boost::python::api::slice_policies	access:public	signature:(object const& target, key_type const& key, object const& value)
set	/usr/include/boost/python/object_slices.hpp	/^inline object const& slice_policies::set($/;"	f	class:boost::python::api::slice_policies	signature:( object const& target , key_type const& key , object const& value)
set_index	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        set_index(Index i)$/;"	f	class:boost::python::detail::container_element	access:public	signature:(Index i)
set_instance_size	/usr/include/boost/python/object/class.hpp	/^    void set_instance_size(std::size_t bytes);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(std::size_t bytes)
set_item	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        set_item(Container& container, index_type i, data_type const& v)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container, index_type i, data_type const& v)
set_item	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        set_item(Container& container, index_type i, data_type const& v)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type i, data_type const& v)
set_module_and_type	/usr/include/boost/python/numeric.hpp	/^    static BOOST_PYTHON_DECL void set_module_and_type(char const* package_name = 0, char const* type_attribute_name = 0);$/;"	p	class:boost::python::numeric::array	access:public	signature:(char const* package_name = 0, char const* type_attribute_name = 0)
set_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        set_slice(Container& container, index_type from, $/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to, Iter first, Iter last)
set_slice	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        set_slice(Container& container, index_type from, $/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container, index_type from, index_type to, data_type const& v)
setattr	/usr/include/boost/python/class.hpp	/^    self& setattr(char const* name, U const& x)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name, U const& x)
setattr	/usr/include/boost/python/object/class.hpp	/^    void setattr(char const* name, object const&);$/;"	p	struct:boost::python::objects::class_base	access:protected	signature:(char const* name, object const&)
setattr	/usr/include/boost/python/object_protocol.hpp	/^void setattr(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))
setattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setattr(object const& target, char const* key, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, char const* key, object const& value)
setattr	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setattr(object const& target, object const& key, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key, object const& value)
setdefault	/usr/include/boost/python/dict.hpp	/^      object setdefault(object_cref k);$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k)
setdefault	/usr/include/boost/python/dict.hpp	/^      object setdefault(object_cref k, object_cref d);$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref k, object_cref d)
setdefault	/usr/include/boost/python/dict.hpp	/^    object setdefault(T const& k)$/;"	f	class:boost::python::dict	access:public	signature:(T const& k)
setdefault	/usr/include/boost/python/dict.hpp	/^    object setdefault(T1 const& k, T2 const& d)$/;"	f	class:boost::python::dict	access:public	signature:(T1 const& k, T2 const& d)
setflat	/usr/include/boost/python/numeric.hpp	/^      void setflat(object const& flat);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& flat)
setitem	/usr/include/boost/python/object_protocol.hpp	/^void setitem(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))$/;"	f	namespace:boost::python::api	signature:(object const& target, Key const& key, Value const& value BOOST_PYTHON_NO_ARRAY_ARG(Key))
setitem	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setitem(object const& target, object const& key, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, object const& key, object const& value)
setshape	/usr/include/boost/python/numeric.hpp	/^      void setshape(object const& shape);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& shape)
setshape	/usr/include/boost/python/numeric.hpp	/^    void setshape(Sequence const& x)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& x)
setslice	/usr/include/boost/python/object_protocol.hpp	/^void setslice(object const& target, Begin const& begin, End const& end, Value const& value)$/;"	f	namespace:boost::python::api	signature:(object const& target, Begin const& begin, End const& end, Value const& value)
setslice	/usr/include/boost/python/object_protocol_core.hpp	/^  BOOST_PYTHON_DECL void setslice(object const& target, handle<> const& begin, handle<> const& end, object const& value);$/;"	p	namespace:boost::python::api	signature:(object const& target, handle<> const& begin, handle<> const& end, object const& value)
setstate	/usr/include/boost/python/object/pickle_support.hpp	/^    static inaccessible* setstate() { return 0; }$/;"	f	struct:boost::python::pickle_suite	access:public	signature:()
shared_ptr_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      shared_ptr_arg_to_python(T const& x);$/;"	p	struct:boost::python::converter::detail::shared_ptr_arg_to_python	access:public	signature:(T const& x)
shared_ptr_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline shared_ptr_arg_to_python<T>::shared_ptr_arg_to_python(T const& x)$/;"	f	class:boost::python::converter::detail::shared_ptr_arg_to_python	signature:(T const& x)
shared_ptr_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct shared_ptr_arg_to_python : handle<>$/;"	s	namespace:boost::python::converter::detail	inherits:handle
shared_ptr_deleter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    shared_ptr_deleter(handle<> owner);$/;"	p	struct:boost::python::converter::shared_ptr_deleter	access:public	signature:(handle< owner)
shared_ptr_deleter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^struct BOOST_PYTHON_DECL shared_ptr_deleter$/;"	s	namespace:boost::python::converter
shared_ptr_from_python	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^    shared_ptr_from_python()$/;"	f	struct:boost::python::converter::shared_ptr_from_python	access:public	signature:()
shared_ptr_from_python	/usr/include/boost/python/converter/shared_ptr_from_python.hpp	/^struct shared_ptr_from_python$/;"	s	namespace:boost::python::converter
shared_ptr_to_python	/usr/include/boost/python/converter/shared_ptr_to_python.hpp	/^PyObject* shared_ptr_to_python(shared_ptr<T> const& x)$/;"	f	namespace:boost::python::converter	signature:(shared_ptr<T> const& x)
shared_ptr_to_python_value	/usr/include/boost/python/to_python_value.hpp	/^  struct shared_ptr_to_python_value$/;"	s	namespace:boost::python::detail
show_cpp_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      static volatile bool show_cpp_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
show_py_signatures_	/usr/include/boost/python/docstring_options.hpp	/^      static volatile bool show_py_signatures_;$/;"	m	class:boost::python::docstring_options	access:private
show_user_defined_	/usr/include/boost/python/docstring_options.hpp	/^      static volatile bool show_user_defined_;$/;"	m	class:boost::python::docstring_options	access:private
signature	/usr/include/boost/python/detail/signature.hpp	/^    signature_element const *signature;$/;"	m	struct:boost::python::detail::py_func_sig_info	access:public
signature	/usr/include/boost/python/detail/signature.hpp	/^struct signature$/;"	s	namespace:boost::python::detail	inherits:signature_base_select::type
signature	/usr/include/boost/python/init.hpp	/^    >::type signature;$/;"	t	class:boost::python::init	access:public
signature	/usr/include/boost/python/init.hpp	/^    typedef typename InitT::signature signature;$/;"	t	class:boost::python::init_with_call_policies	access:public
signature	/usr/include/boost/python/object/function.hpp	/^    object signature(bool show_return_type=false) const;$/;"	p	struct:boost::python::objects::function	access:private	signature:(bool show_return_type=false) const
signature	/usr/include/boost/python/object/py_function.hpp	/^    python::detail::signature_element const* signature() const$/;"	f	class:boost::python::objects::py_function::python::detail	access:public	signature:() const
signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const = 0;$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:() const
signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const$/;"	f	struct:boost::python::objects::caller_py_function_impl	access:public	signature:() const
signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const$/;"	f	struct:boost::python::objects::full_py_function_impl	access:public	signature:() const
signature	/usr/include/boost/python/object/py_function.hpp	/^    virtual python::detail::py_func_sig_info signature() const$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:() const
signature_	/usr/include/boost/python/init.hpp	/^    typedef detail::type_list<BOOST_PYTHON_OVERLOAD_ARGS> signature_;$/;"	t	class:boost::python::init	access:public
signature_base_select	/usr/include/boost/python/detail/signature.hpp	/^struct signature_base_select$/;"	s	namespace:boost::python::detail
signature_element	/usr/include/boost/python/detail/signature.hpp	/^struct signature_element$/;"	s	namespace:boost::python::detail
signature_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^    signature_py_function_impl(Caller const& caller)$/;"	f	struct:boost::python::objects::signature_py_function_impl	access:public	signature:(Caller const& caller)
signature_py_function_impl	/usr/include/boost/python/object/py_function.hpp	/^struct signature_py_function_impl : py_function_impl_base$/;"	s	namespace:boost::python::objects	inherits:py_function_impl_base
signatures	/usr/include/boost/python/object/function.hpp	/^    object signatures(bool show_return_type=false) const;$/;"	p	struct:boost::python::objects::function	access:private	signature:(bool show_return_type=false) const
size	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        size() const$/;"	f	class:boost::python::detail::proxy_group	access:public	signature:() const
size	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        size(Container& container)$/;"	f	class:boost::python::map_indexing_suite	access:public	signature:(Container& container)
size	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        size(Container& container)$/;"	f	class:boost::python::vector_indexing_suite	access:public	signature:(Container& container)
size_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::size_type size_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
size_type	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^        typedef typename Container::size_type size_type;$/;"	t	class:boost::python::vector_indexing_suite	access:public
slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(object_cref, object_cref) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, object_cref) const
slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(object_cref, slice_nil) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, slice_nil) const
slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(slice_nil, object_cref) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, object_cref) const
slice	/usr/include/boost/python/object_core.hpp	/^      const_object_slice slice(slice_nil, slice_nil) const;$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, slice_nil) const
slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(object_cref, object_cref);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, object_cref)
slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(object_cref, slice_nil);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(object_cref, slice_nil)
slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(slice_nil, object_cref);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, object_cref)
slice	/usr/include/boost/python/object_core.hpp	/^      object_slice slice(slice_nil, slice_nil);$/;"	p	class:boost::python::api::object_operators	access:public	signature:(slice_nil, slice_nil)
slice	/usr/include/boost/python/object_core.hpp	/^      slice(T const& start, V const& end) const$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& start, V const& end) const
slice	/usr/include/boost/python/object_core.hpp	/^      slice(T const& start, V const& end)$/;"	p	class:boost::python::api::object_operators	access:public	signature:(T const& start, V const& end)
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(T const& start, V const& end) const$/;"	f	class:boost::python::api::object_operators	signature:(T const& start, V const& end) const
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(T const& start, V const& end)$/;"	f	class:boost::python::api::object_operators	signature:(T const& start, V const& end)
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, object_cref finish) const$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, object_cref finish) const
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, object_cref finish)$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, object_cref finish)
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, slice_nil) const$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, slice_nil) const
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(object_cref start, slice_nil)$/;"	f	class:boost::python::api::object_operators	signature:(object_cref start, slice_nil)
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, object_cref finish) const$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, object_cref finish) const
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, object_cref finish)$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, object_cref finish)
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, slice_nil) const$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, slice_nil) const
slice	/usr/include/boost/python/object_slices.hpp	/^object_operators<U>::slice(slice_nil, slice_nil)$/;"	f	class:boost::python::api::object_operators	signature:(slice_nil, slice_nil)
slice	/usr/include/boost/python/slice.hpp	/^    slice( Integer1 start, Integer2 stop)$/;"	f	class:boost::python::slice	access:public	signature:( Integer1 start, Integer2 stop)
slice	/usr/include/boost/python/slice.hpp	/^    slice( Integer1 start, Integer2 stop, Integer3 stride)$/;"	f	class:boost::python::slice	access:public	signature:( Integer1 start, Integer2 stop, Integer3 stride)
slice	/usr/include/boost/python/slice.hpp	/^    slice() : base(0,0,0) {}$/;"	f	class:boost::python::slice	access:public	signature:()
slice	/usr/include/boost/python/slice.hpp	/^class slice : public detail::slice_base$/;"	c	namespace:boost::python	inherits:detail::slice_base
slice_base	/usr/include/boost/python/slice.hpp	/^      explicit slice_base(PyObject*, PyObject*, PyObject*);$/;"	p	class:boost::python::detail::slice_base	access:protected	signature:(PyObject*, PyObject*, PyObject*)
slice_base	/usr/include/boost/python/slice.hpp	/^  class BOOST_PYTHON_DECL slice_base : public object$/;"	c	namespace:boost::python::detail	inherits:object
slice_bound	/usr/include/boost/python/slice_nil.hpp	/^struct slice_bound$/;"	s	namespace:boost::python::api
slice_bound	/usr/include/boost/python/slice_nil.hpp	/^struct slice_bound<slice_nil>$/;"	s	namespace:boost::python::api
slice_handler	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        slice_handler;$/;"	t	class:boost::python::indexing_suite	access:private
slice_helper	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^    struct slice_helper$/;"	s	namespace:boost::python::detail
slice_key	/usr/include/boost/python/object_slices.hpp	/^inline slice_policies::key_type slice_key(T x, U y)$/;"	f	namespace:boost::python::api	signature:(T x, U y)
slice_nil	/usr/include/boost/python/slice_nil.hpp	/^    slice_nil() : object() {}$/;"	f	class:boost::python::api::slice_nil	access:public	signature:()
slice_nil	/usr/include/boost/python/slice_nil.hpp	/^class slice_nil : public object$/;"	c	namespace:boost::python::api	inherits:object
slice_policies	/usr/include/boost/python/object_slices.hpp	/^struct slice_policies : const_slice_policies$/;"	s	namespace:boost::python::api	inherits:const_slice_policies
slicing_not_suported	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        slicing_not_suported()$/;"	f	struct:boost::python::detail::no_slice_helper	access:public	signature:()
so_load_function	/usr/include/boost/python/detail/aix_init_module.hpp	/^    typedef PyObject* (*so_load_function)(char*,char*,FILE*);$/;"	t
sort	/usr/include/boost/python/list.hpp	/^      void sort(); \/\/  sort *IN PLACE*; if given, cmpfunc(x, y) -> -1, 0, 1$/;"	p	struct:boost::python::detail::list_base	access:public	signature:()
sort	/usr/include/boost/python/list.hpp	/^      void sort(args_proxy const &args, $/;"	p	struct:boost::python::detail::list_base	access:public	signature:(args_proxy const &args, kwds_proxy const &kwds)
sort	/usr/include/boost/python/list.hpp	/^      void sort(object_cref cmpfunc);$/;"	p	struct:boost::python::detail::list_base	access:public	signature:(object_cref cmpfunc)
sort	/usr/include/boost/python/list.hpp	/^    void sort() { base::sort(); }$/;"	f	class:boost::python::list	access:public	signature:()
sort	/usr/include/boost/python/list.hpp	/^    void sort(T const& value)$/;"	f	class:boost::python::list	access:public	signature:(T const& value)
sort	/usr/include/boost/python/numeric.hpp	/^      void sort();$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:()
source	/usr/include/boost/python/back_reference.hpp	/^    source_t const& source() const;$/;"	p	struct:boost::python::back_reference	access:public	signature:() const
source	/usr/include/boost/python/back_reference.hpp	/^typename back_reference<T>::source_t const& back_reference<T>::source() const$/;"	f	class:boost::python::back_reference::back_reference	signature:() const
source_t	/usr/include/boost/python/back_reference.hpp	/^    typedef typename detail::dependent<object,T>::type source_t;$/;"	t	struct:boost::python::back_reference	access:private
specifies_bases	/usr/include/boost/python/bases.hpp	/^    struct specifies_bases< bases< BOOST_PYTHON_BASE_PARAMS > >$/;"	s	namespace:boost::python::detail	inherits:mpl::true_
specifies_bases	/usr/include/boost/python/bases.hpp	/^    template <class T> struct specifies_bases$/;"	s	namespace:boost::python::detail	inherits:mpl::false_
specify_a_return_value_policy_to_wrap_functions_returning	/usr/include/boost/python/default_call_policies.hpp	/^  template <class T> struct specify_a_return_value_policy_to_wrap_functions_returning$/;"	s	namespace:boost::python::detail
split	/usr/include/boost/python/str.hpp	/^      list split() const; $/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
split	/usr/include/boost/python/str.hpp	/^      list split(object_cref sep) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sep) const
split	/usr/include/boost/python/str.hpp	/^      list split(object_cref sep, object_cref maxsplit) const; $/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref sep, object_cref maxsplit) const
split	/usr/include/boost/python/str.hpp	/^    list split() const { return base::split(); }$/;"	f	class:boost::python::str	access:public	signature:() const
split	/usr/include/boost/python/str.hpp	/^    list split(T const& sep) const$/;"	f	class:boost::python::str	access:public	signature:(T const& sep) const
split	/usr/include/boost/python/str.hpp	/^    list split(T1 const& sep, T2 const& maxsplit) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& sep, T2 const& maxsplit) const
split_seq_overloads	/usr/include/boost/python/object/function_doc_signature.hpp	/^    static std::vector<function const*> split_seq_overloads( const std::vector<function const *> &funcs, bool split_on_doc_change);$/;"	p	class:boost::python::objects::function_doc_signature_generator	access:private	signature:( const std::vector<function const *> &funcs, bool split_on_doc_change)
splitlines	/usr/include/boost/python/str.hpp	/^      list splitlines() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
splitlines	/usr/include/boost/python/str.hpp	/^      list splitlines(object_cref keepends) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref keepends) const
splitlines	/usr/include/boost/python/str.hpp	/^    list splitlines() const { return base::splitlines(); }$/;"	f	class:boost::python::str	access:public	signature:() const
splitlines	/usr/include/boost/python/str.hpp	/^    list splitlines(T const& keepends) const$/;"	f	class:boost::python::str	access:public	signature:(T const& keepends) const
ssize_t	/usr/include/boost/python/ssize_t.hpp	/^typedef Py_ssize_t ssize_t;$/;"	t	namespace:boost::python
ssize_t_max	/usr/include/boost/python/ssize_t.hpp	/^ssize_t const ssize_t_max = PY_SSIZE_T_MAX;$/;"	m	namespace:boost::python
ssize_t_min	/usr/include/boost/python/ssize_t.hpp	/^ssize_t const ssize_t_min = PY_SSIZE_T_MIN;$/;"	m	namespace:boost::python
stage1	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    rvalue_from_python_stage1_data stage1;$/;"	m	struct:boost::python::converter::rvalue_from_python_storage	access:public
start	/usr/include/boost/python/slice.hpp	/^        RandomAccessIterator start;$/;"	m	struct:boost::python::slice::range	access:public
start	/usr/include/boost/python/slice.hpp	/^      object start() const;$/;"	p	class:boost::python::detail::slice_base	access:public	signature:() const
startswith	/usr/include/boost/python/str.hpp	/^      bool startswith(object_cref prefix) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref prefix) const
startswith	/usr/include/boost/python/str.hpp	/^      bool startswith(object_cref prefix, object_cref start) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref prefix, object_cref start) const
startswith	/usr/include/boost/python/str.hpp	/^      bool startswith(object_cref prefix, object_cref start, object_cref end) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref prefix, object_cref start, object_cref end) const
startswith	/usr/include/boost/python/str.hpp	/^    bool startswith(T const& prefix) const$/;"	f	class:boost::python::str	access:public	signature:(T const& prefix) const
startswith	/usr/include/boost/python/str.hpp	/^    bool startswith(T1 const& prefix, T2 const& start) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& prefix, T2 const& start) const
startswith	/usr/include/boost/python/str.hpp	/^    bool startswith(T1 const& prefix, T2 const& start, T3 const& end) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& prefix, T2 const& start, T3 const& end) const
staticmethod	/usr/include/boost/python/class.hpp	/^    self& staticmethod(char const* name)$/;"	f	class:boost::python::class_	access:public	signature:(char const* name)
step	/usr/include/boost/python/slice.hpp	/^        typename iterator_difference<RandomAccessIterator>::type step;$/;"	m	struct:boost::python::slice::range	access:public
step	/usr/include/boost/python/slice.hpp	/^      object step() const;$/;"	p	class:boost::python::detail::slice_base	access:public	signature:() const
stl_input_iterator	/usr/include/boost/python/stl_iterator.hpp	/^    stl_input_iterator()$/;"	f	struct:boost::python::stl_input_iterator	access:public	signature:()
stl_input_iterator	/usr/include/boost/python/stl_iterator.hpp	/^    stl_input_iterator(boost::python::object const &ob)$/;"	f	struct:boost::python::stl_input_iterator	access:public	signature:(boost::python::object const &ob)
stl_input_iterator	/usr/include/boost/python/stl_iterator.hpp	/^struct stl_input_iterator$/;"	s	namespace:boost::python	inherits:boost::iterator_facade
stl_input_iterator_impl	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    stl_input_iterator_impl();$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:()
stl_input_iterator_impl	/usr/include/boost/python/object/stl_iterator_core.hpp	/^    stl_input_iterator_impl(boost::python::object const &ob);$/;"	p	struct:boost::python::objects::stl_input_iterator_impl	access:public	signature:(boost::python::object const &ob)
stl_input_iterator_impl	/usr/include/boost/python/object/stl_iterator_core.hpp	/^struct BOOST_PYTHON_DECL stl_input_iterator_impl$/;"	s	namespace:boost::python::objects
stop	/usr/include/boost/python/slice.hpp	/^        RandomAccessIterator stop;$/;"	m	struct:boost::python::slice::range	access:public
stop	/usr/include/boost/python/slice.hpp	/^      object stop() const;$/;"	p	class:boost::python::detail::slice_base	access:public	signature:() const
stop_iteration_error	/usr/include/boost/python/object/iterator_core.hpp	/^BOOST_PYTHON_DECL void stop_iteration_error();$/;"	p	namespace:boost::python::objects	signature:()
storage	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    >::type storage;$/;"	m	struct:boost::python::converter::rvalue_from_python_storage	access:public
storage	/usr/include/boost/python/object/instance.hpp	/^    } storage;$/;"	m	struct:boost::python::objects::instance	typeref:union:boost::python::objects::instance::__anon7	access:public
str	/usr/include/boost/python/str.hpp	/^    explicit str(T const& other)$/;"	f	class:boost::python::str	access:public	signature:(T const& other)
str	/usr/include/boost/python/str.hpp	/^    str() {} \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:()
str	/usr/include/boost/python/str.hpp	/^    str(char const* start, char const* finish) \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:(char const* start, char const* finish)
str	/usr/include/boost/python/str.hpp	/^    str(char const* start, std::size_t length) \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:(char const* start, std::size_t length)
str	/usr/include/boost/python/str.hpp	/^    str(const char* s) : base(s) {} \/\/ new str$/;"	f	class:boost::python::str	access:public	signature:(const char* s)
str	/usr/include/boost/python/str.hpp	/^class str : public detail::str_base$/;"	c	namespace:boost::python	inherits:detail::str_base
str_base	/usr/include/boost/python/str.hpp	/^      explicit str_base(object_cref other);$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(object_cref other)
str_base	/usr/include/boost/python/str.hpp	/^      str_base(); \/\/ new str$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:()
str_base	/usr/include/boost/python/str.hpp	/^      str_base(char const* start, char const* finish);$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(char const* start, char const* finish)
str_base	/usr/include/boost/python/str.hpp	/^      str_base(char const* start, std::size_t length);$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(char const* start, std::size_t length)
str_base	/usr/include/boost/python/str.hpp	/^      str_base(const char* s); \/\/ new str$/;"	p	struct:boost::python::detail::str_base	access:protected	signature:(const char* s)
str_base	/usr/include/boost/python/str.hpp	/^  struct BOOST_PYTHON_DECL str_base : object$/;"	s	namespace:boost::python::detail	inherits:object
strip	/usr/include/boost/python/str.hpp	/^      str strip() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
swapaxes	/usr/include/boost/python/numeric.hpp	/^      void swapaxes(long axis1, long axis2);$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long axis1, long axis2)
swapcase	/usr/include/boost/python/str.hpp	/^      str swapcase() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
t	/usr/include/boost/python/init.hpp	/^        static T t();$/;"	p	struct:boost::python::detail::is_optional	access:private	signature:()
t1	/usr/include/boost/python/detail/result.hpp	/^        >::type t1;$/;"	t	struct:boost::python::detail::result_result	access:public
tag	/usr/include/boost/python/tag.hpp	/^enum tag_t { tag };$/;"	e	enum:boost::python::tag_t
tag_t	/usr/include/boost/python/tag.hpp	/^enum tag_t { tag };$/;"	g	namespace:boost::python
tail	/usr/include/boost/python/detail/exception_handler.hpp	/^    static exception_handler* tail;$/;"	m	struct:boost::python::detail::exception_handler	access:private
take	/usr/include/boost/python/numeric.hpp	/^      object take(object const& sequence, long axis = 0) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& sequence, long axis = 0) const
take	/usr/include/boost/python/numeric.hpp	/^    object take(Sequence const& sequence, long axis = 0)$/;"	f	class:boost::python::numeric::array	access:public	signature:(Sequence const& sequence, long axis = 0)
target	/usr/include/boost/python/detail/target.hpp	/^T& (* target(R (T::*)) )() { return 0; }$/;"	f	namespace:boost::python::detail	signature:(R (
target_type	/usr/include/boost/python/converter/registrations.hpp	/^    const python::type_info target_type;$/;"	m	struct:boost::python::converter::registration	access:public
test	/usr/include/boost/python/object_core.hpp	/^      static char test(U const*);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(U const*)
test	/usr/include/boost/python/object_core.hpp	/^      static no test(...);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(....)
then	/usr/include/boost/python/detail/if_else.hpp	/^    struct then : if_selected<T>$/;"	s	struct:boost::python::detail::if_	inherits:if_selected	access:public
then	/usr/include/boost/python/detail/if_else.hpp	/^    struct then : if_unselected$/;"	s	struct:boost::python::detail::if_	inherits:if_unselected	access:public
then	/usr/include/boost/python/detail/if_else.hpp	/^class elif_selected<T>::then : public if_selected<T>$/;"	c	class:boost::python::detail::elif_selected	inherits:if_selected
this_type	/usr/include/boost/python/detail/python_type.hpp	/^    typedef python_class<T> this_type;$/;"	t	struct:boost::python::detail::python_class	access:public
throw_error_already_set	/usr/include/boost/python/errors.hpp	/^BOOST_PYTHON_DECL void throw_error_already_set();$/;"	p	namespace:boost::python	signature:()
throw_no_pointer_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void throw_no_pointer_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
throw_no_reference_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void throw_no_reference_from_python(PyObject*, registration const&);$/;"	p	namespace:boost::python::converter	signature:(PyObject*, registration const&)
title	/usr/include/boost/python/str.hpp	/^      str title() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
to_pointer	/usr/include/boost/python/object_core.hpp	/^      static X* to_pointer(X const&);$/;"	p	struct:boost::python::api::is_derived_impl	access:public	signature:(X const&)
to_python	/usr/include/boost/python/converter/registrations.hpp	/^    PyObject* to_python(void const volatile*) const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:(void const volatile*) const
to_python	/usr/include/boost/python/enum.hpp	/^    static PyObject* to_python(void const* x);$/;"	p	struct:boost::python::enum_	access:private	signature:(void const* x)
to_python	/usr/include/boost/python/enum.hpp	/^PyObject* enum_<T>::to_python(void const* x)$/;"	f	class:boost::python::enum_	signature:(void const* x)
to_python	/usr/include/boost/python/object/enum_base.hpp	/^    static PyObject* to_python(PyTypeObject* type, long x);$/;"	p	struct:boost::python::objects::enum_base	access:protected	signature:(PyTypeObject* type, long x)
to_python_converter	/usr/include/boost/python/to_python_converter.hpp	/^    to_python_converter();$/;"	p	struct:boost::python::to_python_converter	access:public	signature:()
to_python_converter	/usr/include/boost/python/to_python_converter.hpp	/^struct to_python_converter $/;"	s	namespace:boost::python
to_python_converter	/usr/include/boost/python/to_python_converter.hpp	/^to_python_converter<T,Conversion, has_get_pytype>::to_python_converter()$/;"	f	class:boost::python::to_python_converter	signature:()
to_python_function_t	/usr/include/boost/python/converter/to_python_function_type.hpp	/^typedef PyObject* (*to_python_function_t)(void const*);$/;"	t	namespace:boost::python::converter
to_python_indirect	/usr/include/boost/python/to_python_indirect.hpp	/^struct to_python_indirect$/;"	s	namespace:boost::python
to_python_target_type	/usr/include/boost/python/converter/pytype_function.hpp	/^struct to_python_target_type$/;"	s	namespace:boost::python::converter
to_python_target_type	/usr/include/boost/python/converter/registrations.hpp	/^    PyTypeObject const* to_python_target_type() const;$/;"	p	struct:boost::python::converter::registration	access:public	signature:() const
to_python_target_type_direct	/usr/include/boost/python/converter/pytype_function.hpp	/^struct to_python_target_type_direct$/;"	s	namespace:boost::python::converter
to_python_value	/usr/include/boost/python/to_python_value.hpp	/^struct to_python_value$/;"	s	namespace:boost::python	inherits:mpl::if_::type
tofile	/usr/include/boost/python/numeric.hpp	/^      void tofile(object const& file) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& file) const
tofile	/usr/include/boost/python/numeric.hpp	/^    void tofile(File const& f) const$/;"	f	class:boost::python::numeric::array	access:public	signature:(File const& f) const
too_many_keywords	/usr/include/boost/python/args_fwd.hpp	/^        typedef char too_many_keywords[keywords > function_args ? -1 : 1];$/;"	t	struct:boost::python::detail::error::more_keywords_than_function_arguments	access:public
too_many_keywords	/usr/include/boost/python/init.hpp	/^        typedef char too_many_keywords[init_args - keywords >= 0 ? 1 : -1];$/;"	t	struct:boost::python::detail::error::more_keywords_than_init_arguments	access:public
tostring	/usr/include/boost/python/numeric.hpp	/^      str tostring() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
trace	/usr/include/boost/python/numeric.hpp	/^      object trace(long offset = 0, long axis1 = 0, long axis2 = 1) const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(long offset = 0, long axis1 = 0, long axis2 = 1) const
traits_t	/usr/include/boost/python/object/iterator.hpp	/^    typedef boost::detail::iterator_traits<Iterator> traits_t;$/;"	t	struct:boost::python::objects::iterator_range	access:public
translate	/usr/include/boost/python/str.hpp	/^      str translate(object_cref table) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref table) const
translate	/usr/include/boost/python/str.hpp	/^      str translate(object_cref table, object_cref deletechars) const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:(object_cref table, object_cref deletechars) const
translate	/usr/include/boost/python/str.hpp	/^    str translate(T const& table) const$/;"	f	class:boost::python::str	access:public	signature:(T const& table) const
translate	/usr/include/boost/python/str.hpp	/^    str translate(T1 const& table, T2 const& deletechars) const$/;"	f	class:boost::python::str	access:public	signature:(T1 const& table, T2 const& deletechars) const
translate_exception	/usr/include/boost/python/detail/translate_exception.hpp	/^struct translate_exception$/;"	s	namespace:boost::python::detail
transpose	/usr/include/boost/python/numeric.hpp	/^      void transpose(object const& axes = object());$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:(object const& axes = object())
tuple	/usr/include/boost/python/tuple.hpp	/^    explicit tuple(T const& sequence)$/;"	f	class:boost::python::tuple	access:public	signature:(T const& sequence)
tuple	/usr/include/boost/python/tuple.hpp	/^    tuple() {}$/;"	f	class:boost::python::tuple	access:public	signature:()
tuple	/usr/include/boost/python/tuple.hpp	/^class tuple : public detail::tuple_base$/;"	c	namespace:boost::python	inherits:detail::tuple_base
tuple_base	/usr/include/boost/python/tuple.hpp	/^      tuple_base();$/;"	p	struct:boost::python::detail::tuple_base	access:protected	signature:()
tuple_base	/usr/include/boost/python/tuple.hpp	/^      tuple_base(object_cref sequence);$/;"	p	struct:boost::python::detail::tuple_base	access:protected	signature:(object_cref sequence)
tuple_base	/usr/include/boost/python/tuple.hpp	/^  struct BOOST_PYTHON_DECL tuple_base : object$/;"	s	namespace:boost::python::detail	inherits:object
tuple_extract	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract$/;"	s	namespace:boost::python::detail	inherits:tuple_extract_base_select::type
tuple_extract_base_select	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract_base_select$/;"	s	namespace:boost::python::detail
tuple_extract_impl	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract_impl$/;"	s	namespace:boost::python::detail
tuple_extract_impl	/usr/include/boost/python/detail/def_helper.hpp	/^  struct tuple_extract_impl<false>$/;"	s	namespace:boost::python::detail
type	/usr/include/boost/python/args.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	class:boost::python::detail::is_reference_to_keywords	access:public
type	/usr/include/boost/python/args.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::detail::is_reference_to_keywords	access:public
type	/usr/include/boost/python/back_reference.hpp	/^    typedef T type;$/;"	t	struct:boost::python::back_reference	access:public
type	/usr/include/boost/python/base_type_traits.hpp	/^    typedef PyObject type;$/;"	t	struct:boost::python::base_type_traits	access:public
type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    >::type type;$/;"	t	struct:boost::python::converter::select_arg_from_python	access:public
type	/usr/include/boost/python/converter/arg_from_python.hpp	/^    typedef typename mpl::eval_if<C, mpl::identity<T>, F>::type type;$/;"	t	struct:boost::python::converter::if_2	access:public
type	/usr/include/boost/python/converter/arg_to_python.hpp	/^      type;$/;"	t	struct:boost::python::converter::detail::select_arg_to_python	access:public
type	/usr/include/boost/python/converter/object_manager.hpp	/^          >::type type;$/;"	t	struct:boost::python::converter::detail::is_object_manager_help	access:public
type	/usr/include/boost/python/converter/object_manager.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::converter::detail::is_reference_to_object_manager_ref	access:public
type	/usr/include/boost/python/converter/return_from_python.hpp	/^         >::type type;$/;"	t	struct:boost::python::converter::detail::select_return_from_python	access:public
type	/usr/include/boost/python/copy_const_reference.hpp	/^        >::type type;$/;"	t	struct:boost::python::copy_const_reference::apply	access:public
type	/usr/include/boost/python/copy_non_const_reference.hpp	/^        >::type type;$/;"	t	struct:boost::python::copy_non_const_reference::apply	access:public
type	/usr/include/boost/python/def.hpp	/^    template <> struct multiple_functions_passed_to_def<false> { typedef char type; };$/;"	t	struct:boost::python::detail::error::multiple_functions_passed_to_def	access:public
type	/usr/include/boost/python/default_call_policies.hpp	/^        >::type type;$/;"	t	struct:boost::python::default_result_converter::apply	access:public
type	/usr/include/boost/python/default_call_policies.hpp	/^    typedef boost::python::to_python_value<PyObject*const&> type;$/;"	t	struct:boost::python::default_result_converter::apply	access:public
type	/usr/include/boost/python/default_call_policies.hpp	/^    typedef boost::python::to_python_value<char const*const&> type;$/;"	t	struct:boost::python::default_result_converter::apply	access:public
type	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^    typedef T type;$/;"	t	class:boost::python::detail::borrowed	access:private
type	/usr/include/boost/python/detail/caller.hpp	/^    typedef typename caller_arity<arity>::template impl<F,CallPolicies,Sig> type;$/;"	t	struct:boost::python::detail::caller_base_select	access:public
type	/usr/include/boost/python/detail/cv_category.hpp	/^    > type;$/;"	t	struct:boost::python::detail::cv_category	access:public
type	/usr/include/boost/python/detail/def_helper.hpp	/^      typedef typename tuple_extract_impl<match>::template apply<Tuple,Predicate> type;$/;"	t	struct:boost::python::detail::tuple_extract_base_select	access:public
type	/usr/include/boost/python/detail/dependent.hpp	/^    typedef T type;$/;"	t	struct:boost::python::detail::dependent	access:public
type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,T,int&>::type type;$/;"	t	struct:boost::python::detail::enable_if_arg	access:public
type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,T,int[2]>::type type;$/;"	t	struct:boost::python::detail::enable_if_ret	access:public
type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,int&,T>::type type;$/;"	t	struct:boost::python::detail::disable_if_arg	access:public
type	/usr/include/boost/python/detail/enable_if.hpp	/^    typedef typename mpl::if_<C,int[2],T>::type type;$/;"	t	struct:boost::python::detail::disable_if_ret	access:public
type	/usr/include/boost/python/detail/enable_if.hpp	/^template <class T> struct always_void { typedef void type; };$/;"	t	struct:boost::python::detail::always_void	access:public
type	/usr/include/boost/python/detail/if_else.hpp	/^        struct type {};$/;"	s	struct:boost::python::detail::msvc70_aux::inherit_from::result	access:public
type	/usr/include/boost/python/detail/if_else.hpp	/^        typedef T type;$/;"	t	struct:boost::python::detail::if_selected::else_	access:public
type	/usr/include/boost/python/detail/if_else.hpp	/^        typedef T type;$/;"	t	struct:boost::python::detail::msvc70_aux::inherit_from::result	access:public
type	/usr/include/boost/python/detail/if_else.hpp	/^        typedef U type;$/;"	t	struct:boost::python::detail::if_unselected::else_	access:public
type	/usr/include/boost/python/detail/pointee.hpp	/^        typedef typename T::element_type type;$/;"	t	struct:boost::python::detail::pointee_impl::apply	access:public
type	/usr/include/boost/python/detail/python_type.hpp	/^    typedef T type;$/;"	t	struct:boost::python::detail::python_class	access:public
type	/usr/include/boost/python/detail/referent_storage.hpp	/^    > type;$/;"	t	struct:boost::python::detail::referent_storage	access:public
type	/usr/include/boost/python/detail/result.hpp	/^    typedef typename t1::type* type;$/;"	t	struct:boost::python::detail::result_result	access:public
type	/usr/include/boost/python/detail/result.hpp	/^    typedef void type;$/;"	t	struct:boost::python::detail::void_type	access:public
type	/usr/include/boost/python/detail/signature.hpp	/^    typedef typename signature_arity<arity>::template impl<Sig> type;$/;"	t	struct:boost::python::detail::signature_base_select	access:public
type	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^        >::type type;$/;"	t	struct:boost::python::detail::type_list	access:public
type	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    ::template result_< BOOST_PYTHON_LIST_ACTUAL_PARAMS >::type type;$/;"	t	struct:boost::python::detail::type_list_impl	access:public
type	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^    typedef typename T::_wrapper_wrapped_type_ type;$/;"	t	struct:boost::python::detail::unwrap_wrapper_helper	access:public
type	/usr/include/boost/python/detail/void_return.hpp	/^    typedef T type;$/;"	t	struct:boost::python::detail::returnable	access:public
type	/usr/include/boost/python/detail/void_return.hpp	/^    typedef void_return type;$/;"	t	struct:boost::python::detail::returnable	access:public
type	/usr/include/boost/python/extract.hpp	/^         >::type type;$/;"	t	struct:boost::python::converter::select_extract	access:public
type	/usr/include/boost/python/init.hpp	/^        typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::detail::is_optional	access:public
type	/usr/include/boost/python/make_constructor.hpp	/^          typedef install_holder<T> type;$/;"	t	struct:boost::python::detail::constructor_result_converter::apply	access:public
type	/usr/include/boost/python/make_constructor.hpp	/^      typedef int type;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
type	/usr/include/boost/python/make_constructor.hpp	/^      typedef typename mpl::push_front<outer_args,void>::type type;$/;"	t	struct:boost::python::detail::outer_constructor_signature	access:public
type	/usr/include/boost/python/manage_new_object.hpp	/^        >::type type;$/;"	t	struct:boost::python::manage_new_object::apply	access:public
type	/usr/include/boost/python/numeric.hpp	/^      object type() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
type	/usr/include/boost/python/object/forward.hpp	/^          typedef typename T::reference type;$/;"	t	struct:boost::python::objects::detail::unforwarder::apply	access:public
type	/usr/include/boost/python/object/forward.hpp	/^          typedef typename unwrap_reference<T>::type& type;$/;"	t	struct:boost::python::objects::detail::unforwarder::apply	access:public
type	/usr/include/boost/python/object/forward.hpp	/^      typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::objects::detail::is_reference_to_value	access:public
type	/usr/include/boost/python/object/forward.hpp	/^    typedef T type;$/;"	t	struct:boost::python::objects::unforward	access:public
type	/usr/include/boost/python/object/forward.hpp	/^    typedef typename unwrap_reference<T>::type& type;$/;"	t	struct:boost::python::objects::unforward	access:public
type	/usr/include/boost/python/object_operators.hpp	/^    typedef mpl::bool_<value> type;$/;"	t	struct:boost::python::api::is_object_operators	access:public
type	/usr/include/boost/python/other.hpp	/^      typedef T type;$/;"	t	class:boost::python::detail::unwrap_other	access:public
type	/usr/include/boost/python/other.hpp	/^    typedef T type;$/;"	t	struct:boost::python::other	access:public
type	/usr/include/boost/python/pointee.hpp	/^          typedef typename T::element_type type;$/;"	t	struct:boost::python::detail::pointee_impl::apply	access:public
type	/usr/include/boost/python/ptr.hpp	/^          typedef T type;$/;"	t	struct:boost::python::detail::pointer_unwrapper::apply	access:public
type	/usr/include/boost/python/ptr.hpp	/^          typedef typename T::type type;$/;"	t	struct:boost::python::detail::pointer_unwrapper::apply	access:public
type	/usr/include/boost/python/ptr.hpp	/^    typedef Ptr type;$/;"	t	class:boost::python::pointer_wrapper	access:public
type	/usr/include/boost/python/ptr.hpp	/^    typedef T type;$/;"	t	class:boost::python::unwrap_pointer	access:public
type	/usr/include/boost/python/ptr.hpp	/^    typedef mpl::bool_<value> type;$/;"	t	class:boost::python::is_pointer_wrapper	access:public
type	/usr/include/boost/python/pure_virtual.hpp	/^      >::type type;$/;"	t	struct:boost::python::detail::replace_front2	access:public
type	/usr/include/boost/python/reference_existing_object.hpp	/^        >::type type;$/;"	t	struct:boost::python::reference_existing_object::apply	access:public
type	/usr/include/boost/python/return_arg.hpp	/^          struct type$/;"	s	struct:boost::python::detail::return_none::apply	access:public
type	/usr/include/boost/python/return_by_value.hpp	/^       > type;$/;"	t	struct:boost::python::return_by_value::apply	access:public
type	/usr/include/boost/python/return_opaque_pointer.hpp	/^            type() { detail::opaque_pointee(R()); }$/;"	f	struct:boost::python::return_opaque_pointer::apply::type	access:public	signature:()
type	/usr/include/boost/python/return_opaque_pointer.hpp	/^        struct type :  $/;"	s	struct:boost::python::return_opaque_pointer::apply	inherits:boost::python::to_python_value	access:public
type	/usr/include/boost/python/signature.hpp	/^    >::type type;$/;"	t	struct:boost::python::detail::most_derived	access:public
type	/usr/include/boost/python/slice_nil.hpp	/^    typedef object type;$/;"	t	struct:boost::python::api::slice_bound	access:public
type	/usr/include/boost/python/slice_nil.hpp	/^    typedef slice_nil type;$/;"	t	struct:boost::python::api::slice_bound	access:public
type_handle	/usr/include/boost/python/handle.hpp	/^typedef handle<PyTypeObject> type_handle;$/;"	t	namespace:boost::python
type_info	/usr/include/boost/python/type_id.hpp	/^    inline type_info(std::type_info const& = typeid(void));$/;"	p	struct:boost::python::type_info	access:public	signature:(std::type_info const& = typeid(void))
type_info	/usr/include/boost/python/type_id.hpp	/^inline type_info::type_info(std::type_info const& id)$/;"	f	class:boost::python::type_info	signature:(std::type_info const& id)
type_info	/usr/include/boost/python/type_id.hpp	/^struct type_info : private totally_ordered<type_info>$/;"	s	namespace:boost::python	inherits:totally_ordered
type_list	/usr/include/boost/python/detail/type_list_impl.hpp	/^struct type_list$/;"	s	namespace:boost::python::detail	inherits:BOOST_PP_CAT,mpl::vector,BOOST_PYTHON_LIST_SIZE
type_list	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct type_list$/;"	s	namespace:boost::python::detail	inherits:detail::type_list_impl::type
type_list_count_args	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct type_list_count_args$/;"	s	namespace:boost::python::detail
type_list_impl	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^struct type_list_impl$/;"	s	namespace:boost::python::detail
type_object	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static PyTypeObject type_object;$/;"	m	struct:boost::python::opaque	access:private
type_object	/usr/include/boost/python/opaque_pointer_converter.hpp	/^PyTypeObject opaque<Pointee>::type_object =$/;"	m	class:boost::python::opaque
typecode	/usr/include/boost/python/numeric.hpp	/^      char typecode() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
typeid_nonref	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^static typeinfo typeid_nonref(T const volatile*) { return typeid(T); }$/;"	f	namespace:boost::python::detail	signature:(T const volatile*)
typeid_ref	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo typeid_ref(type<T>*, ...)$/;"	f	namespace:boost::python::detail	signature:(type<T>*, ...)
typeid_ref	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo typeid_ref(type<T>*, T&(*)(type<T>))$/;"	f	namespace:boost::python::detail	signature:(type<T>*, T&(*)(type<T>))
typeid_ref_1	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^inline typeinfo typeid_ref_1(T&(*)())$/;"	f	namespace:boost::python::detail	signature:(T&(*)())
typeinfo	/usr/include/boost/python/detail/msvc_typeinfo.hpp	/^typedef std::type_info const& typeinfo;$/;"	t	class:boost::python::detail::std
unary_op	/usr/include/boost/python/operators.hpp	/^  struct unary_op : operator_1<id>$/;"	s	namespace:boost::python::detail	inherits:operator_1
unchecked	/usr/include/boost/python/override.hpp	/^      T unchecked(type<T>* = 0)$/;"	f	class:boost::python::detail::method_result	access:public	signature:(type<T>* = 0)
unforward	/usr/include/boost/python/object/forward.hpp	/^struct unforward$/;"	s	namespace:boost::python::objects
unforward	/usr/include/boost/python/object/forward.hpp	/^struct unforward$/;"	s	namespace:boost::python::objects	inherits:detail::unforwarder::,apply
unforward	/usr/include/boost/python/object/forward.hpp	/^struct unforward<reference_to_value<T> >$/;"	s	namespace:boost::python::objects
unforward_cref	/usr/include/boost/python/object/forward.hpp	/^struct unforward_cref$/;"	s	namespace:boost::python::objects	inherits:detail::cref_unforwarder::,apply
unforward_cref	/usr/include/boost/python/object/forward.hpp	/^struct unforward_cref$/;"	s	namespace:boost::python::objects	inherits:python::detail::value_arg
unforward_cref	/usr/include/boost/python/object/forward.hpp	/^struct unforward_cref<reference_to_value<T> >$/;"	s	namespace:boost::python::objects	inherits:add_reference
unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct unforwarder$/;"	s	namespace:boost::python::objects::detail
unforwarder	/usr/include/boost/python/object/forward.hpp	/^  struct unforwarder<true>$/;"	s	namespace:boost::python::objects::detail
unspecialized	/usr/include/boost/python/base_type_traits.hpp	/^  struct unspecialized {};$/;"	s	namespace:boost::python::detail
unwind_helper	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper$/;"	s	namespace:boost::python::detail
unwind_helper	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper<false>$/;"	s	namespace:boost::python::detail
unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<direct_>$/;"	s	namespace:boost::python::detail
unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<pointer_>$/;"	s	namespace:boost::python::detail
unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<reference_>$/;"	s	namespace:boost::python::detail
unwind_helper2	/usr/include/boost/python/detail/unwind_type.hpp	/^struct unwind_helper2<reference_to_pointer_>$/;"	s	namespace:boost::python::detail
unwind_ptr_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_ptr_type(U* p, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U* p, Generator* = 0)
unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(U const& p, Generator* = 0);$/;"	p	namespace:boost::python::detail	signature:(U const& p, Generator* = 0)
unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(U const& p, Generator*)$/;"	f	namespace:boost::python::detail	signature:(U const& p, Generator*)
unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(boost::type<U>*, Generator*)$/;"	f	namespace:boost::python::detail	signature:(boost::type<U>*, Generator*)
unwind_type	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type(boost::type<U>*p = 0, Generator* = 0);$/;"	p	namespace:boost::python::detail	signature:(boost::type<U>*p = 0, Generator* = 0)
unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U const volatile* p, const_volatile_, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U const volatile* p, const_volatile_, Generator* = 0)
unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U const* p, const_, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U const* p, const_, Generator* = 0)
unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U volatile* p, volatile_, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U volatile* p, volatile_, Generator* = 0)
unwind_type_cv	/usr/include/boost/python/detail/unwind_type.hpp	/^unwind_type_cv(U* p, cv_unqualified, Generator* = 0)$/;"	f	namespace:boost::python::detail	signature:(U* p, cv_unqualified, Generator* = 0)
unwind_type_id	/usr/include/boost/python/converter/pytype_function.hpp	/^inline python::type_info unwind_type_id(boost::type<T>* p= 0)$/;"	f	namespace:boost::python::converter::detail	signature:(boost::type<T>* p= 0)
unwind_type_id_	/usr/include/boost/python/converter/pytype_function.hpp	/^inline python::type_info unwind_type_id_(boost::type<T>* = 0, mpl::false_ * =0)$/;"	f	namespace:boost::python::converter::detail	signature:(boost::type<T>* = 0, mpl::false_ * =0)
unwind_type_id_	/usr/include/boost/python/converter/pytype_function.hpp	/^inline python::type_info unwind_type_id_(boost::type<void>* = 0, mpl::true_* =0)$/;"	f	namespace:boost::python::converter::detail	signature:(boost::type<void>* = 0, mpl::true_* =0)
unwind_type_id_helper	/usr/include/boost/python/converter/pytype_function.hpp	/^struct unwind_type_id_helper{$/;"	s	namespace:boost::python::converter::detail
unwrap_other	/usr/include/boost/python/other.hpp	/^  class unwrap_other$/;"	c	namespace:boost::python::detail
unwrap_other	/usr/include/boost/python/other.hpp	/^  class unwrap_other<other<T> >$/;"	c	namespace:boost::python::detail
unwrap_pointer	/usr/include/boost/python/ptr.hpp	/^class unwrap_pointer$/;"	c	namespace:boost::python
unwrap_pointer	/usr/include/boost/python/ptr.hpp	/^class unwrap_pointer$/;"	c	namespace:boost::python	inherits:detail::pointer_unwrapper::,apply
unwrap_pointer	/usr/include/boost/python/ptr.hpp	/^class unwrap_pointer<pointer_wrapper<T> >$/;"	c	namespace:boost::python
unwrap_type_id	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^inline type_info unwrap_type_id(T*, ...)$/;"	f	namespace:boost::python::detail	signature:(T*, ...)
unwrap_type_id	/usr/include/boost/python/detail/unwrap_type_id.hpp	/^inline type_info unwrap_type_id(U*, wrapper<T>*)$/;"	f	namespace:boost::python::detail	signature:(U*, wrapper<T>*)
unwrap_wrapper	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^unwrap_wrapper(T*)$/;"	f	namespace:boost::python::detail	signature:(T*)
unwrap_wrapper_	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^struct unwrap_wrapper_$/;"	s	namespace:boost::python::detail	inherits:mpl::eval_if
unwrap_wrapper_helper	/usr/include/boost/python/detail/unwrap_wrapper.hpp	/^struct unwrap_wrapper_helper$/;"	s	namespace:boost::python::detail
unwrapped_ptr	/usr/include/boost/python/converter/arg_to_python.hpp	/^      typedef typename unwrap_pointer<T>::type unwrapped_ptr;$/;"	t	struct:boost::python::converter::detail::select_arg_to_python	access:public
unwrapped_referent	/usr/include/boost/python/converter/arg_to_python.hpp	/^      typedef typename unwrap_reference<T>::type unwrapped_referent;$/;"	t	struct:boost::python::converter::detail::select_arg_to_python	access:public
upcast	/usr/include/boost/python/cast.hpp	/^  inline Target* upcast(Source* p, no_convertible, no_convertible, Target*)$/;"	f	namespace:boost::python::detail	signature:(Source* p, no_convertible, no_convertible, Target*)
upcast	/usr/include/boost/python/cast.hpp	/^  inline Target* upcast(Source* p, yes_convertible, no_convertible, Target*)$/;"	f	namespace:boost::python::detail	signature:(Source* p, yes_convertible, no_convertible, Target*)
upcast	/usr/include/boost/python/cast.hpp	/^inline Target* upcast(Source* x, Target* = 0)$/;"	f	namespace:boost::python	signature:(Source* x, Target* = 0)
upcast_impl	/usr/include/boost/python/cast.hpp	/^  inline Target* upcast_impl(Source* x, Target*)$/;"	f	namespace:boost::python::detail	signature:(Source* x, Target*)
upcast_impl	/usr/include/boost/python/cast.hpp	/^  template <class Source, class Target> inline Target* upcast_impl(Source*, Target*);$/;"	p	namespace:boost::python::detail	signature:(Source*, Target*)
upcaster	/usr/include/boost/python/cast.hpp	/^  struct upcaster$/;"	s	namespace:boost::python::detail
upcaster	/usr/include/boost/python/cast.hpp	/^  struct upcaster<false>$/;"	s	namespace:boost::python::detail
update	/usr/include/boost/python/dict.hpp	/^      void update(object_cref E);$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:(object_cref E)
update	/usr/include/boost/python/dict.hpp	/^    void update(T const& E)$/;"	f	class:boost::python::dict	access:public	signature:(T const& E)
upper	/usr/include/boost/python/str.hpp	/^      str upper() const;$/;"	p	struct:boost::python::detail::str_base	access:public	signature:() const
use_back_reference	/usr/include/boost/python/object/class_metadata.hpp	/^    > use_back_reference;$/;"	t	struct:boost::python::objects::class_metadata	access:public
use_value_holder	/usr/include/boost/python/object/class_metadata.hpp	/^    typedef is_convertible<held_type*,T*> use_value_holder;$/;"	t	struct:boost::python::objects::class_metadata	access:public
value	/usr/include/boost/python/converter/arg_from_python.hpp	/^      static T value;$/;"	m	struct:boost::python::converter::detail::null_ptr_owner	access:public
value	/usr/include/boost/python/converter/arg_from_python.hpp	/^  template <class T> T null_ptr_owner<T>::value = 0;$/;"	m	class:boost::python::converter::detail::null_ptr_owner
value	/usr/include/boost/python/detail/map_entry.hpp	/^    Value value;$/;"	m	struct:boost::python::detail::map_entry	access:public
value	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    enum { value = false };$/;"	e	enum:boost::python::detail::is_list_arg::__anon4
value	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    enum { value = true };$/;"	e	enum:boost::python::detail::is_list_arg::__anon3
value	/usr/include/boost/python/detail/type_list_impl_no_pts.hpp	/^    enum { value =$/;"	e	enum:boost::python::detail::type_list_count_args::__anon5
value	/usr/include/boost/python/enum.hpp	/^    inline enum_<T>& value(char const* name, T);$/;"	p	struct:boost::python::enum_	access:public	signature:(char const* name, T)
value	/usr/include/boost/python/enum.hpp	/^inline enum_<T>& enum_<T>::value(char const* name, T x)$/;"	f	class:boost::python::enum_	signature:(char const* name, T x)
value	/usr/include/boost/python/object_operators.hpp	/^        value $/;"	e	enum:boost::python::api::is_object_operators::__anon8
value_arg	/usr/include/boost/python/detail/value_arg.hpp	/^struct value_arg$/;"	s	namespace:boost::python::detail	inherits:mpl::if_
value_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^      value_arg_to_python(T const&);$/;"	p	struct:boost::python::converter::detail::value_arg_to_python	access:public	signature:(T const&)
value_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  inline value_arg_to_python<T>::value_arg_to_python(T const& x)$/;"	f	class:boost::python::converter::detail::value_arg_to_python	signature:(T const& x)
value_arg_to_python	/usr/include/boost/python/converter/arg_to_python.hpp	/^  struct value_arg_to_python : arg_to_python_base$/;"	s	namespace:boost::python::converter::detail	inherits:arg_to_python_base
value_destroyer	/usr/include/boost/python/detail/destroy.hpp	/^struct value_destroyer<$/;"	s	namespace:boost::python::detail
value_destroyer	/usr/include/boost/python/detail/destroy.hpp	/^struct value_destroyer<false,true>$/;"	s	namespace:boost::python::detail
value_destroyer	/usr/include/boost/python/detail/destroy.hpp	/^struct value_destroyer<true,true>$/;"	s	namespace:boost::python::detail
value_holder	/usr/include/boost/python/object/value_holder.hpp	/^struct value_holder : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
value_holder_back_reference	/usr/include/boost/python/object/value_holder.hpp	/^struct value_holder_back_reference : instance_holder$/;"	s	namespace:boost::python::objects	inherits:instance_holder
value_type	/usr/include/boost/python/object/pointer_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::pointer_holder	access:public
value_type	/usr/include/boost/python/object/pointer_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::pointer_holder_back_reference	access:public
value_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::value_holder	access:public
value_type	/usr/include/boost/python/object/value_holder.hpp	/^    typedef Value value_type;$/;"	t	struct:boost::python::objects::value_holder_back_reference	access:public
value_type	/usr/include/boost/python/suite/indexing/map_indexing_suite.hpp	/^        typedef typename Container::value_type value_type;$/;"	t	class:boost::python::map_indexing_suite	access:public
values	/usr/include/boost/python/dict.hpp	/^      list values() const;$/;"	p	struct:boost::python::detail::dict_base	access:public	signature:() const
vector_indexing_suite	/usr/include/boost/python/suite/indexing/vector_indexing_suite.hpp	/^    class vector_indexing_suite $/;"	c	namespace:boost::python	inherits:indexing_suite
view	/usr/include/boost/python/numeric.hpp	/^      object view() const;$/;"	p	struct:boost::python::numeric::aux::array_base	access:public	signature:() const
virtual_function_default	/usr/include/boost/python/class.hpp	/^    struct virtual_function_default$/;"	s	namespace:boost::python::detail::error
visit	/usr/include/boost/python/def_visitor.hpp	/^    static void visit($/;"	f	class:boost::python::def_visitor_access	access:public	signature:( V const& v , classT& c , char const* name , OptionalArgs const& options )
visit	/usr/include/boost/python/def_visitor.hpp	/^    static void visit(V const& v, classT& c)$/;"	f	class:boost::python::def_visitor_access	access:public	signature:(V const& v, classT& c)
visit	/usr/include/boost/python/def_visitor.hpp	/^    void visit(classT& c) const$/;"	f	class:boost::python::def_visitor	access:public	signature:(classT& c) const
visit	/usr/include/boost/python/def_visitor.hpp	/^    void visit(classT& c, char const* name, OptionalArgs const& options) const$/;"	f	class:boost::python::def_visitor	access:public	signature:(classT& c, char const* name, OptionalArgs const& options) const
visit	/usr/include/boost/python/init.hpp	/^    void visit(classT& cl) const$/;"	f	struct:boost::python::init_base	access:private	signature:(classT& cl) const
visit	/usr/include/boost/python/object_core.hpp	/^      void visit(ClassT& cl, char const* name, python::detail::def_helper<DocStringT> const& helper) const$/;"	f	class:boost::python::api::object_operators	access:private	signature:(ClassT& cl, char const* name, python::detail::def_helper<DocStringT> const& helper) const
visit	/usr/include/boost/python/operators.hpp	/^      void visit(ClassT& cl) const$/;"	f	struct:boost::python::detail::operator_	access:private	signature:(ClassT& cl) const
visit	/usr/include/boost/python/pure_virtual.hpp	/^      void visit(C_& c, char const* name, Options& options) const$/;"	f	struct:boost::python::detail::pure_virtual_visitor	access:private	signature:(C_& c, char const* name, Options& options) const
visit	/usr/include/boost/python/suite/indexing/indexing_suite.hpp	/^        void visit(Class& cl) const$/;"	f	class:boost::python::indexing_suite	access:public	signature:(Class& cl) const
void_ptr_to_reference	/usr/include/boost/python/detail/void_ptr.hpp	/^inline U& void_ptr_to_reference(void const volatile* p, U&(*)())$/;"	f	namespace:boost::python::detail	signature:(void const volatile* p, U&(*)())
void_result_from_python	/usr/include/boost/python/converter/from_python.hpp	/^BOOST_PYTHON_DECL void void_result_from_python(PyObject*);$/;"	p	namespace:boost::python::converter	signature:(PyObject*)
void_result_to_python	/usr/include/boost/python/detail/caller.hpp	/^typedef int void_result_to_python;$/;"	t	namespace:boost::python::detail
void_result_to_python	/usr/include/boost/python/detail/invoke.hpp	/^typedef int void_result_to_python;$/;"	t	namespace:boost::python::detail
void_return	/usr/include/boost/python/detail/void_return.hpp	/^    void_return() {}$/;"	f	struct:boost::python::detail::void_return	access:public	signature:()
void_return	/usr/include/boost/python/detail/void_return.hpp	/^struct void_return$/;"	s	namespace:boost::python::detail
void_return_type	/usr/include/boost/python/detail/defaults_gen.hpp	/^      typedef typename OverloadsT::void_return_type       void_return_type;$/;"	t	struct:boost::python::detail::overloads_proxy	access:public
void_type	/usr/include/boost/python/detail/result.hpp	/^struct void_type$/;"	s	namespace:boost::python::detail
volatile_	/usr/include/boost/python/detail/cv_category.hpp	/^typedef cv_tag<false,true> volatile_;$/;"	t	namespace:boost::python::detail
volatile_	/usr/include/boost/python/detail/decorated_type_id.hpp	/^    enum decoration { const_ = 0x1, volatile_ = 0x2, reference = 0x4 };$/;"	e	enum:boost::python::detail::decorated_type_info::decoration
weakrefs	/usr/include/boost/python/object/instance.hpp	/^    PyObject* weakrefs; $/;"	m	struct:boost::python::objects::instance	access:public
with_custodian_and_ward	/usr/include/boost/python/with_custodian_and_ward.hpp	/^struct with_custodian_and_ward : BasePolicy_$/;"	s	namespace:boost::python	inherits:BasePolicy_
with_custodian_and_ward_postcall	/usr/include/boost/python/with_custodian_and_ward.hpp	/^struct with_custodian_and_ward_postcall : BasePolicy_$/;"	s	namespace:boost::python	inherits:BasePolicy_
wrap	/usr/include/boost/python/opaque_pointer_converter.hpp	/^    static PyObject* wrap(void const* px)$/;"	f	struct:boost::python::opaque	access:private	signature:(void const* px)
wrap_pytype	/usr/include/boost/python/converter/pytype_function.hpp	/^struct wrap_pytype$/;"	s	namespace:boost::python::converter
wrapped	/usr/include/boost/python/object/class_metadata.hpp	/^    >::type wrapped;$/;"	t	struct:boost::python::objects::class_metadata	access:public
wrapped_type	/usr/include/boost/python/class.hpp	/^    typedef W wrapped_type;$/;"	t	class:boost::python::class_	access:public
wrapper	/usr/include/boost/python/wrapper.hpp	/^class wrapper : public detail::wrapper_base$/;"	c	namespace:boost::python	inherits:detail::wrapper_base
wrapper_base	/usr/include/boost/python/detail/wrapper_base.hpp	/^      wrapper_base() : m_self(0) {}$/;"	f	class:boost::python::detail::wrapper_base	access:protected	signature:()
wrapper_base	/usr/include/boost/python/detail/wrapper_base.hpp	/^  class BOOST_PYTHON_DECL wrapper_base$/;"	c	namespace:boost::python::detail
wrapper_base	/usr/include/boost/python/detail/wrapper_base.hpp	/^  class BOOST_PYTHON_DECL_FORWARD wrapper_base;$/;"	m	namespace:boost::python::detail	typeref:class:boost::python::detail::BOOST_PYTHON_DECL_FORWARD
wrapper_base_	/usr/include/boost/python/detail/wrapper_base.hpp	/^  namespace wrapper_base_ \/\/ ADL disabler$/;"	n	namespace:boost::python::detail
write_type_id	/usr/include/boost/python/class.hpp	/^      write_type_id(type_info**p) : p(p) {}$/;"	f	struct:boost::python::detail::write_type_id	access:public	signature:(type_info**p)
write_type_id	/usr/include/boost/python/class.hpp	/^  struct write_type_id$/;"	s	namespace:boost::python::detail
write_void_ptr	/usr/include/boost/python/detail/void_ptr.hpp	/^inline void write_void_ptr(void const volatile* storage, void* ptr, T*)$/;"	f	namespace:boost::python::detail	signature:(void const volatile* storage, void* ptr, T*)
write_void_ptr_reference	/usr/include/boost/python/detail/void_ptr.hpp	/^inline void write_void_ptr_reference(void const volatile* storage, void* ptr, U&(*)())$/;"	f	namespace:boost::python::detail	signature:(void const volatile* storage, void* ptr, U&(*)())
x	/usr/include/boost/python/object_core.hpp	/^      static T x;$/;"	m	struct:boost::python::api::is_derived_impl	access:public
x	/usr/include/boost/python/opaque_pointer_converter.hpp	/^        Pointee* x;$/;"	m	struct:boost::python::opaque::python_instance	access:public
xdecref	/usr/include/boost/python/refcount.hpp	/^inline void xdecref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
xincref	/usr/include/boost/python/refcount.hpp	/^inline T* xincref(T* p)$/;"	f	namespace:boost::python	signature:(T* p)
yes_back_reference_t	/usr/include/boost/python/back_reference.hpp	/^  typedef char (&yes_back_reference_t)[1];$/;"	t	namespace:boost::python::detail
yes_borrowed_ptr_t	/usr/include/boost/python/detail/borrowed_ptr.hpp	/^typedef char (&yes_borrowed_ptr_t)[1];$/;"	t	namespace:boost::python::detail
yes_convertible	/usr/include/boost/python/detail/convertible.hpp	/^typedef char* yes_convertible;$/;"	t	namespace:boost::python::detail
yes_handle_t	/usr/include/boost/python/handle.hpp	/^  typedef char (&yes_handle_t)[1];$/;"	t	namespace:boost::python::detail
yes_keywords_t	/usr/include/boost/python/args.hpp	/^  typedef char (&yes_keywords_t)[1];$/;"	t	namespace:boost::python::detail
yes_pointer_wrapper_t	/usr/include/boost/python/ptr.hpp	/^  typedef char (&yes_pointer_wrapper_t)[1];$/;"	t	namespace:boost::python::detail
yes_reference_to_object_manager	/usr/include/boost/python/converter/object_manager.hpp	/^  typedef char (&yes_reference_to_object_manager)[1];$/;"	t	namespace:boost::python::converter::detail
yes_reference_to_value_t	/usr/include/boost/python/object/forward.hpp	/^  typedef char (&yes_reference_to_value_t)[1];$/;"	t	namespace:boost::python::objects::detail
~container_element	/usr/include/boost/python/suite/indexing/detail/indexing_suite_detail.hpp	/^        ~container_element()$/;"	f	class:boost::python::detail::container_element	access:public	signature:()
~decref_guard	/usr/include/boost/python/detail/decref_guard.hpp	/^    ~decref_guard() { Py_XDECREF(obj); }$/;"	f	struct:boost::python::detail::decref_guard	access:public	signature:()
~docstring_options	/usr/include/boost/python/docstring_options.hpp	/^      ~docstring_options()$/;"	f	class:boost::python::docstring_options	access:public	signature:()
~error_already_set	/usr/include/boost/python/errors.hpp	/^  virtual ~error_already_set();$/;"	p	struct:boost::python::error_already_set	access:public	signature:()
~function	/usr/include/boost/python/object/function.hpp	/^    ~function();$/;"	p	struct:boost::python::objects::function	access:public	signature:()
~handle	/usr/include/boost/python/handle.hpp	/^    ~handle();$/;"	p	class:boost::python::handle	access:public	signature:()
~handle	/usr/include/boost/python/handle.hpp	/^inline handle<T>::~handle()$/;"	f	class:boost::python::handle	signature:()
~instance_holder	/usr/include/boost/python/instance_holder.hpp	/^    virtual ~instance_holder();$/;"	p	struct:boost::python::instance_holder	access:public	signature:()
~object_base	/usr/include/boost/python/object_core.hpp	/^      inline ~object_base();$/;"	p	struct:boost::python::api::object_base	access:public	signature:()
~object_base	/usr/include/boost/python/object_core.hpp	/^inline api::object_base::~object_base()$/;"	f	class:boost::python::api::object_base	signature:()
~object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^    ~object_manager_ref_arg_from_python();$/;"	p	struct:boost::python::converter::object_manager_ref_arg_from_python	access:public	signature:()
~object_manager_ref_arg_from_python	/usr/include/boost/python/converter/obj_mgr_arg_from_python.hpp	/^inline object_manager_ref_arg_from_python<Ref>::~object_manager_ref_arg_from_python()$/;"	f	class:boost::python::converter::object_manager_ref_arg_from_python	signature:()
~py_function_impl_base	/usr/include/boost/python/object/py_function.hpp	/^    virtual ~py_function_impl_base();$/;"	p	struct:boost::python::objects::py_function_impl_base	access:public	signature:()
~registration	/usr/include/boost/python/converter/registrations.hpp	/^   ~registration();$/;"	p	struct:boost::python::converter::registration	access:public	signature:()
~rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^    ~rvalue_from_python_data();$/;"	p	struct:boost::python::converter::rvalue_from_python_data	access:public	signature:()
~rvalue_from_python_data	/usr/include/boost/python/converter/rvalue_from_python_data.hpp	/^inline rvalue_from_python_data<T>::~rvalue_from_python_data()$/;"	f	class:boost::python::converter::rvalue_from_python_data	signature:()
~scope	/usr/include/boost/python/scope.hpp	/^    inline ~scope();$/;"	p	class:boost::python::scope	access:public	signature:()
~scope	/usr/include/boost/python/scope.hpp	/^inline scope::~scope()$/;"	f	class:boost::python::scope	signature:()
~shared_ptr_deleter	/usr/include/boost/python/converter/shared_ptr_deleter.hpp	/^    ~shared_ptr_deleter();$/;"	p	struct:boost::python::converter::shared_ptr_deleter	access:public	signature:()
